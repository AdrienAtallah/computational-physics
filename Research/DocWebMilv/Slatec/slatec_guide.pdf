%PDF-1.1
3 0 obj
<< /Type /Font /Name /R3 /Subtype /Type1 /BaseFont /Courier >>
endobj
4 0 obj
<< /Length 5 0 R >>
stream
q
BT
/R3 10 Tf
1 0 0 1 54 711.9 Tm
( ) Tj
1 0 0 1 54 701.4 Tm
( ) Tj
1 0 0 1 54 690.9 Tm
( ) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
(           *********************************************************) Tj
1 0 0 1 54 659.4 Tm
(           *                                                       *) Tj
1 0 0 1 54 648.9 Tm
(           *    Guide to the SLATEC Common Mathematical Library    *) Tj
1 0 0 1 54 638.4 Tm
(           *                                                       *) Tj
1 0 0 1 54 627.9 Tm
(           *********************************************************) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
(                                 Kirby W. Fong) Tj
1 0 0 1 54 585.9 Tm
(                 National Magnetic Fusion Energy Computer Center) Tj
1 0 0 1 54 575.4 Tm
(                     Lawrence Livermore National Laboratory) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
( ) Tj
1 0 0 1 54 543.9 Tm
(                              Thomas H. Jefferson) Tj
1 0 0 1 54 533.4 Tm
(                           Operating Systems Division) Tj
1 0 0 1 54 522.9 Tm
(                     Sandia National Laboratories Livermore) Tj
1 0 0 1 54 512.4 Tm
( ) Tj
1 0 0 1 54 501.9 Tm
( ) Tj
1 0 0 1 54 491.4 Tm
(                               Tokihiko Suyehiro) Tj
1 0 0 1 54 480.9 Tm
(                   Computing and Mathematics Research Division) Tj
1 0 0 1 54 470.4 Tm
(                     Lawrence Livermore National Laboratory) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
( ) Tj
1 0 0 1 54 438.9 Tm
(                                   Lee Walton) Tj
1 0 0 1 54 428.4 Tm
(                           Network Analysis Division) Tj
1 0 0 1 54 417.9 Tm
(                    Sandia National Laboratories Albuquerque) Tj
1 0 0 1 54 407.4 Tm
( ) Tj
1 0 0 1 54 396.9 Tm
(                                   July 1993) Tj
1 0 0 1 54 386.4 Tm
( ) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(                               Table of Contents) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(SECTION 1.  ABSTRACT) Tj
1 0 0 1 54 281.4 Tm
(SECTION 2.  BACKGROUND) Tj
1 0 0 1 54 270.9 Tm
(SECTION 3.  MEMBERS OF THE SLATEC COMMON MATHEMATICAL LIBRARY SUBCOMMITTEE) Tj
1 0 0 1 54 260.4 Tm
(SECTION 4.  OBTAINING THE LIBRARY) Tj
1 0 0 1 54 249.9 Tm
(SECTION 5.  CODE SUBMISSION PROCEDURES) Tj
1 0 0 1 54 239.4 Tm
(SECTION 6.  CODING GUIDELINES--GENERAL REQUIREMENTS FOR SLATEC) Tj
1 0 0 1 54 228.9 Tm
(SECTION 7.  SOURCE CODE FORMAT) Tj
1 0 0 1 54 218.4 Tm
(SECTION 8.  PROLOGUE FORMAT FOR SUBPROGRAMS) Tj
1 0 0 1 54 207.9 Tm
(SECTION 9.  EXAMPLES OF PROLOGUES) Tj
1 0 0 1 54 197.4 Tm
(SECTION 10. SLATEC QUICK CHECK PHILOSOPHY) Tj
1 0 0 1 54 186.9 Tm
(SECTION 11. SPECIFIC PROGRAMMING STANDARDS FOR SLATEC QUICK CHECKS) Tj
1 0 0 1 54 176.4 Tm
(SECTION 12. QUICK CHECK DRIVERS \(MAIN PROGRAMS\)) Tj
1 0 0 1 54 165.9 Tm
(SECTION 13. QUICK CHECK SUBROUTINE EXAMPLE) Tj
1 0 0 1 54 155.4 Tm
(SECTION 14. QUICK CHECK MAIN PROGRAM EXAMPLE) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
(APPENDIX A.  GAMS \(AND SLATEC\) CLASSIFICATION SCHEME) Tj
1 0 0 1 54 123.9 Tm
(APPENDIX B.  MACHINE CONSTANTS) Tj
1 0 0 1 54 113.4 Tm
(APPENDIX C.  ERROR HANDLING) Tj
1 0 0 1 54 102.9 Tm
(APPENDIX D.  DISTRIBUTION FILE STRUCTURE) Tj
1 0 0 1 54 92.4 Tm
(APPENDIX E.  SUGGESTED FORMAT FOR A SLATEC SUBPROGRAM) Tj
1 0 0 1 54 81.9 Tm
( ) Tj
ET
Q
endstream
endobj
5 0 obj
3594
endobj
6 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R3 3 0 R
>>
>>
/Contents 4 0 R
>>
endobj
7 0 obj
<< /Type /Font /Name /R7 /Subtype /Type1 /BaseFont /Courier >>
endobj
8 0 obj
<< /Length 9 0 R >>
stream
q
BT
/R7 10 Tf
1 0 0 1 54 711.9 Tm
(ACKNOWLEDGEMENT) Tj
1 0 0 1 54 701.4 Tm
(REFERENCES) Tj
1 0 0 1 54 690.9 Tm
( ) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
( ) Tj
1 0 0 1 54 659.4 Tm
( ) Tj
1 0 0 1 54 648.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 638.4 Tm
( ) Tj
1 0 0 1 54 627.9 Tm
(SECTION 1.  ABSTRACT) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
(This document is a guide to the SLATEC Common Mathematical Library \(CML\) [1].) Tj
1 0 0 1 54 596.4 Tm
(The SLATEC CML is written in FORTRAN 77 \(ANSI standard FORTRAN as defined by) Tj
1 0 0 1 54 585.9 Tm
(ANSI X3.9-1978, reference [6]\) and contains general purpose mathematical and) Tj
1 0 0 1 54 575.4 Tm
(statistical routines.  Included in this document are a Library description,) Tj
1 0 0 1 54 564.9 Tm
(code submission procedures, and a detailed description of the source file) Tj
1 0 0 1 54 554.4 Tm
(format.  This report serves as a guide for programmers who are preparing codes) Tj
1 0 0 1 54 543.9 Tm
(for inclusion in the library.  It also provides the information needed to) Tj
1 0 0 1 54 533.4 Tm
(process the source file automatically for purposes such as extracting) Tj
1 0 0 1 54 522.9 Tm
(documentation or inserting usage monitoring calls.  This guide will be updated) Tj
1 0 0 1 54 512.4 Tm
(periodically, so be sure to contact a SLATEC CML subcommittee member to ensure) Tj
1 0 0 1 54 501.9 Tm
(you have the latest version.) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
( ) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
(SECTION 2.  BACKGROUND) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(SLATEC is the acronym for the Sandia, Los Alamos, Air Force Weapons Laboratory) Tj
1 0 0 1 54 396.9 Tm
(Technical Exchange Committee.  This organization was formed in 1974 by the) Tj
1 0 0 1 54 386.4 Tm
(computer centers of Sandia National Laboratories Albuquerque, Los Alamos) Tj
1 0 0 1 54 375.9 Tm
(National Laboratory, and Air Force Weapons Laboratory to foster the exchange of) Tj
1 0 0 1 54 365.4 Tm
(technical information.  The parent committee established several subcommittees) Tj
1 0 0 1 54 354.9 Tm
(to deal with various computing specialties.  The SLATEC Common Mathematical) Tj
1 0 0 1 54 344.4 Tm
(Library \(CML\) Subcommittee decided in 1977 to construct a mathematical FORTRAN) Tj
1 0 0 1 54 333.9 Tm
(subprogram library that could be used on a variety of computers at the three) Tj
1 0 0 1 54 323.4 Tm
(sites. A primary impetus for the library development was to provide portable,) Tj
1 0 0 1 54 312.9 Tm
(non-proprietary, mathematical software for member sites' supercomputers.) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(In l980 the computer centers of Sandia National Laboratories Livermore and the) Tj
1 0 0 1 54 281.4 Tm
(Lawrence Livermore National Laboratory were admitted as members of the parent) Tj
1 0 0 1 54 270.9 Tm
(committee and subcommittees. Lawrence Livermore National Laboratory, unlike the) Tj
1 0 0 1 54 260.4 Tm
(others, has two separate computer centers: the National Magnetic Fusion Energy) Tj
1 0 0 1 54 249.9 Tm
(Computer Center \(NMFECC\) and the Livermore Computer Center \(LCC\).  In 1981 the) Tj
1 0 0 1 54 239.4 Tm
(National Bureau of Standards \(now the National Institute of Standards and) Tj
1 0 0 1 54 228.9 Tm
(Technology\) and the Oak Ridge National Laboratory were invited to participate) Tj
1 0 0 1 54 218.4 Tm
(in the math library subcommittee because of their great interest in the) Tj
1 0 0 1 54 207.9 Tm
(project.) Tj
1 0 0 1 54 197.4 Tm
( ) Tj
1 0 0 1 54 186.9 Tm
(Version 1.0 of the CML was released in April 1982 with 114,328 records and 491) Tj
1 0 0 1 54 176.4 Tm
(user-callable routines.  In May 1984 Version 2.0, with 151,864 records and 646) Tj
1 0 0 1 54 165.9 Tm
(user-callable routines was released.  This was followed in April 1986 by) Tj
1 0 0 1 54 155.4 Tm
(Version 3.0 with 196,013 records and 704 user-callable routines.  Version 3.1) Tj
1 0 0 1 54 144.9 Tm
(followed in August 1987 with 197,931 records and 707 user-callable routines) Tj
1 0 0 1 54 134.4 Tm
(and Version 3.2 in August 1989 with 203,587 records and 709 user-callable) Tj
1 0 0 1 54 123.9 Tm
(routines.  The committee released Version 4.0 in December 1992 with 298,954) Tj
1 0 0 1 54 113.4 Tm
(records and 901 user-callable routines.  Finally, on July 1, 1993, Version 4.1) Tj
1 0 0 1 54 102.9 Tm
(was released with 290,907 records and 902 user-callable routines.) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(The sole documentation provided by SLATEC for the routines of the SLATEC) Tj
ET
Q
endstream
endobj
9 0 obj
4758
endobj
10 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R7 7 0 R
>>
>>
/Contents 8 0 R
>>
endobj
11 0 obj
<< /Type /Font /Name /R11 /Subtype /Type1 /BaseFont /Courier >>
endobj
12 0 obj
<< /Length 13 0 R >>
stream
q
BT
/R11 10 Tf
1 0 0 1 54 711.9 Tm
(Library is via comment lines in the source code.  Although the library comes) Tj
1 0 0 1 54 701.4 Tm
(with portable documentation programs to help users access the documentation in) Tj
1 0 0 1 54 690.9 Tm
(the source code, various installations may wish to use their own documentation) Tj
1 0 0 1 54 680.4 Tm
(programs.  To facilitate automatic extraction of documentation or further) Tj
1 0 0 1 54 669.9 Tm
(processing by other computer programs, the source file for each routine must) Tj
1 0 0 1 54 659.4 Tm
(be arranged in a precise format.  This document describes that format for the) Tj
1 0 0 1 54 648.9 Tm
(benefit of potential library contributors and for those interested in) Tj
1 0 0 1 54 638.4 Tm
(extracting library documentation from the source code.) Tj
1 0 0 1 54 627.9 Tm
( ) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 575.4 Tm
( ) Tj
1 0 0 1 54 564.9 Tm
(SECTION 3.  MEMBERS OF THE SLATEC COMMON MATHEMATICAL LIBRARY SUBCOMMITTEE) Tj
1 0 0 1 54 554.4 Tm
( ) Tj
1 0 0 1 54 543.9 Tm
(Current member sites and voting members of the subcommittee are the) Tj
1 0 0 1 54 533.4 Tm
(following.) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
( ) Tj
1 0 0 1 54 501.9 Tm
(Air Force Phillips Laboratory, Kirtland \(PLK\)          Reginald Clemens) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
(Lawrence Livermore National Laboratory \(LCC\)           Fred N. Fritsch) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
(Lawrence Livermore National Laboratory \(NERSC\)         Steve Buonincontri) Tj
1 0 0 1 54 449.4 Tm
( ) Tj
1 0 0 1 54 438.9 Tm
(Los Alamos National Laboratory \(LANL\)                  W. Robert Boland) Tj
1 0 0 1 54 428.4 Tm
(                                                       \(Chairman\)) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(National Institute of Standards and Technology \(NIST\)  Daniel W. Lozier) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(Oak Ridge National Laboratory \(ORNL\)                   Thomas H. Rowan) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
(Sandia National Laboratories/California \(SNL/CA\)       Thomas H. Jefferson) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
(Sandia National Laboratories/New Mexico \(SNL/NM\)       Sue Goudy) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
( ) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 281.4 Tm
( ) Tj
1 0 0 1 54 270.9 Tm
(SECTION 4.  OBTAINING THE LIBRARY) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
(The Library is in the public domain and distributed by the Energy Science) Tj
1 0 0 1 54 239.4 Tm
(and Technology Software Center.) Tj
1 0 0 1 54 228.9 Tm
( ) Tj
1 0 0 1 54 218.4 Tm
(               Energy Science and Technology Software Center) Tj
1 0 0 1 54 207.9 Tm
(               P.O. Box 1020) Tj
1 0 0 1 54 197.4 Tm
(               Oak Ridge, TN  37831) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
(               Telephone  615-576-2606) Tj
1 0 0 1 54 165.9 Tm
(               E-mail  estsc%a1.adonis.mrouter@zeus.osti.gov) Tj
1 0 0 1 54 155.4 Tm
( ) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
( ) Tj
1 0 0 1 54 123.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
(SECTION 5.  CODE SUBMISSION PROCEDURES) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(The SLATEC Library is continuously searching for portable high-quality routines) Tj
ET
Q
endstream
endobj
13 0 obj
3724
endobj
14 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R11 11 0 R
>>
>>
/Contents 12 0 R
>>
endobj
15 0 obj
<< /Type /Font /Name /R15 /Subtype /Type1 /BaseFont /Courier >>
endobj
16 0 obj
<< /Length 17 0 R >>
stream
q
BT
/R15 10 Tf
1 0 0 1 54 711.9 Tm
(written in FORTRAN 77 that would be of interest to the member sites.  The) Tj
1 0 0 1 54 701.4 Tm
(subcommittee meets several times annually with the member sites rotating as) Tj
1 0 0 1 54 690.9 Tm
(meeting hosts.  At these meetings new routines are introduced, discussed, and) Tj
1 0 0 1 54 680.4 Tm
(eventually voted on for inclusion in the library.  Some of the factors that are) Tj
1 0 0 1 54 669.9 Tm
(considered in deciding whether to accept a routine into the Library are the) Tj
1 0 0 1 54 659.4 Tm
(following:) Tj
1 0 0 1 54 648.9 Tm
( ) Tj
1 0 0 1 54 638.4 Tm
( ) Tj
1 0 0 1 54 627.9 Tm
(1.  Usefulness.  Does the routine fill a void in the Library?  Will the routine) Tj
1 0 0 1 54 617.4 Tm
(    have widespread appeal?  Will it add a new capability?) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
(2.  Robustness.  Does the routine give accurate results over a wide range of) Tj
1 0 0 1 54 585.9 Tm
(    problems?  Does it diagnose errors?  Is the routine well tested?) Tj
1 0 0 1 54 575.4 Tm
( ) Tj
1 0 0 1 54 564.9 Tm
(3.  Maintainability.  Is the author willing to respond to bugs in the routine?) Tj
1 0 0 1 54 554.4 Tm
(    Does the source code follow good programming practices?) Tj
1 0 0 1 54 543.9 Tm
( ) Tj
1 0 0 1 54 533.4 Tm
(4.  Adherence to SLATEC standards and coding guidelines.  These standards) Tj
1 0 0 1 54 522.9 Tm
(    are described further in this guide and include such things as the order) Tj
1 0 0 1 54 512.4 Tm
(    of subprogram arguments, the presence of a correctly formatted prologue at) Tj
1 0 0 1 54 501.9 Tm
(    the start of each routine, and the naming of routines.) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
(5.  Good documentation.  Is clear, concise computer readable documentation) Tj
1 0 0 1 54 470.4 Tm
(    built into the source code?) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(6.  Freely distributable.  Is the program in the public domain?) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
( ) Tj
1 0 0 1 54 417.9 Tm
(A typical submission procedure begins with contact between an author and a) Tj
1 0 0 1 54 407.4 Tm
(Library committee member.  Preliminary discussions with the member are) Tj
1 0 0 1 54 396.9 Tm
(encouraged for initial screening of any code and to gain insight into the) Tj
1 0 0 1 54 386.4 Tm
(workings of SLATEC.  This member champions the routine to be considered.  The) Tj
1 0 0 1 54 375.9 Tm
(code is introduced at a meeting where the author or committee member describes) Tj
1 0 0 1 54 365.4 Tm
(the code and explains why it would be suitable for SLATEC.  Copies of the code) Tj
1 0 0 1 54 354.9 Tm
(are distributed to all committee members.  Hopefully, the code already adheres) Tj
1 0 0 1 54 344.4 Tm
(to SLATEC standards.  However, most codes do not.  At this first formal) Tj
1 0 0 1 54 333.9 Tm
(discussion, the committee members are able to provide some useful suggestions) Tj
1 0 0 1 54 323.4 Tm
(for improving the code and revising it for SLATEC.) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
(Between meetings, changes are made to the code and the modified code is) Tj
1 0 0 1 54 291.9 Tm
(distributed in machine readable format for testing.  The code is then) Tj
1 0 0 1 54 281.4 Tm
(considered at a subsequent meeting, to be voted on and accepted. However,) Tj
1 0 0 1 54 270.9 Tm
(because committee members and authors do not always see eye to eye, and because) Tj
1 0 0 1 54 260.4 Tm
(time constraints affect all, the code is usually discussed at several meetings.) Tj
1 0 0 1 54 249.9 Tm
( ) Tj
1 0 0 1 54 239.4 Tm
(If codes adhered to the programming practices and formatting described in this) Tj
1 0 0 1 54 228.9 Tm
(guide, the time for acceptance could be greatly reduced.) Tj
1 0 0 1 54 218.4 Tm
( ) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
( ) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
(SECTION 6.  CODING GUIDELINES--GENERAL REQUIREMENTS FOR SLATEC) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
(A software collection of the size of the SLATEC Library that is designed to run) Tj
1 0 0 1 54 123.9 Tm
(on a variety of computers demands uniformity in handling machine dependencies,) Tj
1 0 0 1 54 113.4 Tm
(in handling error conditions, and in installation procedures.  Thus, while the) Tj
1 0 0 1 54 102.9 Tm
(decision to add a new subroutine to the library depends mostly on its quality) Tj
1 0 0 1 54 92.4 Tm
(and whether it fills a gap in the library, these are not the only) Tj
1 0 0 1 54 81.9 Tm
(considerations.  Programming style must also be considered, so that the library) Tj
ET
Q
endstream
endobj
17 0 obj
4710
endobj
18 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R15 15 0 R
>>
>>
/Contents 16 0 R
>>
endobj
19 0 obj
<< /Type /Font /Name /R19 /Subtype /Type1 /BaseFont /Courier >>
endobj
20 0 obj
<< /Length 21 0 R >>
stream
q
BT
/R19 10 Tf
1 0 0 1 54 711.9 Tm
(as a whole behaves in a consistent manner.  We now list the stylistic and) Tj
1 0 0 1 54 701.4 Tm
(documentational recommendations and requirements for routines to be) Tj
1 0 0 1 54 690.9 Tm
(incorporated into the library.) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
( ) Tj
1 0 0 1 54 659.4 Tm
(1.  The SLATEC Library is intended to have no restriction on its distribution;) Tj
1 0 0 1 54 648.9 Tm
(    therefore, new routines must be in the public domain.  This is generally) Tj
1 0 0 1 54 638.4 Tm
(    not a problem since most authors are proud of their work and would like) Tj
1 0 0 1 54 627.9 Tm
(    their routines to be used widely.) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
(2.  Routines must be written in FORTRAN 77 \(ANSI standard FORTRAN as) Tj
1 0 0 1 54 596.4 Tm
(    defined by ANSI X3.9-1978, reference [6]\).  Care must be taken so that) Tj
1 0 0 1 54 585.9 Tm
(    machine dependent features are not used.) Tj
1 0 0 1 54 575.4 Tm
( ) Tj
1 0 0 1 54 564.9 Tm
(3.  To enhance maintainability codes are to be modular in structure.  Codes) Tj
1 0 0 1 54 554.4 Tm
(    must be composed of reasonably small subprograms which in turn are made) Tj
1 0 0 1 54 543.9 Tm
(    up of easily understandable blocks.) Tj
1 0 0 1 54 533.4 Tm
( ) Tj
1 0 0 1 54 522.9 Tm
(4.  Equivalent routines of different precision are to look the same where) Tj
1 0 0 1 54 512.4 Tm
(    possible.  That is, the logical structure, statement numbers, variable) Tj
1 0 0 1 54 501.9 Tm
(    names, etc. are to be as close to identical as possible.  This implies) Tj
1 0 0 1 54 491.4 Tm
(    that generic intrinsics must be used instead of specific intrinsics.) Tj
1 0 0 1 54 480.9 Tm
(    Extraneous use of INT, REAL and DBLE are strongly discouraged;  use) Tj
1 0 0 1 54 470.4 Tm
(    mixed-mode expressions in accordance with the Fortran 77 standard.) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(5.  New routines must build on existing routines in the Library, unless) Tj
1 0 0 1 54 438.9 Tm
(    there are compelling reasons to do otherwise.  For example, the SLATEC) Tj
1 0 0 1 54 428.4 Tm
(    Library contains the LINPACK and EISPACK routines, so new routines) Tj
1 0 0 1 54 417.9 Tm
(    should use the existing linear system and eigensystem routines rather) Tj
1 0 0 1 54 407.4 Tm
(    than introduce new ones.) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(6.  System or machine dependent values must be obtained by calling routines) Tj
1 0 0 1 54 375.9 Tm
(    D1MACH, I1MACH, and R1MACH.  The SLATEC Library has adopted these routines) Tj
1 0 0 1 54 365.4 Tm
(    from the Bell Laboratories' PORT Library [2] [3].  See Appendix B) Tj
1 0 0 1 54 354.9 Tm
(    for a description of these machine dependent routines.) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(7.  The SLATEC Library has a set of routines for handling error messages.) Tj
1 0 0 1 54 323.4 Tm
(    Each user-callable routine, if it can detect errors, must have as one) Tj
1 0 0 1 54 312.9 Tm
(    of its arguments an error flag, whose value upon exiting the routine) Tj
1 0 0 1 54 302.4 Tm
(    indicates the success or failure of the routine. It is acceptable for a) Tj
1 0 0 1 54 291.9 Tm
(    routine to set the error flag and RETURN; however, if the routine wishes) Tj
1 0 0 1 54 281.4 Tm
(    to write an error message, it must call XERMSG \(see Appendix C\) rather) Tj
1 0 0 1 54 270.9 Tm
(    than use WRITE or PRINT statements.  In general, all errors \(even serious) Tj
1 0 0 1 54 260.4 Tm
(    ones\) should be designated as "recoverable" rather than "fatal," and the) Tj
1 0 0 1 54 249.9 Tm
(    routine should RETURN to the user.  This permits the user to try an) Tj
1 0 0 1 54 239.4 Tm
(    alternate strategy if a routine decides a particular calculation is) Tj
1 0 0 1 54 228.9 Tm
(    inappropriate.  A description of the entire original error handling) Tj
1 0 0 1 54 218.4 Tm
(    package appears in reference [4].) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
(8.  Each user-callable routine \(and subsidiary routine if appropriate\) must) Tj
1 0 0 1 54 186.9 Tm
(    have a small demonstration routine that can be used as a quick check. This) Tj
1 0 0 1 54 176.4 Tm
(    demonstration routine can be more exhaustive, but in general, it should be) Tj
1 0 0 1 54 165.9 Tm
(    structured to provide a "pass" or "fail" answer on whether the library) Tj
1 0 0 1 54 155.4 Tm
(    routine appears to be functioning properly.  A more detailed description) Tj
1 0 0 1 54 144.9 Tm
(    of the required format of the quick checks appears later in this document.) Tj
1 0 0 1 54 134.4 Tm
( ) Tj
1 0 0 1 54 123.9 Tm
(9.  Common blocks and SAVEd variables must be avoided.  Use subprogram) Tj
1 0 0 1 54 113.4 Tm
(    arguments for interprogram communication.  The use of these constructs) Tj
1 0 0 1 54 102.9 Tm
(    often obstructs multiprocessing.) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(    Variables that are statically allocated in memory and are used as) Tj
ET
Q
endstream
endobj
21 0 obj
5019
endobj
22 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R19 19 0 R
>>
>>
/Contents 20 0 R
>>
endobj
23 0 obj
<< /Type /Font /Name /R23 /Subtype /Type1 /BaseFont /Courier >>
endobj
24 0 obj
<< /Length 25 0 R >>
stream
q
BT
/R23 10 Tf
1 0 0 1 54 711.9 Tm
(    working storage cannot be used simultaneously by several processors.) Tj
1 0 0 1 54 701.4 Tm
(    SAVEd variables and common block variables are most likely to fall into) Tj
1 0 0 1 54 690.9 Tm
(    this category.  Such variables are acceptable if they are DATA loaded or) Tj
1 0 0 1 54 680.4 Tm
(    set at run time to values that are to be read \(but not written\) since it) Tj
1 0 0 1 54 669.9 Tm
(    does not matter in what order multiple processors read the values.) Tj
1 0 0 1 54 659.4 Tm
(    However, such variables should not be used as working storage since no) Tj
1 0 0 1 54 648.9 Tm
(    processor can use the work space while some other processor is using it.) Tj
1 0 0 1 54 638.4 Tm
(    Library routines should ask the user to provide any needed work space) Tj
1 0 0 1 54 627.9 Tm
(    by passing it in as an argument.  The user is then responsible for) Tj
1 0 0 1 54 617.4 Tm
(    giving each processor a different work space even though each processor) Tj
1 0 0 1 54 606.9 Tm
(    may be executing the same library routine.) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(10. Complete self-contained documentation must be supplied as comments in) Tj
1 0 0 1 54 575.4 Tm
(    user-callable routines.  This documentation must be self-contained because) Tj
1 0 0 1 54 564.9 Tm
(    SLATEC provides no other documentation for using the routines.  This) Tj
1 0 0 1 54 554.4 Tm
(    documentation is called the "prologue" for the routine.  The rigid prologue) Tj
1 0 0 1 54 543.9 Tm
(    format for user-callable routines is described below.  The prologue must) Tj
1 0 0 1 54 533.4 Tm
(    tell the user how to call the routine but need not go into algorithmic) Tj
1 0 0 1 54 522.9 Tm
(    details since such explanations often require diagrams or non-ASCII) Tj
1 0 0 1 54 512.4 Tm
(    symbols.  Subsidiary routines are those called by other library routines) Tj
1 0 0 1 54 501.9 Tm
(    but which are not intended to be called directly by the user.  Subsidiary) Tj
1 0 0 1 54 491.4 Tm
(    routines also have prologues, but these prologues are considerably less) Tj
1 0 0 1 54 480.9 Tm
(    elaborate than those of user-callable routines.) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
(11. No output should be printed.  Instead, information should be returned) Tj
1 0 0 1 54 449.4 Tm
(    to the user via the subprogram arguments or function values.  If there is) Tj
1 0 0 1 54 438.9 Tm
(    some overriding reason that printed output is necessary, the user must be) Tj
1 0 0 1 54 428.4 Tm
(    able to suppress all output by means of a subprogram input variable.) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
( ) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
( ) Tj
1 0 0 1 54 375.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
(SECTION 7.  SOURCE CODE FORMAT) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(In this section and the two sections on prologues, we use the caret \(^\)) Tj
1 0 0 1 54 323.4 Tm
(character to indicate a position in which a single blank character must) Tj
1 0 0 1 54 312.9 Tm
(appear. Upper case letters are used for information that appears literally.) Tj
1 0 0 1 54 302.4 Tm
(Lower case is used for material specific to the routine.) Tj
1 0 0 1 54 291.9 Tm
( ) Tj
1 0 0 1 54 281.4 Tm
(1.  The first line of a subprogram must start with one of:) Tj
1 0 0 1 54 270.9 Tm
( ) Tj
1 0 0 1 54 260.4 Tm
(    SUBROUTINE^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 249.9 Tm
(    FUNCTION^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 239.4 Tm
(    COMPLEX^FUNCTION^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 228.9 Tm
(    DOUBLE^PRECISION^FUNCTION^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 218.4 Tm
(    INTEGER^FUNCTION^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 207.9 Tm
(    REAL^FUNCTION^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 197.4 Tm
(    LOGICAL^FUNCTION^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 186.9 Tm
(    CHARACTER[*len]^FUNCTION^name^\(arg1,^arg2,^...argn\)) Tj
1 0 0 1 54 176.4 Tm
( ) Tj
1 0 0 1 54 165.9 Tm
(    Each of the above lines starts in column 7.  If there is an argument) Tj
1 0 0 1 54 155.4 Tm
(    list, then there is exactly one blank after the subprogram name and) Tj
1 0 0 1 54 144.9 Tm
(    after each comma \(except if the comma appears in column 72\).  There is) Tj
1 0 0 1 54 134.4 Tm
(    no embedded blank in any formal parameter, after the leading left) Tj
1 0 0 1 54 123.9 Tm
(    parenthesis, before the trailing right parenthesis,  or before any) Tj
1 0 0 1 54 113.4 Tm
(    comma. Formal parameters are never split across lines. Any line to be) Tj
1 0 0 1 54 102.9 Tm
(    continued must end with a comma.) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(    For continuation lines, any legal continuation character may be used in) Tj
ET
Q
endstream
endobj
25 0 obj
4879
endobj
26 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R23 23 0 R
>>
>>
/Contents 24 0 R
>>
endobj
27 0 obj
<< /Type /Font /Name /R27 /Subtype /Type1 /BaseFont /Courier >>
endobj
28 0 obj
<< /Length 29 0 R >>
stream
q
BT
/R27 10 Tf
1 0 0 1 54 711.9 Tm
(    column 6, columns 7-9 must be blank and arguments or formal parameters) Tj
1 0 0 1 54 701.4 Tm
(    start in column 10 of a continuation line and continue up to the right) Tj
1 0 0 1 54 690.9 Tm
(    parenthesis \(or comma if another continuation line is needed\).  The) Tj
1 0 0 1 54 680.4 Tm
(    brackets in the CHARACTER declaration do not appear literally but) Tj
1 0 0 1 54 669.9 Tm
(    indicate the optional length specification described in the FORTRAN 77) Tj
1 0 0 1 54 659.4 Tm
(    standard.) Tj
1 0 0 1 54 648.9 Tm
( ) Tj
1 0 0 1 54 638.4 Tm
(2.  The author must supply a prologue for each subprogram.  The prologue) Tj
1 0 0 1 54 627.9 Tm
(    must be in the format that will subsequently be described.  The) Tj
1 0 0 1 54 617.4 Tm
(    prologue begins with the first line after the subprogram declaration) Tj
1 0 0 1 54 606.9 Tm
(    \(including continuation lines for long argument lists\).) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(3.  Except for the "C***" lines \(to be described\) in the prologue and) Tj
1 0 0 1 54 575.4 Tm
(    the "C***" line marking the first executable statement, no other line) Tj
1 0 0 1 54 564.9 Tm
(    may begin with "C***".) Tj
1 0 0 1 54 554.4 Tm
( ) Tj
1 0 0 1 54 543.9 Tm
(4.  The first line of the prologue is the comment line) Tj
1 0 0 1 54 533.4 Tm
( ) Tj
1 0 0 1 54 522.9 Tm
(    C***BEGIN^PROLOGUE^^name) Tj
1 0 0 1 54 512.4 Tm
( ) Tj
1 0 0 1 54 501.9 Tm
(    where "name", starting in column 21, is the name of the subprogram.) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
(5.  The last line of a subprogram is the word "END" starting in column 7.) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
(6.  All alphabetic characters, except for those on comment lines or in) Tj
1 0 0 1 54 449.4 Tm
(    character constants, must be upper case, as specified by the FORTRAN 77) Tj
1 0 0 1 54 438.9 Tm
(    standard \(see [6]\).) Tj
1 0 0 1 54 428.4 Tm
( ) Tj
1 0 0 1 54 417.9 Tm
(7.  In the prologue, the comment character in column 1 must be the upper) Tj
1 0 0 1 54 407.4 Tm
(    case "C".) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(8.  All subprogram, common block, and any formal parameter names mentioned in) Tj
1 0 0 1 54 375.9 Tm
(    the prologue must be in upper case.) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
(9.  Neither FORTRAN statements nor comment lines can extend beyond column 72.) Tj
1 0 0 1 54 344.4 Tm
(    Columns 73 through 80 are reserved for identification or sequence numbers.) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(10. Before the first executable statement of every subprogram, user-callable) Tj
1 0 0 1 54 312.9 Tm
(    or not, is the line) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(    C***FIRST^EXECUTABLE^STATEMENT^^name) Tj
1 0 0 1 54 281.4 Tm
( ) Tj
1 0 0 1 54 270.9 Tm
(    where "name" \(starting in column 33\) is the name of the subprogram.) Tj
1 0 0 1 54 260.4 Tm
(    Only comment lines may appear between the C***FIRST EXECUTABLE) Tj
1 0 0 1 54 249.9 Tm
(    STATEMENT line and the first executable statement.) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(11. The subprogram name consists of a maximum of six characters.  Authors) Tj
1 0 0 1 54 218.4 Tm
(    should choose unusual and distinctive subprogram names to minimize) Tj
1 0 0 1 54 207.9 Tm
(    possible name conflicts.  Double precision routines should begin with) Tj
1 0 0 1 54 197.4 Tm
(    "D".  Subprograms of type complex should begin with "C".  The letter "Z") Tj
1 0 0 1 54 186.9 Tm
(    is reserved for future use by possible double precision complex) Tj
1 0 0 1 54 176.4 Tm
(    subprograms.  No other subprograms should begin with either "D", "C", or) Tj
1 0 0 1 54 165.9 Tm
(    "Z".) Tj
1 0 0 1 54 155.4 Tm
( ) Tj
1 0 0 1 54 144.9 Tm
(12. The recommended order for the formal parameters is:) Tj
1 0 0 1 54 134.4 Tm
( ) Tj
1 0 0 1 54 123.9 Tm
(    1.  Names of external subprograms.) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
(    2.  Input variables.) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(    3.  Variables that are both input and output \(except error flags\).) Tj
ET
Q
endstream
endobj
29 0 obj
4158
endobj
30 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R27 27 0 R
>>
>>
/Contents 28 0 R
>>
endobj
31 0 obj
<< /Type /Font /Name /R31 /Subtype /Type1 /BaseFont /Courier >>
endobj
32 0 obj
<< /Length 33 0 R >>
stream
q
BT
/R31 10 Tf
1 0 0 1 54 711.9 Tm
( ) Tj
1 0 0 1 54 701.4 Tm
(    4.  Output variables.) Tj
1 0 0 1 54 690.9 Tm
( ) Tj
1 0 0 1 54 680.4 Tm
(    5.  Work arrays.) Tj
1 0 0 1 54 669.9 Tm
( ) Tj
1 0 0 1 54 659.4 Tm
(    6.  Error flags.) Tj
1 0 0 1 54 648.9 Tm
( ) Tj
1 0 0 1 54 638.4 Tm
(    However, array dimensioning parameters should immediately follow the) Tj
1 0 0 1 54 627.9 Tm
(    associated array name.) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
( ) Tj
1 0 0 1 54 575.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
(SECTION 8.  PROLOGUE FORMAT FOR SUBPROGRAMS) Tj
1 0 0 1 54 543.9 Tm
( ) Tj
1 0 0 1 54 533.4 Tm
(Each subprogram has a section called a prologue that gives standardized) Tj
1 0 0 1 54 522.9 Tm
(information about the routine.  The prologue consists of comment lines only.  A) Tj
1 0 0 1 54 512.4 Tm
(subsidiary subprogram is one that is usually called by another SLATEC Library) Tj
1 0 0 1 54 501.9 Tm
(subprogram only and is not meant to be called by a user's routine.  The) Tj
1 0 0 1 54 491.4 Tm
(prologue for a user-callable subprogram is more extensive than the prologue for) Tj
1 0 0 1 54 480.9 Tm
(a subsidiary subprogram.  The prologue for a user-callable subprogram has up to) Tj
1 0 0 1 54 470.4 Tm
(14 sections, of which 12 are required and one is required if and only if a) Tj
1 0 0 1 54 459.9 Tm
(common block is present.  Several of these sections are optional in subsidiary) Tj
1 0 0 1 54 449.4 Tm
(programs and in the quick check routines.  The sections are always in the) Tj
1 0 0 1 54 438.9 Tm
(order described in the table below.) Tj
1 0 0 1 54 428.4 Tm
( ) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(          Section           User-callable      Subsidiary     Quick Checks) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(   1.   BEGIN PROLOGUE        Required         Required       Required) Tj
1 0 0 1 54 375.9 Tm
(   2.   SUBSIDIARY            Not present      Required         Optional) Tj
1 0 0 1 54 365.4 Tm
(   3.   PURPOSE               Required         Required       Required) Tj
1 0 0 1 54 354.9 Tm
(   4.   LIBRARY   SLATEC      Required         Required       Required) Tj
1 0 0 1 54 344.4 Tm
(   5.   CATEGORY              Required           Optional       Optional) Tj
1 0 0 1 54 333.9 Tm
(   6.   TYPE                  Required         Required       Required) Tj
1 0 0 1 54 323.4 Tm
(   7.   KEYWORDS              Required           Optional       Optional) Tj
1 0 0 1 54 312.9 Tm
(   8.   AUTHOR                Required         Required       Required) Tj
1 0 0 1 54 302.4 Tm
(   9.   DESCRIPTION           Required           Optional       Optional) Tj
1 0 0 1 54 291.9 Tm
(  10.   SEE ALSO                Optional         Optional       Optional) Tj
1 0 0 1 54 281.4 Tm
(  11.   REFERENCES            Required           Optional       Optional) Tj
1 0 0 1 54 270.9 Tm
(  12.   ROUTINES CALLED       Required         Required       Required) Tj
1 0 0 1 54 260.4 Tm
(  13.   COMMON BLOCKS         Required***      Required***    Required***) Tj
1 0 0 1 54 249.9 Tm
(  14.   REVISION HISTORY      Required         Required       Required) Tj
1 0 0 1 54 239.4 Tm
(  15.   END PROLOGUE          Required         Required       Required) Tj
1 0 0 1 54 228.9 Tm
( ) Tj
1 0 0 1 54 218.4 Tm
(    ***Note:  The COMMON BLOCKS section appears in a subprogram prologue) Tj
1 0 0 1 54 207.9 Tm
(              if and only if the subprogram contains a common block.) Tj
1 0 0 1 54 197.4 Tm
( ) Tj
1 0 0 1 54 186.9 Tm
(In the prologue section descriptions that follow, the caret \(^\)) Tj
1 0 0 1 54 176.4 Tm
(character is used for emphasis to indicate a required blank character.) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
( ) Tj
1 0 0 1 54 144.9 Tm
(1.  BEGIN PROLOGUE) Tj
1 0 0 1 54 134.4 Tm
(    This section is a single line that immediately follows the subprogram) Tj
1 0 0 1 54 123.9 Tm
(    declaration and its continuation lines.  It is) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
(    C***BEGIN^PROLOGUE^^name) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(    where "name" \(beginning in column 21\) is the name of the subprogram.) Tj
ET
Q
endstream
endobj
33 0 obj
4282
endobj
34 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R31 31 0 R
>>
>>
/Contents 32 0 R
>>
endobj
35 0 obj
<< /Type /Font /Name /R35 /Subtype /Type1 /BaseFont /Courier >>
endobj
36 0 obj
<< /Length 37 0 R >>
stream
q
BT
/R35 10 Tf
1 0 0 1 54 711.9 Tm
( ) Tj
1 0 0 1 54 701.4 Tm
(2.  SUBSIDIARY) Tj
1 0 0 1 54 690.9 Tm
(    This section is the single line) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
(    C***SUBSIDIARY) Tj
1 0 0 1 54 659.4 Tm
( ) Tj
1 0 0 1 54 648.9 Tm
(    and indicates the routine in which this appears is not intended to be) Tj
1 0 0 1 54 638.4 Tm
(    user-callable.) Tj
1 0 0 1 54 627.9 Tm
( ) Tj
1 0 0 1 54 617.4 Tm
(3.  PURPOSE) Tj
1 0 0 1 54 606.9 Tm
(    This  section gives one to six lines of information on the purpose of the) Tj
1 0 0 1 54 596.4 Tm
(    subprogram.  The letters may be in upper or lower case.  There are no blank) Tj
1 0 0 1 54 585.9 Tm
(    lines in the purpose section; i.e., there are no lines consisting solely of) Tj
1 0 0 1 54 575.4 Tm
(    a "C" in column 1.  The format for the first line and any continuation) Tj
1 0 0 1 54 564.9 Tm
(    lines is) Tj
1 0 0 1 54 554.4 Tm
( ) Tj
1 0 0 1 54 543.9 Tm
(    C***PURPOSE^^information) Tj
1 0 0 1 54 533.4 Tm
(    C^^^^^^^^^^^^more information) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
(    Information begins in column 14 of the first line and no earlier than) Tj
1 0 0 1 54 501.9 Tm
(    column 14 of continuation lines.) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
(4.  LIBRARY   SLATEC) Tj
1 0 0 1 54 470.4 Tm
(    The section is a single line used to show that the routine is a part) Tj
1 0 0 1 54 459.9 Tm
(    of the SLATEC library and, optionally, to indicate other libraries,) Tj
1 0 0 1 54 449.4 Tm
(    collections, or packages \(sublibraries\) of which the routine is a part) Tj
1 0 0 1 54 438.9 Tm
(    or from which the routine has been derived.    The format is) Tj
1 0 0 1 54 428.4 Tm
( ) Tj
1 0 0 1 54 417.9 Tm
(    C***LIBRARY^^^SLATEC) Tj
1 0 0 1 54 407.4 Tm
(            or) Tj
1 0 0 1 54 396.9 Tm
(    C***LIBRARY^^^SLATEC^\(sublib1,^sublib2,^...sublibn\)) Tj
1 0 0 1 54 386.4 Tm
( ) Tj
1 0 0 1 54 375.9 Tm
(    The leading left parenthesis is immediately followed by the first member) Tj
1 0 0 1 54 365.4 Tm
(    of the list.  Each member, except for the last, is immediately followed by) Tj
1 0 0 1 54 354.9 Tm
(    a comma and a single blank.  The last member is immediately followed by) Tj
1 0 0 1 54 344.4 Tm
(    the trailing right parenthesis.) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(5.  CATEGORY) Tj
1 0 0 1 54 312.9 Tm
(    This section is a list of classification system categories to which) Tj
1 0 0 1 54 302.4 Tm
(    this subprogram might reasonably be assigned.  There must be at least) Tj
1 0 0 1 54 291.9 Tm
(    one list item.  The first category listed is termed the primary) Tj
1 0 0 1 54 281.4 Tm
(    category, and others, if given, should be listed in monotonically) Tj
1 0 0 1 54 270.9 Tm
(    decreasing order of importance.  Categories must be chosen from the) Tj
1 0 0 1 54 260.4 Tm
(    classification scheme listed in Appendix A.  The required format for the) Tj
1 0 0 1 54 249.9 Tm
(    initial line and any continuation lines is) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(    C***CATEGORY^^cat1,^cat2,^cat3,^...catn,) Tj
1 0 0 1 54 218.4 Tm
(    C^^^^^^^^^^^^^continued list) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
(    All alphabetic characters are in upper case.) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
(    Items in the list are separated by the two characters, comma and space.) Tj
1 0 0 1 54 165.9 Tm
(    If the list will not fit on one line, the line may be ended at a comma) Tj
1 0 0 1 54 155.4 Tm
(    \(with zero or more trailing spaces\), and be continued on the next line.) Tj
1 0 0 1 54 144.9 Tm
(    The list and any continuations of the list begin with a nonblank character) Tj
1 0 0 1 54 134.4 Tm
(    in column 15.) Tj
1 0 0 1 54 123.9 Tm
( ) Tj
1 0 0 1 54 113.4 Tm
(6.  TYPE) Tj
1 0 0 1 54 102.9 Tm
(    This section gives the datatype of the routine and indicates which) Tj
1 0 0 1 54 92.4 Tm
(    routines, including itself,  are equivalent \(except possibly for type\) to) Tj
1 0 0 1 54 81.9 Tm
(    the routine. The format for this section is) Tj
ET
Q
endstream
endobj
37 0 obj
4075
endobj
38 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R35 35 0 R
>>
>>
/Contents 36 0 R
>>
endobj
39 0 obj
<< /Type /Font /Name /R39 /Subtype /Type1 /BaseFont /Courier >>
endobj
40 0 obj
<< /Length 41 0 R >>
stream
q
BT
/R39 10 Tf
1 0 0 1 54 711.9 Tm
( ) Tj
1 0 0 1 54 701.4 Tm
(    C***TYPE^^^^^^routine_type^\(equivalence list) Tj
1 0 0 1 54 690.9 Tm
(    C^^^^^^^^^^^^^continued equivalence list) Tj
1 0 0 1 54 680.4 Tm
(    C^^^^^^^^^^^^^continued equivalence list\)) Tj
1 0 0 1 54 669.9 Tm
( ) Tj
1 0 0 1 54 659.4 Tm
(    Routine_type, starting in column 15, is the data type of the routine,) Tj
1 0 0 1 54 648.9 Tm
(    and is either SINGLE PRECISION, DOUBLE PRECISION, COMPLEX, INTEGER,) Tj
1 0 0 1 54 638.4 Tm
(    CHARACTER, LOGICAL, or ALL.  ALL is a pseudo-type given to routines that) Tj
1 0 0 1 54 627.9 Tm
(    could not reasonably be converted to some other type.  Their purpose is) Tj
1 0 0 1 54 617.4 Tm
(    typeless.  An example would be the SLATEC routine that prints error) Tj
1 0 0 1 54 606.9 Tm
(    messages.) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(    Equivalence list is a list of the routines \(including this one\) that are) Tj
1 0 0 1 54 575.4 Tm
(    equivalent to this one, but perhaps of a different type.  Each item in the) Tj
1 0 0 1 54 564.9 Tm
(    list consists of a routine name followed by the "-" character and then) Tj
1 0 0 1 54 554.4 Tm
(    followed by the first letter of the type \(except use "H" for type) Tj
1 0 0 1 54 543.9 Tm
(    CHARACTER\) of the equivalent routine.  The order of the items is S, D, C,) Tj
1 0 0 1 54 533.4 Tm
(    I, H, L and A.) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
(    The initial item in the list is immediately preceded by a blank and a) Tj
1 0 0 1 54 501.9 Tm
(    left parenthesis and the final item is immediately followed by a right) Tj
1 0 0 1 54 491.4 Tm
(    parenthesis.  Items in the list are separated by the two characters,) Tj
1 0 0 1 54 480.9 Tm
(    comma and space.  If the list will not fit on one line, the line may be) Tj
1 0 0 1 54 470.4 Tm
(    ended at a comma \(with zero or more trailing spaces\), and be continued) Tj
1 0 0 1 54 459.9 Tm
(    on the next line.  The list and any continuations of the list begin with) Tj
1 0 0 1 54 449.4 Tm
(    a nonblank character in column 15.) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
(    All alphabetic characters in this section are in upper case.) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(    Example) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(    C***TYPE      SINGLE PRECISION \(ACOSH-S, DACOSH-D, CACOSH-C\)) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
(7.  KEYWORDS) Tj
1 0 0 1 54 354.9 Tm
(    This section gives keywords or keyphrases that can be used by) Tj
1 0 0 1 54 344.4 Tm
(    information retrieval systems to identify subprograms that pertain to) Tj
1 0 0 1 54 333.9 Tm
(    the topic suggested by the keywords.  There must be at least one) Tj
1 0 0 1 54 323.4 Tm
(    keyword.  Keywords can have embedded blanks but may not have leading or) Tj
1 0 0 1 54 312.9 Tm
(    trailing blanks.  A keyword cannot be continued on the next line;  it) Tj
1 0 0 1 54 302.4 Tm
(    must be short enough to fit on one line. No keyword can have an embedded) Tj
1 0 0 1 54 291.9 Tm
(    comma. Characters are limited to the FORTRAN 77 character set \(in) Tj
1 0 0 1 54 281.4 Tm
(    particular, no lower case letters\).  There is no comma after the last) Tj
1 0 0 1 54 270.9 Tm
(    keyword in the list.  It is suggested that keywords be in either) Tj
1 0 0 1 54 260.4 Tm
(    alphabetical order or decreasing order of importance.  The format for) Tj
1 0 0 1 54 249.9 Tm
(    the initial line and any continuation lines is) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(    C***KEYWORDS^^list) Tj
1 0 0 1 54 218.4 Tm
(    C^^^^^^^^^^^^^continued list) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
(    Items in the list are separated by the two characters, comma and space.) Tj
1 0 0 1 54 186.9 Tm
(    If the list will not fit on one line, the line may be ended at a comma) Tj
1 0 0 1 54 176.4 Tm
(    \(with zero or more trailing spaces\), and be continued on the next line.) Tj
1 0 0 1 54 165.9 Tm
(    The list and any continuations of the list begin with a nonblank character) Tj
1 0 0 1 54 155.4 Tm
(    in column 15.) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
(8.  AUTHOR) Tj
1 0 0 1 54 123.9 Tm
(    This required section gives the author's name.  There must be at least one) Tj
1 0 0 1 54 113.4 Tm
(    author, and there may be coauthors.  At least the last name of the author) Tj
1 0 0 1 54 102.9 Tm
(    must be given.  The first name \(or initials\) is optional.  The company,) Tj
1 0 0 1 54 92.4 Tm
(    organization, or affiliation of the author is also optional.  The brackets) Tj
1 0 0 1 54 81.9 Tm
(    below indicate optional information.  Note that if an organization is to be) Tj
ET
Q
endstream
endobj
41 0 obj
4706
endobj
42 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R39 39 0 R
>>
>>
/Contents 40 0 R
>>
endobj
43 0 obj
<< /Type /Font /Name /R43 /Subtype /Type1 /BaseFont /Courier >>
endobj
44 0 obj
<< /Length 45 0 R >>
stream
q
BT
/R43 10 Tf
1 0 0 1 54 711.9 Tm
(    listed, the remainder of the author's name must also be given.  If the) Tj
1 0 0 1 54 701.4 Tm
(    remainder of the author's name is given, the last name is immediately) Tj
1 0 0 1 54 690.9 Tm
(    followed by a comma.  If the organization is given, the first name \(or) Tj
1 0 0 1 54 680.4 Tm
(    initials\) is immediately followed by a comma.  The remainder of the name) Tj
1 0 0 1 54 669.9 Tm
(    and the organization name may have embedded blanks.  The remainder of the) Tj
1 0 0 1 54 659.4 Tm
(    name may not have embedded commas.  This makes it possible for an) Tj
1 0 0 1 54 648.9 Tm
(    information retrieval system to count commas to identify the remainder of) Tj
1 0 0 1 54 638.4 Tm
(    the name and the name of an organization. Additional information about the) Tj
1 0 0 1 54 627.9 Tm
(    author \(e.g., address or telephone number\) may be given on subsequent) Tj
1 0 0 1 54 617.4 Tm
(    lines.  The templates used are) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
(    C***AUTHOR^^last-name[,^first-name[,^\(org\)]]) Tj
1 0 0 1 54 585.9 Tm
(    C^^^^^^^^^^^^^more information) Tj
1 0 0 1 54 575.4 Tm
(    C^^^^^^^^^^^^^more information) Tj
1 0 0 1 54 564.9 Tm
(        .) Tj
1 0 0 1 54 554.4 Tm
(        .) Tj
1 0 0 1 54 543.9 Tm
(        .) Tj
1 0 0 1 54 533.4 Tm
(    C^^^^^^^^^^^last-name[,^first-name[,^\(org\)]]) Tj
1 0 0 1 54 522.9 Tm
(    C^^^^^^^^^^^^^more information) Tj
1 0 0 1 54 512.4 Tm
(        .) Tj
1 0 0 1 54 501.9 Tm
(        .) Tj
1 0 0 1 54 491.4 Tm
(        .) Tj
1 0 0 1 54 480.9 Tm
( ) Tj
1 0 0 1 54 470.4 Tm
(    Each author's name starts in column 13.  Continued information starts in) Tj
1 0 0 1 54 459.9 Tm
(    column 15.) Tj
1 0 0 1 54 449.4 Tm
( ) Tj
1 0 0 1 54 438.9 Tm
(9.  DESCRIPTION) Tj
1 0 0 1 54 428.4 Tm
(    This section is a description giving the program abstract, method used,) Tj
1 0 0 1 54 417.9 Tm
(    argument descriptions, dimension information, consultants, etc.  The) Tj
1 0 0 1 54 407.4 Tm
(    description of the arguments is in exactly the same order in which the) Tj
1 0 0 1 54 396.9 Tm
(    arguments appear in the calling sequence.  The description section may use) Tj
1 0 0 1 54 386.4 Tm
(    standard, 7-bit ASCII graphic characters, i.e., the 94 printing characters) Tj
1 0 0 1 54 375.9 Tm
(    plus the blank.  Names of subprograms, common blocks, externals, and formal) Tj
1 0 0 1 54 365.4 Tm
(    parameters are all in upper case.  Names of variables are also in upper) Tj
1 0 0 1 54 354.9 Tm
(    case.  The first line of this section is "C***DESCRIPTION" starting in) Tj
1 0 0 1 54 344.4 Tm
(    column 1.  All subsequent lines in this section start with a "C" in column) Tj
1 0 0 1 54 333.9 Tm
(    1 and no character other than a blank in column 2.  Lines with only a "C") Tj
1 0 0 1 54 323.4 Tm
(    in column 1 may be used to improve the appearance of the description.) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
(    A suggested format for the DESCRIPTION section is given in Appendix E.) Tj
1 0 0 1 54 291.9 Tm
( ) Tj
1 0 0 1 54 281.4 Tm
(10. SEE ALSO) Tj
1 0 0 1 54 270.9 Tm
(    This section is used for listing other SLATEC routines whose prologues) Tj
1 0 0 1 54 260.4 Tm
(    contain documentation on the routine in which this section appears.) Tj
1 0 0 1 54 249.9 Tm
(    The form is) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(    C***SEE ALSO^^name,^name,^name) Tj
1 0 0 1 54 218.4 Tm
( ) Tj
1 0 0 1 54 207.9 Tm
(    where each "name" is the name of a user-callable SLATEC CML subprogram) Tj
1 0 0 1 54 197.4 Tm
(    whose prologue provides a description of this routine. The names are) Tj
1 0 0 1 54 186.9 Tm
(    given as a list \(starting in column 15\), with successive names separated) Tj
1 0 0 1 54 176.4 Tm
(    by a comma and a single blank.) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
(11. REFERENCES) Tj
1 0 0 1 54 144.9 Tm
(    This section is for references.  Any of the 94 ASCII printing characters) Tj
1 0 0 1 54 134.4 Tm
(    plus the blank may be used. There may be more than one reference.  If there) Tj
1 0 0 1 54 123.9 Tm
(    are no references, the section will consist of the single line) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
(    C***REFERENCES^^\(NONE\)) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(    If there are references, they will be in the following format:) Tj
ET
Q
endstream
endobj
45 0 obj
4385
endobj
46 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R43 43 0 R
>>
>>
/Contents 44 0 R
>>
endobj
47 0 obj
<< /Type /Font /Name /R47 /Subtype /Type1 /BaseFont /Courier >>
endobj
48 0 obj
<< /Length 49 0 R >>
stream
q
BT
/R47 10 Tf
1 0 0 1 54 711.9 Tm
( ) Tj
1 0 0 1 54 701.4 Tm
(    C***REFERENCES^^reference 1) Tj
1 0 0 1 54 690.9 Tm
(    C^^^^^^^^^^^^^^^^^continuation of reference 1) Tj
1 0 0 1 54 680.4 Tm
(        .) Tj
1 0 0 1 54 669.9 Tm
(        .) Tj
1 0 0 1 54 659.4 Tm
(        .) Tj
1 0 0 1 54 648.9 Tm
(    C^^^^^^^^^^^^^^^reference 2) Tj
1 0 0 1 54 638.4 Tm
(    C^^^^^^^^^^^^^^^^^continuation of reference 2) Tj
1 0 0 1 54 627.9 Tm
(        .) Tj
1 0 0 1 54 617.4 Tm
(        .) Tj
1 0 0 1 54 606.9 Tm
(        .) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(    Information starts in column 17 of the first line of a reference and no) Tj
1 0 0 1 54 575.4 Tm
(    earlier than column 19 of continuation lines.) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
(    References should be listed in either alphabetical order by last name or) Tj
1 0 0 1 54 543.9 Tm
(    order of citation.  They should be in upper and lower case, have initials) Tj
1 0 0 1 54 533.4 Tm
(    or first names ahead of last names, and \(for multiple authors\) have) Tj
1 0 0 1 54 522.9 Tm
(    "and" ahead of the last author's name instead of just a comma.  The first) Tj
1 0 0 1 54 512.4 Tm
(    word of the title of journal articles should be capitalized as should all) Tj
1 0 0 1 54 501.9 Tm
(    important words in titles of books, pamphlets, research reports, and) Tj
1 0 0 1 54 491.4 Tm
(    proceedings.  Titles should be given without quotation marks.  The names) Tj
1 0 0 1 54 480.9 Tm
(    of journals should be spelled out completely, or nearly so, because) Tj
1 0 0 1 54 470.4 Tm
(    software users may not be familiar with them.) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(    A complete example of a journal reference is:) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
(    C               F. N. Fritsch and R. E. Carlson, Monotone piecewise) Tj
1 0 0 1 54 417.9 Tm
(    C                 cubic interpolation, SIAM Journal on Numerical Ana-) Tj
1 0 0 1 54 407.4 Tm
(    C                 lysis, 17 \(1980\), pp. 238-246.) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(    A complete example of a book reference is:) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
(    C               Carl de Boor, A Practical Guide to Splines, Applied) Tj
1 0 0 1 54 354.9 Tm
(    C                 Mathematics Series 27, Springer-Verlag, New York,) Tj
1 0 0 1 54 344.4 Tm
(    C                 1978.) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(12. ROUTINES CALLED) Tj
1 0 0 1 54 312.9 Tm
(    This section gives the names of routines in the SLATEC Common Mathematical) Tj
1 0 0 1 54 302.4 Tm
(    Library that are either directly referenced or declared in an EXTERNAL) Tj
1 0 0 1 54 291.9 Tm
(    statement and passed as an argument to a subprogram.  Note that the FORTRAN) Tj
1 0 0 1 54 281.4 Tm
(    intrinsics and other formal parameters that represent externals are not) Tj
1 0 0 1 54 270.9 Tm
(    listed.  A list is always given for routines called; however, if no routine) Tj
1 0 0 1 54 260.4 Tm
(    is called, the list will be the single item "\(NONE\)" where the parentheses) Tj
1 0 0 1 54 249.9 Tm
(    are included.  If there are genuine items in the list, the items are in) Tj
1 0 0 1 54 239.4 Tm
(    alphabetical order.  The collating sequence has "0" through "9" first, then) Tj
1 0 0 1 54 228.9 Tm
(    "A" through "Z".  The format is) Tj
1 0 0 1 54 218.4 Tm
( ) Tj
1 0 0 1 54 207.9 Tm
(    C***ROUTINES^CALLED^^name,^name,^name,^name,) Tj
1 0 0 1 54 197.4 Tm
(    C^^^^^^^^^^^^^^^^^^^^name,^name,^name) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
(    Items in the list are separated by the two characters, comma and space.) Tj
1 0 0 1 54 165.9 Tm
(    If the list will not fit on one line, the line may be ended at a comma) Tj
1 0 0 1 54 155.4 Tm
(    \(with zero or more trailing spaces\), and be continued on the next line.) Tj
1 0 0 1 54 144.9 Tm
(    The list and any continuations of the list begin with a nonblank character) Tj
1 0 0 1 54 134.4 Tm
(    in column 22.) Tj
1 0 0 1 54 123.9 Tm
( ) Tj
1 0 0 1 54 113.4 Tm
(13. COMMON BLOCKS) Tj
1 0 0 1 54 102.9 Tm
(    This section, that may or may not be required, tells what common blocks are) Tj
1 0 0 1 54 92.4 Tm
(    used by this subprogram.  If this subprogram uses no common blocks, this) Tj
1 0 0 1 54 81.9 Tm
(    section does not appear.  If this subprogram does use common blocks, this) Tj
ET
Q
endstream
endobj
49 0 obj
4396
endobj
50 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R47 47 0 R
>>
>>
/Contents 48 0 R
>>
endobj
51 0 obj
<< /Type /Font /Name /R51 /Subtype /Type1 /BaseFont /Courier >>
endobj
52 0 obj
<< /Length 53 0 R >>
stream
q
BT
/R51 10 Tf
1 0 0 1 54 711.9 Tm
(    section must appear.  The list of common blocks is in exactly the same) Tj
1 0 0 1 54 701.4 Tm
(    format as the list of routines called and uses the same collating sequence.) Tj
1 0 0 1 54 690.9 Tm
(    In addition, the name of blank common is "\(BLANK\)" where the parentheses) Tj
1 0 0 1 54 680.4 Tm
(    are included.  Blank common should be last in the list if it appears. The) Tj
1 0 0 1 54 669.9 Tm
(    format for this section is) Tj
1 0 0 1 54 659.4 Tm
( ) Tj
1 0 0 1 54 648.9 Tm
(    C***COMMON^BLOCKS^^^^name,^name,^name,^name,) Tj
1 0 0 1 54 638.4 Tm
(    C^^^^^^^^^^^^^^^^^^^^name,^name,^name^) Tj
1 0 0 1 54 627.9 Tm
( ) Tj
1 0 0 1 54 617.4 Tm
(    The list starts in column 22.) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
(14. REVISION HISTORY) Tj
1 0 0 1 54 585.9 Tm
(    This section provides a summary of the revisions made to this code.) Tj
1 0 0 1 54 575.4 Tm
(    Revision dates and brief reasons for revisions are given.  The format is) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
(    C***REVISION^HISTORY^^\(YYMMDD\)) Tj
1 0 0 1 54 543.9 Tm
(    C^^^yymmdd^^DATE^WRITTEN) Tj
1 0 0 1 54 533.4 Tm
(    C^^^yymmdd^^revision description) Tj
1 0 0 1 54 522.9 Tm
(    C^^^^^^^^^^^more revision description) Tj
1 0 0 1 54 512.4 Tm
(    C^^^^^^^^^^^...) Tj
1 0 0 1 54 501.9 Tm
(    C^^^yymmdd^^revision description) Tj
1 0 0 1 54 491.4 Tm
(    C^^^^^^^^^^^more revision description) Tj
1 0 0 1 54 480.9 Tm
(    C^^^^^^^^^^^...) Tj
1 0 0 1 54 470.4 Tm
(    C^^^^^^^^^^^...) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(    where, for each revision,  "yy" \(starting in column 5\) is the last two) Tj
1 0 0 1 54 438.9 Tm
(    digits of the year, "mm" is the month \(01, 02, ..., 12\), and "dd" is the) Tj
1 0 0 1 54 428.4 Tm
(    day of the month \(01, 02, ..., 31\).  Because this ANSI standard form for) Tj
1 0 0 1 54 417.9 Tm
(    the date may not be familiar to some people, the character string) Tj
1 0 0 1 54 407.4 Tm
(    "\(YYMMDD\)" \(starting in column 23\) is included in the first line of the) Tj
1 0 0 1 54 396.9 Tm
(    section to assist in interpreting the sequence of digits.  Each line of the) Tj
1 0 0 1 54 386.4 Tm
(    revision descriptions starts in column 13.  The second line of this section) Tj
1 0 0 1 54 375.9 Tm
(    contains the date the routine was written, with the characters "DATE) Tj
1 0 0 1 54 365.4 Tm
(    WRITTEN" beginning in column 13.  These items must be in chronological) Tj
1 0 0 1 54 354.9 Tm
(    order.) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(15. END PROLOGUE) Tj
1 0 0 1 54 323.4 Tm
(    The last section is the single line) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
(    C***END^PROLOGUE^^name) Tj
1 0 0 1 54 291.9 Tm
( ) Tj
1 0 0 1 54 281.4 Tm
(    where "name" is the name of the subprogram.) Tj
1 0 0 1 54 270.9 Tm
( ) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
( ) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 218.4 Tm
( ) Tj
1 0 0 1 54 207.9 Tm
(SECTION 9.  EXAMPLES OF PROLOGUES) Tj
1 0 0 1 54 197.4 Tm
( ) Tj
1 0 0 1 54 186.9 Tm
(This section contains examples of prologues for both user-callable) Tj
1 0 0 1 54 176.4 Tm
(and subsidiary routines.  The routines are not from the SLATEC CML and) Tj
1 0 0 1 54 165.9 Tm
(should be used only as guidelines for preparing routines for SLATEC.) Tj
1 0 0 1 54 155.4 Tm
(Note that the C***DESCRIPTION sections follow the suggested LDOC format that) Tj
1 0 0 1 54 144.9 Tm
(is described in Appendix E.  Following the suggested LDOC format with its) Tj
1 0 0 1 54 134.4 Tm
("C *"subsections helps to ensure that all necessary descriptive information is) Tj
1 0 0 1 54 123.9 Tm
(provided.) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
(      SUBROUTINE ADDXY \(X, Y, Z, IERR\)) Tj
1 0 0 1 54 92.4 Tm
(C***BEGIN PROLOGUE  ADDXY) Tj
1 0 0 1 54 81.9 Tm
(C***PURPOSE  This routine adds two single precision numbers together) Tj
ET
Q
endstream
endobj
53 0 obj
4030
endobj
54 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R51 51 0 R
>>
>>
/Contents 52 0 R
>>
endobj
55 0 obj
<< /Type /Font /Name /R55 /Subtype /Type1 /BaseFont /Courier >>
endobj
56 0 obj
<< /Length 57 0 R >>
stream
q
BT
/R55 10 Tf
1 0 0 1 54 711.9 Tm
(C            after forcing both operands to be stored in memory.) Tj
1 0 0 1 54 701.4 Tm
(C***LIBRARY   SLATEC) Tj
1 0 0 1 54 690.9 Tm
(C***CATEGORY  A3A) Tj
1 0 0 1 54 680.4 Tm
(C***TYPE      SINGLE PRECISION \(ADDXY-S, DADDXY-D\)) Tj
1 0 0 1 54 669.9 Tm
(C***KEYWORDS  ADD, ADDITION, ARITHMETIC, REAL, SUM,) Tj
1 0 0 1 54 659.4 Tm
(C             SUMMATION) Tj
1 0 0 1 54 648.9 Tm
(C***AUTHOR  Fong, K. W., \(NMFECC\)) Tj
1 0 0 1 54 638.4 Tm
(C             Mail Code L-560) Tj
1 0 0 1 54 627.9 Tm
(C             Lawrence Livermore National Laboratory) Tj
1 0 0 1 54 617.4 Tm
(C             Post Office Box 5509) Tj
1 0 0 1 54 606.9 Tm
(C             Livermore, CA  94550) Tj
1 0 0 1 54 596.4 Tm
(C           Jefferson, T. H., \(SNLL\)) Tj
1 0 0 1 54 585.9 Tm
(C             Org. 8235) Tj
1 0 0 1 54 575.4 Tm
(C             Sandia National Laboratories Livermore) Tj
1 0 0 1 54 564.9 Tm
(C             Livermore, CA  94550) Tj
1 0 0 1 54 554.4 Tm
(C           Suyehiro, T., \(LLNL\)) Tj
1 0 0 1 54 543.9 Tm
(C             Mail Code L-316) Tj
1 0 0 1 54 533.4 Tm
(C             Lawrence Livermore National Laboratory) Tj
1 0 0 1 54 522.9 Tm
(C             Post Office Box 808) Tj
1 0 0 1 54 512.4 Tm
(C             Livermore, CA  94550) Tj
1 0 0 1 54 501.9 Tm
(C***DESCRIPTION) Tj
1 0 0 1 54 491.4 Tm
(C) Tj
1 0 0 1 54 480.9 Tm
(C *Usage:) Tj
1 0 0 1 54 470.4 Tm
(C) Tj
1 0 0 1 54 459.9 Tm
(C     INTEGER IERR) Tj
1 0 0 1 54 449.4 Tm
(C     REAL X, Y, Z) Tj
1 0 0 1 54 438.9 Tm
(C) Tj
1 0 0 1 54 428.4 Tm
(C     CALL ADDXY \(X, Y, Z, IERR\)) Tj
1 0 0 1 54 417.9 Tm
(C) Tj
1 0 0 1 54 407.4 Tm
(C *Arguments:) Tj
1 0 0 1 54 396.9 Tm
(C) Tj
1 0 0 1 54 386.4 Tm
(C  X :IN   This is one of the operands to be added.  It will not) Tj
1 0 0 1 54 375.9 Tm
(C          be modified by ADDXY.) Tj
1 0 0 1 54 365.4 Tm
(C) Tj
1 0 0 1 54 354.9 Tm
(C  Y :IN   This is the other operand to be added.  It will not be) Tj
1 0 0 1 54 344.4 Tm
(C          modified by ADDXY.) Tj
1 0 0 1 54 333.9 Tm
(C) Tj
1 0 0 1 54 323.4 Tm
(C  Z :OUT  This is the sum of X and Y.  In case of an error,) Tj
1 0 0 1 54 312.9 Tm
(C          this argument will not be modified.) Tj
1 0 0 1 54 302.4 Tm
(C) Tj
1 0 0 1 54 291.9 Tm
(C  IERR:OUT  This argument will be set to 0 if ADDXY added the two) Tj
1 0 0 1 54 281.4 Tm
(C          operands.  It will be set to 1 if it appears the addition) Tj
1 0 0 1 54 270.9 Tm
(C          would generate a result that might overflow.) Tj
1 0 0 1 54 260.4 Tm
(C) Tj
1 0 0 1 54 249.9 Tm
(C *Description:) Tj
1 0 0 1 54 239.4 Tm
(C) Tj
1 0 0 1 54 228.9 Tm
(C  ADDXY first divides X and Y by the largest single precision number) Tj
1 0 0 1 54 218.4 Tm
(C  and then adds the quotients.  If the absolute value of the sum is) Tj
1 0 0 1 54 207.9 Tm
(C  greater than 1.0, ADDXY returns with IERR set to 1.  Otherwise) Tj
1 0 0 1 54 197.4 Tm
(C  ADDXY stores X and Y into an internal array and calls ADDZZ to add) Tj
1 0 0 1 54 186.9 Tm
(C  them.  This increases the probability \(but does not guarantee\) that) Tj
1 0 0 1 54 176.4 Tm
(C  operands and result are stored into memory to avoid retention of) Tj
1 0 0 1 54 165.9 Tm
(C  extra bits in overlength registers or cache.) Tj
1 0 0 1 54 155.4 Tm
(C) Tj
1 0 0 1 54 144.9 Tm
(C***REFERENCES  W. M. Gentleman and S. B. Marovich, More on algorithms) Tj
1 0 0 1 54 134.4 Tm
(C                 that reveal properties of floating point arithmetic) Tj
1 0 0 1 54 123.9 Tm
(C                 units, Communications of the ACM, 17 \(1974\), pp.) Tj
1 0 0 1 54 113.4 Tm
(C                 276-277.) Tj
1 0 0 1 54 102.9 Tm
(C***ROUTINES CALLED  ADDZZ, R1MACH, XERMSG) Tj
1 0 0 1 54 92.4 Tm
(C***REVISION HISTORY  \(YYMMDD\)) Tj
1 0 0 1 54 81.9 Tm
(C   831109  DATE WRITTEN) Tj
ET
Q
endstream
endobj
57 0 obj
3751
endobj
58 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R55 55 0 R
>>
>>
/Contents 56 0 R
>>
endobj
59 0 obj
<< /Type /Font /Name /R59 /Subtype /Type1 /BaseFont /Courier >>
endobj
60 0 obj
<< /Length 61 0 R >>
stream
q
BT
/R59 10 Tf
1 0 0 1 54 711.9 Tm
(C   880325  Modified to meet new SLATEC prologue standards.  Only) Tj
1 0 0 1 54 701.4 Tm
(C           comment lines were modified.) Tj
1 0 0 1 54 690.9 Tm
(C   881103  Brought DESCRIPTION section up to Appendix E standards.) Tj
1 0 0 1 54 680.4 Tm
(C   921215  REFERENCE section modified to reflect recommended style.) Tj
1 0 0 1 54 669.9 Tm
(C***END PROLOGUE  ADDXY) Tj
1 0 0 1 54 659.4 Tm
(      DIMENSION R\(3\)) Tj
1 0 0 1 54 648.9 Tm
(C***FIRST EXECUTABLE STATEMENT  ADDXY) Tj
1 0 0 1 54 638.4 Tm
(      BIG = R1MACH\( 2 \)) Tj
1 0 0 1 54 627.9 Tm
(C) Tj
1 0 0 1 54 617.4 Tm
(C  This is an example program, not meant to be taken seriously.  The) Tj
1 0 0 1 54 606.9 Tm
(C  following illustrates the use of XERMSG to send an error message.) Tj
1 0 0 1 54 596.4 Tm
(C) Tj
1 0 0 1 54 585.9 Tm
(      IF \( \(ABS\(\(X/BIG\)+\(Y/BIG\)\)-1.0\) .GT. 0.0 \) THEN) Tj
1 0 0 1 54 575.4 Tm
(         IERR = 1) Tj
1 0 0 1 54 564.9 Tm
(         CALL XERMSG \( 'SLATEC', 'ADDXY', 'Addition of the operands '//) Tj
1 0 0 1 54 554.4 Tm
(     *      'is likely to cause overflow', IERR, 1 \)) Tj
1 0 0 1 54 543.9 Tm
(      ELSE) Tj
1 0 0 1 54 533.4 Tm
(         IERR = 0) Tj
1 0 0 1 54 522.9 Tm
(         R\(1\) = X) Tj
1 0 0 1 54 512.4 Tm
(         R\(2\) = Y) Tj
1 0 0 1 54 501.9 Tm
(         CALL ADDZZ\( R \)) Tj
1 0 0 1 54 491.4 Tm
(         Z    = R\(3\)) Tj
1 0 0 1 54 480.9 Tm
(      ENDIF) Tj
1 0 0 1 54 470.4 Tm
(      RETURN) Tj
1 0 0 1 54 459.9 Tm
(      END) Tj
1 0 0 1 54 449.4 Tm
(      SUBROUTINE ADDZZ \(R\)) Tj
1 0 0 1 54 438.9 Tm
(C***BEGIN PROLOGUE  ADDZZ) Tj
1 0 0 1 54 428.4 Tm
(C***SUBSIDIARY) Tj
1 0 0 1 54 417.9 Tm
(C***PURPOSE  This routine adds two single precision numbers.) Tj
1 0 0 1 54 407.4 Tm
(C***LIBRARY   SLATEC) Tj
1 0 0 1 54 396.9 Tm
(C***AUTHOR  Fong, K. W., \(NMFECC\)) Tj
1 0 0 1 54 386.4 Tm
(C             Mail Code L-560) Tj
1 0 0 1 54 375.9 Tm
(C             Lawrence Livermore National Laboratory) Tj
1 0 0 1 54 365.4 Tm
(C             Post Office Box 5509) Tj
1 0 0 1 54 354.9 Tm
(C             Livermore, CA  94550) Tj
1 0 0 1 54 344.4 Tm
(C           Jefferson, T. H., \(SNLL\)) Tj
1 0 0 1 54 333.9 Tm
(C             Org. 8235) Tj
1 0 0 1 54 323.4 Tm
(C             Sandia National Laboratories Livermore) Tj
1 0 0 1 54 312.9 Tm
(C             Livermore, CA  94550) Tj
1 0 0 1 54 302.4 Tm
(C           Suyehiro, T., \(LLNL\)) Tj
1 0 0 1 54 291.9 Tm
(C             Mail Code L-316) Tj
1 0 0 1 54 281.4 Tm
(C             Lawrence Livermore National Laboratory) Tj
1 0 0 1 54 270.9 Tm
(C             Post Office Box 808) Tj
1 0 0 1 54 260.4 Tm
(C             Livermore, CA  94550) Tj
1 0 0 1 54 249.9 Tm
(C***SEE ALSO  ADDXY) Tj
1 0 0 1 54 239.4 Tm
(C***ROUTINES CALLED  \(NONE\)) Tj
1 0 0 1 54 228.9 Tm
(C***REVISION HISTORY  \(YYMMDD\)) Tj
1 0 0 1 54 218.4 Tm
(C   831109  DATE WRITTEN) Tj
1 0 0 1 54 207.9 Tm
(C   880325  Modified to meet new SLATEC prologue standards.  Only) Tj
1 0 0 1 54 197.4 Tm
(C           comment lines were modified.) Tj
1 0 0 1 54 186.9 Tm
(C***END PROLOGUE  ADDZZ) Tj
1 0 0 1 54 176.4 Tm
(      DIMENSION R\(3\)) Tj
1 0 0 1 54 165.9 Tm
(C***FIRST EXECUTABLE STATEMENT  ADDZZ) Tj
1 0 0 1 54 155.4 Tm
(      R\(3\) = R\(1\) + R\(2\)) Tj
1 0 0 1 54 144.9 Tm
(      RETURN) Tj
1 0 0 1 54 134.4 Tm
(      END) Tj
1 0 0 1 54 123.9 Tm
( ) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
( ) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(*******************************************************************************) Tj
ET
Q
endstream
endobj
61 0 obj
3525
endobj
62 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R59 59 0 R
>>
>>
/Contents 60 0 R
>>
endobj
63 0 obj
<< /Type /Font /Name /R63 /Subtype /Type1 /BaseFont /Courier >>
endobj
64 0 obj
<< /Length 65 0 R >>
stream
q
BT
/R63 10 Tf
1 0 0 1 54 711.9 Tm
( ) Tj
1 0 0 1 54 701.4 Tm
( ) Tj
1 0 0 1 54 690.9 Tm
(SECTION 10. SLATEC QUICK CHECK PHILOSOPHY) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
(The SLATEC Library is distributed with a set of test programs that may be used) Tj
1 0 0 1 54 659.4 Tm
(as an aid to insure that the Library is installed correctly.  This set of test) Tj
1 0 0 1 54 648.9 Tm
(programs is known as the SLATEC quick checks.  The quick checks are not meant) Tj
1 0 0 1 54 638.4 Tm
(to provide an exhaustive test of the Library.  Instead they are designed to) Tj
1 0 0 1 54 627.9 Tm
(protect against gross errors, such as an unsatisfied external.  Because the) Tj
1 0 0 1 54 617.4 Tm
(SLATEC Library runs on a great variety of computers, the quick checks often) Tj
1 0 0 1 54 606.9 Tm
(detect arithmetic difficulties with either particular Library routines or with) Tj
1 0 0 1 54 596.4 Tm
(a particular computational environment.) Tj
1 0 0 1 54 585.9 Tm
( ) Tj
1 0 0 1 54 575.4 Tm
(A list of the quick check guidelines follows.) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
(1.  A quick check should test a few problems successfully solved by a) Tj
1 0 0 1 54 543.9 Tm
(    particular library subprogram.  It is not intended to be an extensive) Tj
1 0 0 1 54 533.4 Tm
(    test of a subprogram.) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
(2.  A quick check should provide consistent and minimal output in most) Tj
1 0 0 1 54 501.9 Tm
(    cases, including a "PASS" or "FAIL" indicator.  However, more detailed) Tj
1 0 0 1 54 491.4 Tm
(    output should be available on request to help track down problems in the) Tj
1 0 0 1 54 480.9 Tm
(    case of failures.) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
(3.  Some reasonable error conditions should be tested by the quick check by) Tj
1 0 0 1 54 449.4 Tm
(    purposefully referencing the routine incorrectly.) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
(4.  A quick check subprogram is expected to execute correctly on any machine) Tj
1 0 0 1 54 417.9 Tm
(    with an ANSI Fortran 77 compiler and library.  No test should have to be) Tj
1 0 0 1 54 407.4 Tm
(    skipped to avoid an abort on a particular machine.) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(5.  As distributed on the SLATEC tape, the quick check package consists of a) Tj
1 0 0 1 54 375.9 Tm
(    number of quick check main programs and a moderate number of subprograms.) Tj
1 0 0 1 54 365.4 Tm
(    Each quick check main program, more frequently called a quick check driver,) Tj
1 0 0 1 54 354.9 Tm
(    calls one or more quick check subprograms.  Usually, a given driver) Tj
1 0 0 1 54 344.4 Tm
(    initiates the tests for a broadly related set of subprograms, e.g. for the) Tj
1 0 0 1 54 333.9 Tm
(    single precision Basic Linear Algebra Subprograms \(BLAS\).  Each quick) Tj
1 0 0 1 54 323.4 Tm
(    check subprogram will test one or more closely related library routines of) Tj
1 0 0 1 54 312.9 Tm
(    the same precision.  For example, single precision routines and their) Tj
1 0 0 1 54 302.4 Tm
(    double precision equivalents are not to be tested in the same quick check) Tj
1 0 0 1 54 291.9 Tm
(    subprogram.) Tj
1 0 0 1 54 281.4 Tm
( ) Tj
1 0 0 1 54 270.9 Tm
(6.  The format of the quick check package does not rigidly dictate how it) Tj
1 0 0 1 54 260.4 Tm
(    must be executed on a particular machine.  For example, memory size of the) Tj
1 0 0 1 54 249.9 Tm
(    machine might preclude loading all quick check modules at once.) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
( ) Tj
1 0 0 1 54 218.4 Tm
( ) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
(SECTION 11. SPECIFIC PROGRAMMING STANDARDS FOR SLATEC QUICK CHECKS) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
(Just as the routines in the SLATEC Common Mathematical Library must meet) Tj
1 0 0 1 54 144.9 Tm
(certain standards, so must the quick checks.  These standards are meant to) Tj
1 0 0 1 54 134.4 Tm
(ensure that the quick checks adhere to the SLATEC quick check philosophy and) Tj
1 0 0 1 54 123.9 Tm
(to enhance maintainability.  The list of these quick check standards follow.) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
( ) Tj
1 0 0 1 54 92.4 Tm
(1.  Each module must test only a few related library subprograms.) Tj
1 0 0 1 54 81.9 Tm
( ) Tj
ET
Q
endstream
endobj
65 0 obj
4452
endobj
66 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R63 63 0 R
>>
>>
/Contents 64 0 R
>>
endobj
67 0 obj
<< /Type /Font /Name /R67 /Subtype /Type1 /BaseFont /Courier >>
endobj
68 0 obj
<< /Length 69 0 R >>
stream
q
BT
/R67 10 Tf
1 0 0 1 54 711.9 Tm
(2.  Each module must be in the form of a subroutine with three arguments.) Tj
1 0 0 1 54 701.4 Tm
(    For example:) Tj
1 0 0 1 54 690.9 Tm
( ) Tj
1 0 0 1 54 680.4 Tm
(                SUBROUTINE ADTST \(LUN, KPRINT, IPASS\)) Tj
1 0 0 1 54 669.9 Tm
( ) Tj
1 0 0 1 54 659.4 Tm
(    The first is an input argument giving the unit number to which any output) Tj
1 0 0 1 54 648.9 Tm
(    should be written.  The second is an input argument specifying the amount) Tj
1 0 0 1 54 638.4 Tm
(    of printing to be done by the quick check subroutine.  The third is an) Tj
1 0 0 1 54 627.9 Tm
(    output flag indicating passage or failure of the subroutine.) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
(    LUN         Unit number to which any output should be written.) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(    KPRINT = 0  No printing is done \(pass/fail is presumably monitored at a) Tj
1 0 0 1 54 575.4 Tm
(                higher level, i.e. in the driver\).  Error messages will not be) Tj
1 0 0 1 54 564.9 Tm
(                printed since the quick check driver sets the error handling) Tj
1 0 0 1 54 554.4 Tm
(                control flag to 0, using CALL XSETF\(0\) when KPRINT = 0 or 1.) Tj
1 0 0 1 54 543.9 Tm
( ) Tj
1 0 0 1 54 533.4 Tm
(           = 1  No printing is done for tests which pass; a short message) Tj
1 0 0 1 54 522.9 Tm
(                \(e.g., one line\) is printed for tests which fail.  Error) Tj
1 0 0 1 54 512.4 Tm
(                messages will not be printed since the quick check driver sets) Tj
1 0 0 1 54 501.9 Tm
(                the error handling control flag to 0, using CALL XSETF\(0\)) Tj
1 0 0 1 54 491.4 Tm
(                when KPRINT = 0 or 1.) Tj
1 0 0 1 54 480.9 Tm
( ) Tj
1 0 0 1 54 470.4 Tm
(           = 2  A short message is printed for tests which pass; more detailed) Tj
1 0 0 1 54 459.9 Tm
(                information is printed for tests which fail.  Error messages) Tj
1 0 0 1 54 449.4 Tm
(                describing the reason for failure should be printed.) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
(           = 3  \(Possibly\) quite detailed information is printed for all tests.) Tj
1 0 0 1 54 417.9 Tm
(                Error messages describing the reason for failure should be) Tj
1 0 0 1 54 407.4 Tm
(                printed.) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(    IPASS  = 0  Indicates failure of the quick check subroutine \(i.e., at least) Tj
1 0 0 1 54 375.9 Tm
(                one test failed\).) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
(           = 1  Indicates that all tests passed in the quick check subroutine.) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(    In the case of a subroutine whose purpose is to produce output \(e.g., a) Tj
1 0 0 1 54 323.4 Tm
(    printer-plotter\), output of a more detailed nature might be produced for) Tj
1 0 0 1 54 312.9 Tm
(    KPRINT >= 1.) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(    The quick check must execute correctly and completely using each value) Tj
1 0 0 1 54 281.4 Tm
(    of KPRINT.  KPRINT is used only to control the printing and does not) Tj
1 0 0 1 54 270.9 Tm
(    affect the tests made of the SLATEC routine.) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
(3.  The quick check subprograms must be written in ANSI Fortran 77 and) Tj
1 0 0 1 54 239.4 Tm
(    must make use of I1MACH, R1MACH, and D1MACH for pass/fail tolerances.) Tj
1 0 0 1 54 228.9 Tm
( ) Tj
1 0 0 1 54 218.4 Tm
(4.  Where possible, compute constants in a machine independent fashion.  For) Tj
1 0 0 1 54 207.9 Tm
(    example, PI = 4. * ATAN\(1.0\)) Tj
1 0 0 1 54 197.4 Tm
( ) Tj
1 0 0 1 54 186.9 Tm
(5.  Using one library routine to test another is permitted, though this should) Tj
1 0 0 1 54 176.4 Tm
(    be done with care.) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
(6.  Known solutions can be stored using DATA or PARAMETER statements.  Some) Tj
1 0 0 1 54 144.9 Tm
(    subprograms return a "solution" which is more than one number - for) Tj
1 0 0 1 54 134.4 Tm
(    example, the eigenvalues of a matrix.  In these cases, take special care) Tj
1 0 0 1 54 123.9 Tm
(    that the quick check test passes for ALL orderings of the output which are) Tj
1 0 0 1 54 113.4 Tm
(    mathematically correct.) Tj
1 0 0 1 54 102.9 Tm
( ) Tj
1 0 0 1 54 92.4 Tm
(7.  Where subprograms are required by a routine being tested, they) Tj
1 0 0 1 54 81.9 Tm
(    should accompany the quick check.  However, care should be taken so that) Tj
ET
Q
endstream
endobj
69 0 obj
4547
endobj
70 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R67 67 0 R
>>
>>
/Contents 68 0 R
>>
endobj
71 0 obj
<< /Type /Font /Name /R71 /Subtype /Type1 /BaseFont /Courier >>
endobj
72 0 obj
<< /Length 73 0 R >>
stream
q
BT
/R71 10 Tf
1 0 0 1 54 711.9 Tm
(    no two such subprograms have the same name. Choosing esoteric or odd) Tj
1 0 0 1 54 701.4 Tm
(    names is a good idea.  It is extremely desirable that each such) Tj
1 0 0 1 54 690.9 Tm
(    subprogram contain comments indicating which quick check needed it) Tj
1 0 0 1 54 680.4 Tm
(    \(a C***SEE ALSO line should be used\).) Tj
1 0 0 1 54 669.9 Tm
( ) Tj
1 0 0 1 54 659.4 Tm
(8.  Detailed output should be self-contained yet concise.  No external) Tj
1 0 0 1 54 648.9 Tm
(    reference material or additional computations should be required to) Tj
1 0 0 1 54 638.4 Tm
(    determine what, for example, the correct solution to the problem really is.) Tj
1 0 0 1 54 627.9 Tm
( ) Tj
1 0 0 1 54 617.4 Tm
(9.  For purposes of tracking down the cause of a failure, external reference) Tj
1 0 0 1 54 606.9 Tm
(    material or the name of a \(willing\) qualified expert should be listed in) Tj
1 0 0 1 54 596.4 Tm
(    the comment section of the quick check.) Tj
1 0 0 1 54 585.9 Tm
( ) Tj
1 0 0 1 54 575.4 Tm
(10. Quick checks must have SLATEC prologues and be adequately commented) Tj
1 0 0 1 54 564.9 Tm
(    and cleanly written so that the average software librarian has some hope) Tj
1 0 0 1 54 554.4 Tm
(    of tracking down problems.  For example, if a test problem is known to) Tj
1 0 0 1 54 543.9 Tm
(    be tricky or if difficulties are expected for short word length) Tj
1 0 0 1 54 533.4 Tm
(    machines, an appropriate comment would be helpful.) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
(11. After deliberately calling a library routine with incorrect arguments,) Tj
1 0 0 1 54 501.9 Tm
(    invoke the function IERR=NUMXER\(NERR\) to verify that the correct error) Tj
1 0 0 1 54 491.4 Tm
(    number was set.  \(NUMXER is a function in the SLATEC error handling) Tj
1 0 0 1 54 480.9 Tm
(    package that returns the number of the most recent error via both the) Tj
1 0 0 1 54 470.4 Tm
(    function value and the argument.\)  Then CALL XERCLR to clear it before) Tj
1 0 0 1 54 459.9 Tm
(    this \(or the next\) quick check makes another error.) Tj
1 0 0 1 54 449.4 Tm
( ) Tj
1 0 0 1 54 438.9 Tm
(12. A quick check should be written in such a way that it will execute) Tj
1 0 0 1 54 428.4 Tm
(    identically if called several times in the same program.  In particular,) Tj
1 0 0 1 54 417.9 Tm
(    there should be no modification of DATA loaded variables which cause the) Tj
1 0 0 1 54 407.4 Tm
(    quick check to start with the wrong values on subsequent calls.) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
( ) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(SECTION 12. QUICK CHECK DRIVERS \(MAIN PROGRAMS\)) Tj
1 0 0 1 54 323.4 Tm
( ) Tj
1 0 0 1 54 312.9 Tm
(Many people writing quick checks are not aware of the environment in which the) Tj
1 0 0 1 54 302.4 Tm
(individual quick check is called.  The following aspects of the quick check) Tj
1 0 0 1 54 291.9 Tm
(drivers are illustrated by the example driver in Section 14.) Tj
1 0 0 1 54 281.4 Tm
( ) Tj
1 0 0 1 54 270.9 Tm
(1.  Each quick check driver will call one or more quick check subprograms.) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
(2.  The input and output units for the tests are set in the driver.) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(            LIN = I1MACH\(1\)        the input unit) Tj
1 0 0 1 54 218.4 Tm
(            LUN = I1MACH\(2\)        the output unit) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
(    The output unit is communicated to the quick check subprograms) Tj
1 0 0 1 54 186.9 Tm
(    through the argument list.  All output should be directed to the unit LUN) Tj
1 0 0 1 54 176.4 Tm
(    that is in the argument list.) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
(3.  Each quick check has three arguments LUN, KPRINT, and IPASS.  The) Tj
1 0 0 1 54 144.9 Tm
(    meaning of these arguments within the quick checks is detailed) Tj
1 0 0 1 54 134.4 Tm
(    thoroughly in the previous section.) Tj
1 0 0 1 54 123.9 Tm
( ) Tj
1 0 0 1 54 113.4 Tm
(    a.  The quick check driver reads in KPRINT without a prompt, and) Tj
1 0 0 1 54 102.9 Tm
(        passes KPRINT as an argument to each quick check it calls.  KPRINT must) Tj
1 0 0 1 54 92.4 Tm
(        not be changed by any driver or quick check.  The driver uses KPRINT to) Tj
1 0 0 1 54 81.9 Tm
(        help determine what output to write.) Tj
ET
Q
endstream
endobj
73 0 obj
4554
endobj
74 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R71 71 0 R
>>
>>
/Contents 72 0 R
>>
endobj
75 0 obj
<< /Type /Font /Name /R75 /Subtype /Type1 /BaseFont /Courier >>
endobj
76 0 obj
<< /Length 77 0 R >>
stream
q
BT
/R75 10 Tf
1 0 0 1 54 711.9 Tm
( ) Tj
1 0 0 1 54 701.4 Tm
(    b.  The variable IPASS must be set to 0 \(for fail\) or to 1 \(for pass\) by) Tj
1 0 0 1 54 690.9 Tm
(        each quick check before returning to the driver.  Within the driver,) Tj
1 0 0 1 54 680.4 Tm
(        the variable NFAIL is set to 0.  If IPASS = 0 upon return to the) Tj
1 0 0 1 54 669.9 Tm
(        driver, then NFAIL is incremented.  After calling all the quick checks,) Tj
1 0 0 1 54 659.4 Tm
(        NFAIL will then have the number of quick checks which failed.) Tj
1 0 0 1 54 648.9 Tm
( ) Tj
1 0 0 1 54 638.4 Tm
(    c.  Quick check driver output should follow this chart:) Tj
1 0 0 1 54 627.9 Tm
( ) Tj
1 0 0 1 54 617.4 Tm
(                NFAIL        OUTPUT) Tj
1 0 0 1 54 606.9 Tm
(                -----        ------) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(                not 0        driver writes fail message) Tj
1 0 0 1 54 575.4 Tm
(                  0          driver writes pass message) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
(4.  There are calls to three SLATEC error handler routines in each quick check) Tj
1 0 0 1 54 543.9 Tm
(    driver:) Tj
1 0 0 1 54 533.4 Tm
( ) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
(            CALL XSETUN\(LUN\)       Selects unit LUN as the unit to which) Tj
1 0 0 1 54 501.9 Tm
(                                      error messages will be sent.) Tj
1 0 0 1 54 491.4 Tm
(            CALL XSETF\(1\)          Only fatal \(not recoverable\) error messages) Tj
1 0 0 1 54 480.9 Tm
(              or XSETF\(0\)             will cause an abort.  XSETF sets the) Tj
1 0 0 1 54 470.4 Tm
(                                      KONTROL variable for the error handler) Tj
1 0 0 1 54 459.9 Tm
(                                      routines to the value of the XSETF) Tj
1 0 0 1 54 449.4 Tm
(                                      argument.  A value of either 0 or 1 will) Tj
1 0 0 1 54 438.9 Tm
(                                      make only fatal errors cause a program) Tj
1 0 0 1 54 428.4 Tm
(                                      abort.  A value of 1 will allow printing) Tj
1 0 0 1 54 417.9 Tm
(                                      of error messages, while a value of zero) Tj
1 0 0 1 54 407.4 Tm
(                                      will print only fatal error messages.) Tj
1 0 0 1 54 396.9 Tm
(            CALL XERMAX\(1000\)      Increase the number of times any) Tj
1 0 0 1 54 386.4 Tm
(                                      single message may be printed.) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 323.4 Tm
( ) Tj
1 0 0 1 54 312.9 Tm
(SECTION 13. QUICK CHECK SUBROUTINE EXAMPLE) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(The following program provides a very minimal check of the sample routine) Tj
1 0 0 1 54 281.4 Tm
(from Section 9.) Tj
1 0 0 1 54 270.9 Tm
( ) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
(      SUBROUTINE ADTST \(LUN, KPRINT, IPASS\)) Tj
1 0 0 1 54 239.4 Tm
(C***BEGIN PROLOGUE  ADTST) Tj
1 0 0 1 54 228.9 Tm
(C***SUBSIDIARY) Tj
1 0 0 1 54 218.4 Tm
(C***PURPOSE  Quick check for SLATEC routine ADDXY) Tj
1 0 0 1 54 207.9 Tm
(C***LIBRARY   SLATEC) Tj
1 0 0 1 54 197.4 Tm
(C***CATEGORY  A3A) Tj
1 0 0 1 54 186.9 Tm
(C***TYPE      SINGLE PRECISION \(ADTST-S, DADTST-D\)) Tj
1 0 0 1 54 176.4 Tm
(C***KEYWORDS  QUICK CHECK, ADDXY,) Tj
1 0 0 1 54 165.9 Tm
(C***AUTHOR  Suyehiro, Tok, \(LLNL\)) Tj
1 0 0 1 54 155.4 Tm
(C           Walton, Lee, \(SNL\)) Tj
1 0 0 1 54 144.9 Tm
(C***ROUTINES CALLED  ADDXY, R1MACH) Tj
1 0 0 1 54 134.4 Tm
(C***REVISION HISTORY  \(YYMMDD\)) Tj
1 0 0 1 54 123.9 Tm
(C   880511  DATE WRITTEN) Tj
1 0 0 1 54 113.4 Tm
(C   880608  Revised to meet new prologue standards.) Tj
1 0 0 1 54 102.9 Tm
(C***END PROLOGUE  ADTST) Tj
1 0 0 1 54 92.4 Tm
(C) Tj
1 0 0 1 54 81.9 Tm
(C***FIRST EXECUTABLE STATEMENT  ADTST) Tj
ET
Q
endstream
endobj
77 0 obj
4025
endobj
78 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R75 75 0 R
>>
>>
/Contents 76 0 R
>>
endobj
79 0 obj
<< /Type /Font /Name /R79 /Subtype /Type1 /BaseFont /Courier >>
endobj
80 0 obj
<< /Length 81 0 R >>
stream
q
BT
/R79 10 Tf
1 0 0 1 54 711.9 Tm
(      IF \( KPRINT .GE. 2 \) WRITE \(LUN,99999\)) Tj
1 0 0 1 54 701.4 Tm
(99999 FORMAT \('OUTPUT FROM ADTST'\)) Tj
1 0 0 1 54 690.9 Tm
(      IPASS = 1) Tj
1 0 0 1 54 680.4 Tm
(C) Tj
1 0 0 1 54 669.9 Tm
(C EXAMPLE PROBLEM) Tj
1 0 0 1 54 659.4 Tm
(      X = 1.) Tj
1 0 0 1 54 648.9 Tm
(      Y = 2.) Tj
1 0 0 1 54 638.4 Tm
(      CALL ADDXY\(X, Y, Z, IERR\)) Tj
1 0 0 1 54 627.9 Tm
(      EPS = R1MACH\(4\)) Tj
1 0 0 1 54 617.4 Tm
(      IF\( \(ABS\(Z-3.\) .GT. EPS\)  .OR.  \(IERR .EQ. 1\) \) IPASS = 0) Tj
1 0 0 1 54 606.9 Tm
(      IF \( KPRINT .GE. 2 \) THEN) Tj
1 0 0 1 54 596.4 Tm
(      WRITE \(LUN,99995\)X, Y, Z) Tj
1 0 0 1 54 585.9 Tm
(99995 FORMAT \(/' EXAMPLE PROBLEM ',/' X = ',E20.13,' Y = ',E20.13,' Z = ',) Tj
1 0 0 1 54 575.4 Tm
(     *   E20.13\)) Tj
1 0 0 1 54 564.9 Tm
(      ENDIF) Tj
1 0 0 1 54 554.4 Tm
(      IF \( \(IPASS .EQ. 1 \) .AND. \(KPRINT .GT. 1\) \) WRITE \(LUN,99994\)) Tj
1 0 0 1 54 543.9 Tm
(      IF \( \(IPASS .EQ. 0 \) .AND. \(KPRINT .NE. 0\) \) WRITE \(LUN,99993\)) Tj
1 0 0 1 54 533.4 Tm
(99994 FORMAT\(/' ***************ADDXY  PASSED ALL TESTS***************'\)) Tj
1 0 0 1 54 522.9 Tm
(99993 FORMAT\(/' ***************ADDXY  FAILED SOME TESTS***************'\)) Tj
1 0 0 1 54 512.4 Tm
(      RETURN) Tj
1 0 0 1 54 501.9 Tm
(      END) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
( ) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
(SECTION 14. QUICK CHECK MAIN PROGRAM EXAMPLE) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(The following is an example main program which should be used to drive a quick) Tj
1 0 0 1 54 396.9 Tm
(check.  The names of the quick check subroutines it calls, ADTST and DADTST,) Tj
1 0 0 1 54 386.4 Tm
(should be replaced with the name or names of real quick checks.  The dummy) Tj
1 0 0 1 54 375.9 Tm
(names of the SLATEC routines being tested, ADDXY and DADDXY, should be) Tj
1 0 0 1 54 365.4 Tm
(replaced with the names of the routines which are actually being tested.) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(      PROGRAM TEST00) Tj
1 0 0 1 54 323.4 Tm
(C***BEGIN PROLOGUE  TEST00) Tj
1 0 0 1 54 312.9 Tm
(C***SUBSIDIARY) Tj
1 0 0 1 54 302.4 Tm
(C***PURPOSE  Driver for testing SLATEC subprograms) Tj
1 0 0 1 54 291.9 Tm
(C            ADDXY    DADDXY) Tj
1 0 0 1 54 281.4 Tm
(C***LIBRARY   SLATEC) Tj
1 0 0 1 54 270.9 Tm
(C***CATEGORY  A3) Tj
1 0 0 1 54 260.4 Tm
(C***TYPE      ALL \(TEST00-A\)) Tj
1 0 0 1 54 249.9 Tm
(C***KEYWORDS  QUICK CHECK DRIVER, ADDXY, DADDXY) Tj
1 0 0 1 54 239.4 Tm
(C***AUTHOR  Suyehiro, Tok, \(LLNL\)) Tj
1 0 0 1 54 228.9 Tm
(C           Walton, Lee, \(SNL\)) Tj
1 0 0 1 54 218.4 Tm
(C***DESCRIPTION) Tj
1 0 0 1 54 207.9 Tm
(C) Tj
1 0 0 1 54 197.4 Tm
(C *Usage:) Tj
1 0 0 1 54 186.9 Tm
(C     One input data record is required) Tj
1 0 0 1 54 176.4 Tm
(C         READ \(LIN,990\) KPRINT) Tj
1 0 0 1 54 165.9 Tm
(C     990 FORMAT \(I1\)) Tj
1 0 0 1 54 155.4 Tm
(C) Tj
1 0 0 1 54 144.9 Tm
(C *Arguments:) Tj
1 0 0 1 54 134.4 Tm
(C     KPRINT = 0  Quick checks - No printing.) Tj
1 0 0 1 54 123.9 Tm
(C                 Driver       - Short pass or fail message printed.) Tj
1 0 0 1 54 113.4 Tm
(C              1  Quick checks - No message printed for passed tests,) Tj
1 0 0 1 54 102.9 Tm
(C                                short message printed for failed tests.) Tj
1 0 0 1 54 92.4 Tm
(C                 Driver       - Short pass or fail message printed.) Tj
1 0 0 1 54 81.9 Tm
(C              2  Quick checks - Print short message for passed tests,) Tj
ET
Q
endstream
endobj
81 0 obj
3706
endobj
82 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R79 79 0 R
>>
>>
/Contents 80 0 R
>>
endobj
83 0 obj
<< /Type /Font /Name /R83 /Subtype /Type1 /BaseFont /Courier >>
endobj
84 0 obj
<< /Length 85 0 R >>
stream
q
BT
/R83 10 Tf
1 0 0 1 54 711.9 Tm
(C                                fuller information for failed tests.) Tj
1 0 0 1 54 701.4 Tm
(C                 Driver       - Pass or fail message printed.) Tj
1 0 0 1 54 690.9 Tm
(C              3  Quick checks - Print complete quick check results.) Tj
1 0 0 1 54 680.4 Tm
(C                 Driver       - Pass or fail message printed.) Tj
1 0 0 1 54 669.9 Tm
(C) Tj
1 0 0 1 54 659.4 Tm
(C *Description:) Tj
1 0 0 1 54 648.9 Tm
(C     Driver for testing SLATEC subprograms) Tj
1 0 0 1 54 638.4 Tm
(C        ADDXY    DADDXY) Tj
1 0 0 1 54 627.9 Tm
(C) Tj
1 0 0 1 54 617.4 Tm
(C***REFERENCES  \(NONE\)) Tj
1 0 0 1 54 606.9 Tm
(C***ROUTINES CALLED  ADTST, DADTST, I1MACH, XERMAX, XSETF, XSETUN) Tj
1 0 0 1 54 596.4 Tm
(C***REVISION HISTORY  \(YYMMDD\)) Tj
1 0 0 1 54 585.9 Tm
(C   880511  DATE WRITTEN) Tj
1 0 0 1 54 575.4 Tm
(C   880608  Revised to meet the new SLATEC prologue standards.) Tj
1 0 0 1 54 564.9 Tm
(C   881103  Brought DESCRIPTION section up to Appendix E standards.) Tj
1 0 0 1 54 554.4 Tm
(C***END PROLOGUE  TEST00) Tj
1 0 0 1 54 543.9 Tm
(C) Tj
1 0 0 1 54 533.4 Tm
(C***FIRST EXECUTABLE STATEMENT  TEST00) Tj
1 0 0 1 54 522.9 Tm
(      LUN   = I1MACH\(2\)) Tj
1 0 0 1 54 512.4 Tm
(      LIN   = I1MACH\(1\)) Tj
1 0 0 1 54 501.9 Tm
(      NFAIL = 0) Tj
1 0 0 1 54 491.4 Tm
(C) Tj
1 0 0 1 54 480.9 Tm
(C   Read KPRINT parameter) Tj
1 0 0 1 54 470.4 Tm
(C) Tj
1 0 0 1 54 459.9 Tm
(      READ \(LIN,990\) KPRINT) Tj
1 0 0 1 54 449.4 Tm
(  990 FORMAT \(I1\)) Tj
1 0 0 1 54 438.9 Tm
(      CALL XSETUN\(LUN\)) Tj
1 0 0 1 54 428.4 Tm
(      IF \( KPRINT .LE. 1 \) THEN) Tj
1 0 0 1 54 417.9 Tm
(         CALL XSETF\(0\)) Tj
1 0 0 1 54 407.4 Tm
(      ELSE) Tj
1 0 0 1 54 396.9 Tm
(         CALL XSETF\(1\)) Tj
1 0 0 1 54 386.4 Tm
(      ENDIF) Tj
1 0 0 1 54 375.9 Tm
(      CALL XERMAX\(1000\)) Tj
1 0 0 1 54 365.4 Tm
(C) Tj
1 0 0 1 54 354.9 Tm
(C   Test ADDXY) Tj
1 0 0 1 54 344.4 Tm
(C) Tj
1 0 0 1 54 333.9 Tm
(      CALL ADTST\(LUN, KPRINT, IPASS\)) Tj
1 0 0 1 54 323.4 Tm
(      IF \( IPASS .EQ. 0 \) NFAIL = NFAIL + 1) Tj
1 0 0 1 54 312.9 Tm
(C) Tj
1 0 0 1 54 302.4 Tm
(C   Test DADDXY) Tj
1 0 0 1 54 291.9 Tm
(C) Tj
1 0 0 1 54 281.4 Tm
(      CALL DADTST\(LUN, KPRINT, IPASS\)) Tj
1 0 0 1 54 270.9 Tm
(      IF \( IPASS .EQ. 0 \) NFAIL = NFAIL + 1) Tj
1 0 0 1 54 260.4 Tm
(C) Tj
1 0 0 1 54 249.9 Tm
(      IF \( NFAIL .GT. 0 \) WRITE \(LUN,980\) NFAIL) Tj
1 0 0 1 54 239.4 Tm
(  980 FORMAT \(/' ************* WARNING -- ', I5,) Tj
1 0 0 1 54 228.9 Tm
(     * ' TEST\(S\) FAILED IN PROGRAM TEST00 *************' \)) Tj
1 0 0 1 54 218.4 Tm
(      IF \( NFAIL .EQ. 0 \) WRITE \(LUN,970\)) Tj
1 0 0 1 54 207.9 Tm
(  970 FORMAT) Tj
1 0 0 1 54 197.4 Tm
(     * \(/' --------------TEST00  PASSED ALL TESTS----------------'\)) Tj
1 0 0 1 54 186.9 Tm
(      END) Tj
1 0 0 1 54 176.4 Tm
( ) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
( ) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 123.9 Tm
( ) Tj
1 0 0 1 54 113.4 Tm
(APPENDIX A.  GAMS \(AND SLATEC\) CLASSIFICATION SCHEME) Tj
1 0 0 1 54 102.9 Tm
( ) Tj
1 0 0 1 54 92.4 Tm
(SLATEC has adopted the GAMS \(Guide to Available Mathematical Software\)) Tj
1 0 0 1 54 81.9 Tm
(Classification Scheme for Mathematical and Statistical Software,) Tj
ET
Q
endstream
endobj
85 0 obj
3350
endobj
86 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R83 83 0 R
>>
>>
/Contents 84 0 R
>>
endobj
87 0 obj
<< /Type /Font /Name /R87 /Subtype /Type1 /BaseFont /Courier >>
endobj
88 0 obj
<< /Length 89 0 R >>
stream
q
BT
/R87 10 Tf
1 0 0 1 54 711.9 Tm
(reference [5].) Tj
1 0 0 1 54 701.4 Tm
( ) Tj
1 0 0 1 54 690.9 Tm
( ) Tj
1 0 0 1 54 680.4 Tm
(                     GAMS \(and SLATEC\) Classification Scheme) Tj
1 0 0 1 54 669.9 Tm
(                                     for) Tj
1 0 0 1 54 659.4 Tm
(                     Mathematical and Statistical Software) Tj
1 0 0 1 54 648.9 Tm
( ) Tj
1 0 0 1 54 638.4 Tm
( ) Tj
1 0 0 1 54 627.9 Tm
(                           Version 1.2 October 1983) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
( ) Tj
1 0 0 1 54 575.4 Tm
(A.  Arithmetic, error analysis) Tj
1 0 0 1 54 564.9 Tm
(A1.  Integer) Tj
1 0 0 1 54 554.4 Tm
(A2.  Rational) Tj
1 0 0 1 54 543.9 Tm
(A3.  Real) Tj
1 0 0 1 54 533.4 Tm
(A3A.  Single precision) Tj
1 0 0 1 54 522.9 Tm
(A3B.  Double precision) Tj
1 0 0 1 54 512.4 Tm
(A3C.  Extended precision) Tj
1 0 0 1 54 501.9 Tm
(A3D.  Extended range) Tj
1 0 0 1 54 491.4 Tm
(A4.  Complex) Tj
1 0 0 1 54 480.9 Tm
(A4A.  Single precision) Tj
1 0 0 1 54 470.4 Tm
(A4B.  Double precision) Tj
1 0 0 1 54 459.9 Tm
(A4C.  Extended precision) Tj
1 0 0 1 54 449.4 Tm
(A4D.  Extended range) Tj
1 0 0 1 54 438.9 Tm
(A5.  Interval) Tj
1 0 0 1 54 428.4 Tm
(A5A.  Real) Tj
1 0 0 1 54 417.9 Tm
(A5B.  Complex) Tj
1 0 0 1 54 407.4 Tm
(A6.  Change of representation) Tj
1 0 0 1 54 396.9 Tm
(A6A.  Type conversion) Tj
1 0 0 1 54 386.4 Tm
(A6B.  Base conversion) Tj
1 0 0 1 54 375.9 Tm
(A6C.  Decomposition, construction) Tj
1 0 0 1 54 365.4 Tm
(A7.  Sequences \(e.g., convergence acceleration\)) Tj
1 0 0 1 54 354.9 Tm
(B.  Number theory) Tj
1 0 0 1 54 344.4 Tm
(C.  Elementary and special functions \(search also class L5\)) Tj
1 0 0 1 54 333.9 Tm
(C1.  Integer-valued functions \(e.g., floor, ceiling, factorial, binomial) Tj
1 0 0 1 54 323.4 Tm
(     coefficient\)) Tj
1 0 0 1 54 312.9 Tm
(C2.  Powers, roots, reciprocals) Tj
1 0 0 1 54 302.4 Tm
(C3.  Polynomials) Tj
1 0 0 1 54 291.9 Tm
(C3A.  Orthogonal) Tj
1 0 0 1 54 281.4 Tm
(C3A1.  Trigonometric) Tj
1 0 0 1 54 270.9 Tm
(C3A2.  Chebyshev, Legendre) Tj
1 0 0 1 54 260.4 Tm
(C3A3.  Laguerre) Tj
1 0 0 1 54 249.9 Tm
(C3A4.  Hermite) Tj
1 0 0 1 54 239.4 Tm
(C3B.  Non-orthogonal) Tj
1 0 0 1 54 228.9 Tm
(C4.  Elementary transcendental functions) Tj
1 0 0 1 54 218.4 Tm
(C4A.  Trigonometric, inverse trigonometric) Tj
1 0 0 1 54 207.9 Tm
(C4B.  Exponential, logarithmic) Tj
1 0 0 1 54 197.4 Tm
(C4C.  Hyperbolic, inverse hyperbolic) Tj
1 0 0 1 54 186.9 Tm
(C4D.  Integrals of elementary transcendental functions) Tj
1 0 0 1 54 176.4 Tm
(C5.  Exponential and logarithmic integrals) Tj
1 0 0 1 54 165.9 Tm
(C6.  Cosine and sine integrals) Tj
1 0 0 1 54 155.4 Tm
(C7.  Gamma) Tj
1 0 0 1 54 144.9 Tm
(C7A.  Gamma, log gamma, reciprocal gamma) Tj
1 0 0 1 54 134.4 Tm
(C7B.  Beta, log beta) Tj
1 0 0 1 54 123.9 Tm
(C7C.  Psi function) Tj
1 0 0 1 54 113.4 Tm
(C7D.  Polygamma function) Tj
1 0 0 1 54 102.9 Tm
(C7E.  Incomplete gamma) Tj
1 0 0 1 54 92.4 Tm
(C7F.  Incomplete beta) Tj
1 0 0 1 54 81.9 Tm
(C7G.  Riemann zeta) Tj
ET
Q
endstream
endobj
89 0 obj
3053
endobj
90 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R87 87 0 R
>>
>>
/Contents 88 0 R
>>
endobj
91 0 obj
<< /Type /Font /Name /R91 /Subtype /Type1 /BaseFont /Courier >>
endobj
92 0 obj
<< /Length 93 0 R >>
stream
q
BT
/R91 10 Tf
1 0 0 1 54 711.9 Tm
(C8.  Error functions) Tj
1 0 0 1 54 701.4 Tm
(C8A.  Error functions, their inverses, integrals, including the normal) Tj
1 0 0 1 54 690.9 Tm
(      distribution function) Tj
1 0 0 1 54 680.4 Tm
(C8B.  Fresnel integrals) Tj
1 0 0 1 54 669.9 Tm
(C8C.  Dawson's integral) Tj
1 0 0 1 54 659.4 Tm
(C9.  Legendre functions) Tj
1 0 0 1 54 648.9 Tm
(C10.  Bessel functions) Tj
1 0 0 1 54 638.4 Tm
(C10A.  J, Y, H-\(1\), H-\(2\)) Tj
1 0 0 1 54 627.9 Tm
(C10A1.  Real argument, integer order) Tj
1 0 0 1 54 617.4 Tm
(C10A2.  Complex argument, integer order) Tj
1 0 0 1 54 606.9 Tm
(C10A3.  Real argument, real order) Tj
1 0 0 1 54 596.4 Tm
(C10A4.  Complex argument, real order) Tj
1 0 0 1 54 585.9 Tm
(C10A5.  Complex argument, complex order) Tj
1 0 0 1 54 575.4 Tm
(C10B.  I, K) Tj
1 0 0 1 54 564.9 Tm
(C10B1.  Real argument, integer order) Tj
1 0 0 1 54 554.4 Tm
(C10B2.  Complex argument, integer order) Tj
1 0 0 1 54 543.9 Tm
(C10B3.  Real argument, real order) Tj
1 0 0 1 54 533.4 Tm
(C10B4.  Complex argument, real order) Tj
1 0 0 1 54 522.9 Tm
(C10B5.  Complex argument, complex order) Tj
1 0 0 1 54 512.4 Tm
(C10C.  Kelvin functions) Tj
1 0 0 1 54 501.9 Tm
(C10D.  Airy and Scorer functions) Tj
1 0 0 1 54 491.4 Tm
(C10E.  Struve, Anger, and Weber functions) Tj
1 0 0 1 54 480.9 Tm
(C10F.  Integrals of Bessel functions) Tj
1 0 0 1 54 470.4 Tm
(C11.  Confluent hypergeometric functions) Tj
1 0 0 1 54 459.9 Tm
(C12.  Coulomb wave functions) Tj
1 0 0 1 54 449.4 Tm
(C13.  Jacobian elliptic functions, theta functions) Tj
1 0 0 1 54 438.9 Tm
(C14.  Elliptic integrals) Tj
1 0 0 1 54 428.4 Tm
(C15.  Weierstrass elliptic functions) Tj
1 0 0 1 54 417.9 Tm
(C16.  Parabolic cylinder functions) Tj
1 0 0 1 54 407.4 Tm
(C17.  Mathieu functions) Tj
1 0 0 1 54 396.9 Tm
(C18.  Spheroidal wave functions) Tj
1 0 0 1 54 386.4 Tm
(C19.  Other special functions) Tj
1 0 0 1 54 375.9 Tm
(D.  Linear Algebra) Tj
1 0 0 1 54 365.4 Tm
(D1.  Elementary vector and matrix operations) Tj
1 0 0 1 54 354.9 Tm
(D1A.  Elementary vector operations) Tj
1 0 0 1 54 344.4 Tm
(D1A1.  Set to constant) Tj
1 0 0 1 54 333.9 Tm
(D1A2.  Minimum and maximum components) Tj
1 0 0 1 54 323.4 Tm
(D1A3.  Norm) Tj
1 0 0 1 54 312.9 Tm
(D1A3A.  L-1 \(sum of magnitudes\)) Tj
1 0 0 1 54 302.4 Tm
(D1A3B.  L-2 \(Euclidean norm\)) Tj
1 0 0 1 54 291.9 Tm
(D1A3C.  L-infinity \(maximum magnitude\)) Tj
1 0 0 1 54 281.4 Tm
(D1A4.  Dot product \(inner product\)) Tj
1 0 0 1 54 270.9 Tm
(D1A5.  Copy or exchange \(swap\)) Tj
1 0 0 1 54 260.4 Tm
(D1A6.  Multiplication by scalar) Tj
1 0 0 1 54 249.9 Tm
(D1A7.  Triad \(a*x+y for vectors x,y and scalar a\)) Tj
1 0 0 1 54 239.4 Tm
(D1A8.  Elementary rotation \(Givens transformation\)) Tj
1 0 0 1 54 228.9 Tm
(D1A9.  Elementary reflection \(Householder transformation\)) Tj
1 0 0 1 54 218.4 Tm
(D1A10.  Convolutions) Tj
1 0 0 1 54 207.9 Tm
(D1B.  Elementary matrix operations) Tj
1 0 0 1 54 197.4 Tm
(D1B1.  Set to zero, to identity) Tj
1 0 0 1 54 186.9 Tm
(D1B2.  Norm) Tj
1 0 0 1 54 176.4 Tm
(D1B3.  Transpose) Tj
1 0 0 1 54 165.9 Tm
(D1B4.  Multiplication by vector) Tj
1 0 0 1 54 155.4 Tm
(D1B5.  Addition, subtraction) Tj
1 0 0 1 54 144.9 Tm
(D1B6.  Multiplication) Tj
1 0 0 1 54 134.4 Tm
(D1B7.  Matrix polynomial) Tj
1 0 0 1 54 123.9 Tm
(D1B8.  Copy) Tj
1 0 0 1 54 113.4 Tm
(D1B9.  Storage mode conversion) Tj
1 0 0 1 54 102.9 Tm
(D1B10.  Elementary rotation \(Givens transformation\)) Tj
1 0 0 1 54 92.4 Tm
(D1B11.  Elementary reflection \(Householder transformation\)) Tj
1 0 0 1 54 81.9 Tm
(D2.  Solution of systems of linear equations \(including inversion, LU and) Tj
ET
Q
endstream
endobj
93 0 obj
3620
endobj
94 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R91 91 0 R
>>
>>
/Contents 92 0 R
>>
endobj
95 0 obj
<< /Type /Font /Name /R95 /Subtype /Type1 /BaseFont /Courier >>
endobj
96 0 obj
<< /Length 97 0 R >>
stream
q
BT
/R95 10 Tf
1 0 0 1 54 711.9 Tm
(     related decompositions\)) Tj
1 0 0 1 54 701.4 Tm
(D2A.  Real nonsymmetric matrices) Tj
1 0 0 1 54 690.9 Tm
(D2A1.  General) Tj
1 0 0 1 54 680.4 Tm
(D2A2.  Banded) Tj
1 0 0 1 54 669.9 Tm
(D2A2A.  Tridiagonal) Tj
1 0 0 1 54 659.4 Tm
(D2A3.  Triangular) Tj
1 0 0 1 54 648.9 Tm
(D2A4.  Sparse) Tj
1 0 0 1 54 638.4 Tm
(D2B.  Real symmetric matrices) Tj
1 0 0 1 54 627.9 Tm
(D2B1.  General) Tj
1 0 0 1 54 617.4 Tm
(D2B1A.  Indefinite) Tj
1 0 0 1 54 606.9 Tm
(D2B1B.  Positive definite) Tj
1 0 0 1 54 596.4 Tm
(D2B2.  Positive definite banded) Tj
1 0 0 1 54 585.9 Tm
(D2B2A.  Tridiagonal) Tj
1 0 0 1 54 575.4 Tm
(D2B4.  Sparse) Tj
1 0 0 1 54 564.9 Tm
(D2C.  Complex non-Hermitian matrices) Tj
1 0 0 1 54 554.4 Tm
(D2C1.  General) Tj
1 0 0 1 54 543.9 Tm
(D2C2.  Banded) Tj
1 0 0 1 54 533.4 Tm
(D2C2A.  Tridiagonal) Tj
1 0 0 1 54 522.9 Tm
(D2C3.  Triangular) Tj
1 0 0 1 54 512.4 Tm
(D2C4.  Sparse) Tj
1 0 0 1 54 501.9 Tm
(D2D.  Complex Hermitian matrices) Tj
1 0 0 1 54 491.4 Tm
(D2D1.  General) Tj
1 0 0 1 54 480.9 Tm
(D2D1A.  Indefinite) Tj
1 0 0 1 54 470.4 Tm
(D2D1B.  Positive definite) Tj
1 0 0 1 54 459.9 Tm
(D2D2.  Positive definite banded) Tj
1 0 0 1 54 449.4 Tm
(D2D2A.  Tridiagonal) Tj
1 0 0 1 54 438.9 Tm
(D2D4.  Sparse) Tj
1 0 0 1 54 428.4 Tm
(D2E.  Associated operations \(e.g., matrix reorderings\)) Tj
1 0 0 1 54 417.9 Tm
(D3.  Determinants) Tj
1 0 0 1 54 407.4 Tm
(D3A.  Real nonsymmetric matrices) Tj
1 0 0 1 54 396.9 Tm
(D3A1.  General) Tj
1 0 0 1 54 386.4 Tm
(D3A2.  Banded) Tj
1 0 0 1 54 375.9 Tm
(D3A2A.  Tridiagonal) Tj
1 0 0 1 54 365.4 Tm
(D3A3.  Triangular) Tj
1 0 0 1 54 354.9 Tm
(D3A4.  Sparse) Tj
1 0 0 1 54 344.4 Tm
(D3B.  Real symmetric matrices) Tj
1 0 0 1 54 333.9 Tm
(D3B1.  General) Tj
1 0 0 1 54 323.4 Tm
(D3B1A.  Indefinite) Tj
1 0 0 1 54 312.9 Tm
(D3B1B.  Positive definite) Tj
1 0 0 1 54 302.4 Tm
(D3B2.  Positive definite banded) Tj
1 0 0 1 54 291.9 Tm
(D3B2A.  Tridiagonal) Tj
1 0 0 1 54 281.4 Tm
(D3B4.  Sparse) Tj
1 0 0 1 54 270.9 Tm
(D3C.  Complex non-Hermitian matrices) Tj
1 0 0 1 54 260.4 Tm
(D3C1.  General) Tj
1 0 0 1 54 249.9 Tm
(D3C2.  Banded) Tj
1 0 0 1 54 239.4 Tm
(D3C2A.  Tridiagonal) Tj
1 0 0 1 54 228.9 Tm
(D3C3.  Triangular) Tj
1 0 0 1 54 218.4 Tm
(D3C4.  Sparse) Tj
1 0 0 1 54 207.9 Tm
(D3D.  Complex Hermitian matrices) Tj
1 0 0 1 54 197.4 Tm
(D3D1.  General) Tj
1 0 0 1 54 186.9 Tm
(D3D1A.  Indefinite) Tj
1 0 0 1 54 176.4 Tm
(D3D1B.  Positive definite) Tj
1 0 0 1 54 165.9 Tm
(D3D2.  Positive definite banded) Tj
1 0 0 1 54 155.4 Tm
(D3D2A.  Tridiagonal) Tj
1 0 0 1 54 144.9 Tm
(D3D4.  Sparse) Tj
1 0 0 1 54 134.4 Tm
(D4.  Eigenvalues, eigenvectors) Tj
1 0 0 1 54 123.9 Tm
(D4A.  Ordinary eigenvalue problems \(Ax = \(lambda\) * x\)) Tj
1 0 0 1 54 113.4 Tm
(D4A1.  Real symmetric) Tj
1 0 0 1 54 102.9 Tm
(D4A2.  Real nonsymmetric) Tj
1 0 0 1 54 92.4 Tm
(D4A3.  Complex Hermitian) Tj
1 0 0 1 54 81.9 Tm
(D4A4.  Complex non-Hermitian) Tj
ET
Q
endstream
endobj
97 0 obj
2934
endobj
98 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R95 95 0 R
>>
>>
/Contents 96 0 R
>>
endobj
99 0 obj
<< /Type /Font /Name /R99 /Subtype /Type1 /BaseFont /Courier >>
endobj
100 0 obj
<< /Length 101 0 R >>
stream
q
BT
/R99 10 Tf
1 0 0 1 54 711.9 Tm
(D4A5.  Tridiagonal) Tj
1 0 0 1 54 701.4 Tm
(D4A6.  Banded) Tj
1 0 0 1 54 690.9 Tm
(D4A7.  Sparse) Tj
1 0 0 1 54 680.4 Tm
(D4B.  Generalized eigenvalue problems \(e.g., Ax = \(lambda\)*Bx\)) Tj
1 0 0 1 54 669.9 Tm
(D4B1.  Real symmetric) Tj
1 0 0 1 54 659.4 Tm
(D4B2.  Real general) Tj
1 0 0 1 54 648.9 Tm
(D4B3.  Complex Hermitian) Tj
1 0 0 1 54 638.4 Tm
(D4B4.  Complex general) Tj
1 0 0 1 54 627.9 Tm
(D4B5.  Banded) Tj
1 0 0 1 54 617.4 Tm
(D4C.  Associated operations) Tj
1 0 0 1 54 606.9 Tm
(D4C1.  Transform problem) Tj
1 0 0 1 54 596.4 Tm
(D4C1A.  Balance matrix) Tj
1 0 0 1 54 585.9 Tm
(D4C1B.  Reduce to compact form) Tj
1 0 0 1 54 575.4 Tm
(D4C1B1.  Tridiagonal) Tj
1 0 0 1 54 564.9 Tm
(D4C1B2.  Hessenberg) Tj
1 0 0 1 54 554.4 Tm
(D4C1B3.  Other) Tj
1 0 0 1 54 543.9 Tm
(D4C1C.  Standardize problem) Tj
1 0 0 1 54 533.4 Tm
(D4C2.  Compute eigenvalues of matrix in compact form) Tj
1 0 0 1 54 522.9 Tm
(D4C2A.  Tridiagonal) Tj
1 0 0 1 54 512.4 Tm
(D4C2B.  Hessenberg) Tj
1 0 0 1 54 501.9 Tm
(D4C2C.  Other) Tj
1 0 0 1 54 491.4 Tm
(D4C3.  Form eigenvectors from eigenvalues) Tj
1 0 0 1 54 480.9 Tm
(D4C4.  Back transform eigenvectors) Tj
1 0 0 1 54 470.4 Tm
(D4C5.  Determine Jordan normal form) Tj
1 0 0 1 54 459.9 Tm
(D5.  QR decomposition, Gram-Schmidt orthogonalization) Tj
1 0 0 1 54 449.4 Tm
(D6.  Singular value decomposition) Tj
1 0 0 1 54 438.9 Tm
(D7.  Update matrix decompositions) Tj
1 0 0 1 54 428.4 Tm
(D7A.  LU) Tj
1 0 0 1 54 417.9 Tm
(D7B.  Cholesky) Tj
1 0 0 1 54 407.4 Tm
(D7C.  QR) Tj
1 0 0 1 54 396.9 Tm
(D7D.  Singular value) Tj
1 0 0 1 54 386.4 Tm
(D8.  Other matrix equations \(e.g., AX+XB=C\)) Tj
1 0 0 1 54 375.9 Tm
(D9.  Overdetermined or underdetermined systems of equations, singular systems,) Tj
1 0 0 1 54 365.4 Tm
(     pseudo-inverses \(search also classes D5, D6, K1a, L8a\)) Tj
1 0 0 1 54 354.9 Tm
(E.  Interpolation) Tj
1 0 0 1 54 344.4 Tm
(E1.  Univariate data \(curve fitting\)) Tj
1 0 0 1 54 333.9 Tm
(E1A.  Polynomial splines \(piecewise polynomials\)) Tj
1 0 0 1 54 323.4 Tm
(E1B.  Polynomials) Tj
1 0 0 1 54 312.9 Tm
(E1C.  Other functions \(e.g., rational, trigonometric\)) Tj
1 0 0 1 54 302.4 Tm
(E2.  Multivariate data \(surface fitting\)) Tj
1 0 0 1 54 291.9 Tm
(E2A.  Gridded) Tj
1 0 0 1 54 281.4 Tm
(E2B.  Scattered) Tj
1 0 0 1 54 270.9 Tm
(E3.  Service routines \(e.g., grid generation, evaluation of fitted functions\)) Tj
1 0 0 1 54 260.4 Tm
(     \(search also class N5\)) Tj
1 0 0 1 54 249.9 Tm
(F.  Solution of nonlinear equations) Tj
1 0 0 1 54 239.4 Tm
(F1.  Single equation) Tj
1 0 0 1 54 228.9 Tm
(F1A.  Smooth) Tj
1 0 0 1 54 218.4 Tm
(F1A1.  Polynomial) Tj
1 0 0 1 54 207.9 Tm
(F1A1A.  Real coefficients) Tj
1 0 0 1 54 197.4 Tm
(F1A1B.  Complex coefficients) Tj
1 0 0 1 54 186.9 Tm
(F1A2.  Nonpolynomial) Tj
1 0 0 1 54 176.4 Tm
(F1B.  General \(no smoothness assumed\)) Tj
1 0 0 1 54 165.9 Tm
(F2.  System of equations) Tj
1 0 0 1 54 155.4 Tm
(F2A.  Smooth) Tj
1 0 0 1 54 144.9 Tm
(F2B.  General \(no smoothness assumed\)) Tj
1 0 0 1 54 134.4 Tm
(F3.  Service routines \(e.g., check user-supplied derivatives\)) Tj
1 0 0 1 54 123.9 Tm
(G.  Optimization \(search also classes K, L8\)) Tj
1 0 0 1 54 113.4 Tm
(G1.  Unconstrained) Tj
1 0 0 1 54 102.9 Tm
(G1A.  Univariate) Tj
1 0 0 1 54 92.4 Tm
(G1A1.  Smooth function) Tj
1 0 0 1 54 81.9 Tm
(G1A1A.  User provides no derivatives) Tj
ET
Q
endstream
endobj
101 0 obj
3389
endobj
102 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R99 99 0 R
>>
>>
/Contents 100 0 R
>>
endobj
103 0 obj
<< /Type /Font /Name /R103 /Subtype /Type1 /BaseFont /Courier >>
endobj
104 0 obj
<< /Length 105 0 R >>
stream
q
BT
/R103 10 Tf
1 0 0 1 54 711.9 Tm
(G1A1B.  User provides first derivatives) Tj
1 0 0 1 54 701.4 Tm
(G1A1C.  User provides first and second derivatives) Tj
1 0 0 1 54 690.9 Tm
(G1A2.  General function \(no smoothness assumed\)) Tj
1 0 0 1 54 680.4 Tm
(G1B.  Multivariate) Tj
1 0 0 1 54 669.9 Tm
(G1B1.  Smooth function) Tj
1 0 0 1 54 659.4 Tm
(G1B1A.  User provides no derivatives) Tj
1 0 0 1 54 648.9 Tm
(G1B1B.  User provides first derivatives) Tj
1 0 0 1 54 638.4 Tm
(G1B1C.  User provides first and second derivatives) Tj
1 0 0 1 54 627.9 Tm
(G1B2.  General function \(no smoothness assumed\)) Tj
1 0 0 1 54 617.4 Tm
(G2.  Constrained) Tj
1 0 0 1 54 606.9 Tm
(G2A.  Linear programming) Tj
1 0 0 1 54 596.4 Tm
(G2A1.  Dense matrix of constraints) Tj
1 0 0 1 54 585.9 Tm
(G2A2.  Sparse matrix of constraints) Tj
1 0 0 1 54 575.4 Tm
(G2B.  Transportation and assignments problem) Tj
1 0 0 1 54 564.9 Tm
(G2C.  Integer programming) Tj
1 0 0 1 54 554.4 Tm
(G2C1.  Zero/one) Tj
1 0 0 1 54 543.9 Tm
(G2C2.  Covering and packing problems) Tj
1 0 0 1 54 533.4 Tm
(G2C3.  Knapsack problems) Tj
1 0 0 1 54 522.9 Tm
(G2C4.  Matching problems) Tj
1 0 0 1 54 512.4 Tm
(G2C5.  Routing, scheduling, location problems) Tj
1 0 0 1 54 501.9 Tm
(G2C6.  Pure integer programming) Tj
1 0 0 1 54 491.4 Tm
(G2C7.  Mixed integer programming) Tj
1 0 0 1 54 480.9 Tm
(G2D.  Network \(for network reliability search class M\)) Tj
1 0 0 1 54 470.4 Tm
(G2D1.  Shortest path) Tj
1 0 0 1 54 459.9 Tm
(G2D2.  Minimum spanning tree) Tj
1 0 0 1 54 449.4 Tm
(G2D3.  Maximum flow) Tj
1 0 0 1 54 438.9 Tm
(G2D3A.  Generalized networks) Tj
1 0 0 1 54 428.4 Tm
(G2D3B.  Networks with side constraints) Tj
1 0 0 1 54 417.9 Tm
(G2D4.  Test problem generation) Tj
1 0 0 1 54 407.4 Tm
(G2E.  Quadratic programming) Tj
1 0 0 1 54 396.9 Tm
(G2E1.  Positive definite Hessian \(i.e. convex problem\)) Tj
1 0 0 1 54 386.4 Tm
(G2E2.  Indefinite Hessian) Tj
1 0 0 1 54 375.9 Tm
(G2F.  Geometric programming) Tj
1 0 0 1 54 365.4 Tm
(G2G.  Dynamic programming) Tj
1 0 0 1 54 354.9 Tm
(G2H.  General nonlinear programming) Tj
1 0 0 1 54 344.4 Tm
(G2H1.  Simple bounds) Tj
1 0 0 1 54 333.9 Tm
(G2H1A.  Smooth function) Tj
1 0 0 1 54 323.4 Tm
(G2H1A1.  User provides no derivatives) Tj
1 0 0 1 54 312.9 Tm
(G2H1A2.  User provides first derivatives) Tj
1 0 0 1 54 302.4 Tm
(G2H1A3.  User provides first and second derivatives) Tj
1 0 0 1 54 291.9 Tm
(G2H1B.  General function \(no smoothness assumed\)) Tj
1 0 0 1 54 281.4 Tm
(G2H2.  Linear equality or inequality constraints) Tj
1 0 0 1 54 270.9 Tm
(G2H2A.  Smooth function) Tj
1 0 0 1 54 260.4 Tm
(G2H2A1.  User provides no derivatives) Tj
1 0 0 1 54 249.9 Tm
(G2H2A2.  User provides first derivatives) Tj
1 0 0 1 54 239.4 Tm
(G2H2A3.  User provides first and second derivatives) Tj
1 0 0 1 54 228.9 Tm
(G2H2B.  General function \(no smoothness assumed\)) Tj
1 0 0 1 54 218.4 Tm
(G2H3.  Nonlinear constraints) Tj
1 0 0 1 54 207.9 Tm
(G2H3A.  Equality constraints only) Tj
1 0 0 1 54 197.4 Tm
(G2H3A1.  Smooth function and constraints) Tj
1 0 0 1 54 186.9 Tm
(G2H3A1A.  User provides no derivatives) Tj
1 0 0 1 54 176.4 Tm
(G2H3A1B.  User provides first derivatives of function and constraints) Tj
1 0 0 1 54 165.9 Tm
(G2H3A1C.  User provides first and second derivatives of function and) Tj
1 0 0 1 54 155.4 Tm
(          constraints) Tj
1 0 0 1 54 144.9 Tm
(G2H3A2.  General function and constraints \(no smoothness assumed\)) Tj
1 0 0 1 54 134.4 Tm
(G2H3B.  Equality and inequality constraints) Tj
1 0 0 1 54 123.9 Tm
(G2H3B1.  Smooth function and constraints) Tj
1 0 0 1 54 113.4 Tm
(G2H3B1A.  User provides no derivatives) Tj
1 0 0 1 54 102.9 Tm
(G2H3B1B.  User provides first derivatives of function and constraints) Tj
1 0 0 1 54 92.4 Tm
(G2H3B1C.  User provides first and second derivatives of function and) Tj
1 0 0 1 54 81.9 Tm
(          constraints) Tj
ET
Q
endstream
endobj
105 0 obj
3870
endobj
106 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R103 103 0 R
>>
>>
/Contents 104 0 R
>>
endobj
107 0 obj
<< /Type /Font /Name /R107 /Subtype /Type1 /BaseFont /Courier >>
endobj
108 0 obj
<< /Length 109 0 R >>
stream
q
BT
/R107 10 Tf
1 0 0 1 54 711.9 Tm
(G2H3B2.  General function and constraints \(no smoothness assumed\)) Tj
1 0 0 1 54 701.4 Tm
(G2I.  Global solution to nonconvex problems) Tj
1 0 0 1 54 690.9 Tm
(G3.  Optimal control) Tj
1 0 0 1 54 680.4 Tm
(G4.  Service routines) Tj
1 0 0 1 54 669.9 Tm
(G4A.  Problem input \(e.g., matrix generation\)) Tj
1 0 0 1 54 659.4 Tm
(G4B.  Problem scaling) Tj
1 0 0 1 54 648.9 Tm
(G4C.  Check user-supplied derivatives) Tj
1 0 0 1 54 638.4 Tm
(G4D.  Find feasible point) Tj
1 0 0 1 54 627.9 Tm
(G4E.  Check for redundancy) Tj
1 0 0 1 54 617.4 Tm
(G4F.  Other) Tj
1 0 0 1 54 606.9 Tm
(H.  Differentiation, integration) Tj
1 0 0 1 54 596.4 Tm
(H1.  Numerical differentiation) Tj
1 0 0 1 54 585.9 Tm
(H2.  Quadrature \(numerical evaluation of definite integrals\)) Tj
1 0 0 1 54 575.4 Tm
(H2A.  One-dimensional integrals) Tj
1 0 0 1 54 564.9 Tm
(H2A1.  Finite interval \(general integrand\)) Tj
1 0 0 1 54 554.4 Tm
(H2A1A.  Integrand available via user-defined procedure) Tj
1 0 0 1 54 543.9 Tm
(H2A1A1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 533.4 Tm
(H2A1A2.  Nonautomatic) Tj
1 0 0 1 54 522.9 Tm
(H2A1B.  Integrand available only on grid) Tj
1 0 0 1 54 512.4 Tm
(H2A1B1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 501.9 Tm
(H2A1B2.  Nonautomatic) Tj
1 0 0 1 54 491.4 Tm
(H2A2.  Finite interval \(specific or special type integrand including weight) Tj
1 0 0 1 54 480.9 Tm
(       functions, oscillating and singular integrands, principal value) Tj
1 0 0 1 54 470.4 Tm
(       integrals, splines, etc.\)) Tj
1 0 0 1 54 459.9 Tm
(H2A2A.  Integrand available via user-defined procedure) Tj
1 0 0 1 54 449.4 Tm
(H2A2A1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 438.9 Tm
(H2A2A2.  Nonautomatic) Tj
1 0 0 1 54 428.4 Tm
(H2A2B.  Integrand available only on grid) Tj
1 0 0 1 54 417.9 Tm
(H2A2B1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 407.4 Tm
(H2A2B2.  Nonautomatic) Tj
1 0 0 1 54 396.9 Tm
(H2A3.  Semi-infinite interval \(including e**\(-x\) weight function\)) Tj
1 0 0 1 54 386.4 Tm
(H2A3A.  Integrand available via user-defined procedure) Tj
1 0 0 1 54 375.9 Tm
(H2A3A1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 365.4 Tm
(H2A3A2.  Nonautomatic) Tj
1 0 0 1 54 354.9 Tm
(H2A4.  Infinite interval \(including e**\(-x**2\)\) weight function\)) Tj
1 0 0 1 54 344.4 Tm
(H2A4A.  Integrand available via user-defined procedure) Tj
1 0 0 1 54 333.9 Tm
(H2A4A1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 323.4 Tm
(H2A4A2.  Nonautomatic) Tj
1 0 0 1 54 312.9 Tm
(H2B.  Multidimensional integrals) Tj
1 0 0 1 54 302.4 Tm
(H2B1.  One or more hyper-rectangular regions) Tj
1 0 0 1 54 291.9 Tm
(H2B1A.  Integrand available via user-defined procedure) Tj
1 0 0 1 54 281.4 Tm
(H2B1A1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 270.9 Tm
(H2B1A2.  Nonautomatic) Tj
1 0 0 1 54 260.4 Tm
(H2B1B.  Integrand available only on grid) Tj
1 0 0 1 54 249.9 Tm
(H2B1B1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 239.4 Tm
(H2B1B2.  Nonautomatic) Tj
1 0 0 1 54 228.9 Tm
(H2B2.  Nonrectangular region, general region) Tj
1 0 0 1 54 218.4 Tm
(H2B2A.  Integrand available via user-defined procedure) Tj
1 0 0 1 54 207.9 Tm
(H2B2A1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 197.4 Tm
(H2B2A2.  Nonautomatic) Tj
1 0 0 1 54 186.9 Tm
(H2B2B.  Integrand available only on grid) Tj
1 0 0 1 54 176.4 Tm
(H2B2B1.  Automatic \(user need only specify required accuracy\)) Tj
1 0 0 1 54 165.9 Tm
(H2B2B2.  Nonautomatic) Tj
1 0 0 1 54 155.4 Tm
(H2C.  Service routines \(compute weight and nodes for quadrature formulas\)) Tj
1 0 0 1 54 144.9 Tm
(I.  Differential and integral equations) Tj
1 0 0 1 54 134.4 Tm
(I1.  Ordinary differential equations) Tj
1 0 0 1 54 123.9 Tm
(I1A.  Initial value problems) Tj
1 0 0 1 54 113.4 Tm
(I1A1.  General, nonstiff or mildly stiff) Tj
1 0 0 1 54 102.9 Tm
(I1A1A.  One-step methods \(e.g., Runge-Kutta\)) Tj
1 0 0 1 54 92.4 Tm
(I1A1B.  Multistep methods \(e.g., Adams' predictor-corrector\)) Tj
1 0 0 1 54 81.9 Tm
(I1A1C.  Extrapolation methods \(e.g., Bulirsch-Stoer\)) Tj
ET
Q
endstream
endobj
109 0 obj
4264
endobj
110 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R107 107 0 R
>>
>>
/Contents 108 0 R
>>
endobj
111 0 obj
<< /Type /Font /Name /R111 /Subtype /Type1 /BaseFont /Courier >>
endobj
112 0 obj
<< /Length 113 0 R >>
stream
q
BT
/R111 10 Tf
1 0 0 1 54 711.9 Tm
(I1A2.  Stiff and mixed algebraic-differential equations) Tj
1 0 0 1 54 701.4 Tm
(I1B.  Multipoint boundary value problems) Tj
1 0 0 1 54 690.9 Tm
(I1B1.  Linear) Tj
1 0 0 1 54 680.4 Tm
(I1B2.  Nonlinear) Tj
1 0 0 1 54 669.9 Tm
(I1B3.  Eigenvalue \(e.g., Sturm-Liouville\)) Tj
1 0 0 1 54 659.4 Tm
(I1C.  Service routines \(e.g., interpolation of solutions, error handling\)) Tj
1 0 0 1 54 648.9 Tm
(I2.  Partial differential equations) Tj
1 0 0 1 54 638.4 Tm
(I2A.  Initial boundary value problems) Tj
1 0 0 1 54 627.9 Tm
(I2A1.  Parabolic) Tj
1 0 0 1 54 617.4 Tm
(I2A1A.  One spatial dimension) Tj
1 0 0 1 54 606.9 Tm
(I2A1B.  Two or more spatial dimensions) Tj
1 0 0 1 54 596.4 Tm
(I2A2.  Hyperbolic) Tj
1 0 0 1 54 585.9 Tm
(I2B.  Elliptic boundary value problems) Tj
1 0 0 1 54 575.4 Tm
(I2B1.  Linear) Tj
1 0 0 1 54 564.9 Tm
(I2B1A.  Second order) Tj
1 0 0 1 54 554.4 Tm
(I2B1A1.  Poisson \(Laplace\) or Helmholz equation) Tj
1 0 0 1 54 543.9 Tm
(I2B1A1A.  Rectangular domain \(or topologically rectangular in the coordinate) Tj
1 0 0 1 54 533.4 Tm
(          system\)) Tj
1 0 0 1 54 522.9 Tm
(I2B1A1B.  Nonrectangular domain) Tj
1 0 0 1 54 512.4 Tm
(I2B1A2.  Other separable problems) Tj
1 0 0 1 54 501.9 Tm
(I2B1A3.  Nonseparable problems) Tj
1 0 0 1 54 491.4 Tm
(I2B1C.  Higher order equations \(e.g., biharmonic\)) Tj
1 0 0 1 54 480.9 Tm
(I2B2.  Nonlinear) Tj
1 0 0 1 54 470.4 Tm
(I2B3.  Eigenvalue) Tj
1 0 0 1 54 459.9 Tm
(I2B4.  Service routines) Tj
1 0 0 1 54 449.4 Tm
(I2B4A.  Domain triangulation \(search also class P2a2c1\)) Tj
1 0 0 1 54 438.9 Tm
(I2B4B.  Solution of discretized elliptic equations) Tj
1 0 0 1 54 428.4 Tm
(I3.  Integral equations) Tj
1 0 0 1 54 417.9 Tm
(J.  Integral transforms) Tj
1 0 0 1 54 407.4 Tm
(J1.  Fast Fourier transforms \(search class L10 for time series analysis\)) Tj
1 0 0 1 54 396.9 Tm
(J1A.  One-dimensional) Tj
1 0 0 1 54 386.4 Tm
(J1A1.  Real) Tj
1 0 0 1 54 375.9 Tm
(J1A2.  Complex) Tj
1 0 0 1 54 365.4 Tm
(J1A3.  Trigonometric \(sine, cosine\)) Tj
1 0 0 1 54 354.9 Tm
(J1B.  Multidimensional) Tj
1 0 0 1 54 344.4 Tm
(J2.  Convolutions) Tj
1 0 0 1 54 333.9 Tm
(J3.  Laplace transforms) Tj
1 0 0 1 54 323.4 Tm
(J4.  Hilbert transforms) Tj
1 0 0 1 54 312.9 Tm
(K.  Approximation \(search also class L8\)) Tj
1 0 0 1 54 302.4 Tm
(K1.  Least squares \(L-2\) approximation) Tj
1 0 0 1 54 291.9 Tm
(K1A.  Linear least squares \(search also classes D5, D6, D9\)) Tj
1 0 0 1 54 281.4 Tm
(K1A1.  Unconstrained) Tj
1 0 0 1 54 270.9 Tm
(K1A1A.  Univariate data \(curve fitting\)) Tj
1 0 0 1 54 260.4 Tm
(K1A1A1.  Polynomial splines \(piecewise polynomials\)) Tj
1 0 0 1 54 249.9 Tm
(K1A1A2.  Polynomials) Tj
1 0 0 1 54 239.4 Tm
(K1A1A3.  Other functions \(e.g., rational, trigonometric, user-specified\)) Tj
1 0 0 1 54 228.9 Tm
(K1A1B.  Multivariate data \(surface fitting\)) Tj
1 0 0 1 54 218.4 Tm
(K1A2.  Constrained) Tj
1 0 0 1 54 207.9 Tm
(K1A2A.  Linear constraints) Tj
1 0 0 1 54 197.4 Tm
(K1A2B.  Nonlinear constraints) Tj
1 0 0 1 54 186.9 Tm
(K1B.  Nonlinear least squares) Tj
1 0 0 1 54 176.4 Tm
(K1B1.  Unconstrained) Tj
1 0 0 1 54 165.9 Tm
(K1B1A.  Smooth functions) Tj
1 0 0 1 54 155.4 Tm
(K1B1A1.  User provides no derivatives) Tj
1 0 0 1 54 144.9 Tm
(K1B1A2.  User provides first derivatives) Tj
1 0 0 1 54 134.4 Tm
(K1B1A3.  User provides first and second derivatives) Tj
1 0 0 1 54 123.9 Tm
(K1B1B.  General functions) Tj
1 0 0 1 54 113.4 Tm
(K1B2.  Constrained) Tj
1 0 0 1 54 102.9 Tm
(K1B2A.  Linear constraints) Tj
1 0 0 1 54 92.4 Tm
(K1B2B.  Nonlinear constraints) Tj
1 0 0 1 54 81.9 Tm
(K2.  Minimax \(L-infinity\) approximation) Tj
ET
Q
endstream
endobj
113 0 obj
3640
endobj
114 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R111 111 0 R
>>
>>
/Contents 112 0 R
>>
endobj
115 0 obj
<< /Type /Font /Name /R115 /Subtype /Type1 /BaseFont /Courier >>
endobj
116 0 obj
<< /Length 117 0 R >>
stream
q
BT
/R115 10 Tf
1 0 0 1 54 711.9 Tm
(K3.  Least absolute value \(L-1\) approximation) Tj
1 0 0 1 54 701.4 Tm
(K4.  Other analytic approximations \(e.g., Taylor polynomial, Pade\)) Tj
1 0 0 1 54 690.9 Tm
(K5.  Smoothing) Tj
1 0 0 1 54 680.4 Tm
(K6.  Service routines \(e.g., mesh generation, evaluation of fitted functions\)) Tj
1 0 0 1 54 669.9 Tm
(     \(search also class N5\)) Tj
1 0 0 1 54 659.4 Tm
(L.  Statistics, probability) Tj
1 0 0 1 54 648.9 Tm
(L1.  Data summarization) Tj
1 0 0 1 54 638.4 Tm
(L1A.  One univariate quantitative sample) Tj
1 0 0 1 54 627.9 Tm
(L1A1.  Ungrouped data) Tj
1 0 0 1 54 617.4 Tm
(L1A1A.  Location) Tj
1 0 0 1 54 606.9 Tm
(L1A1B.  Dispersion) Tj
1 0 0 1 54 596.4 Tm
(L1A1C.  Shape) Tj
1 0 0 1 54 585.9 Tm
(L1A1D.  Distribution, density) Tj
1 0 0 1 54 575.4 Tm
(L1A2.  Ungrouped data with missing values) Tj
1 0 0 1 54 564.9 Tm
(L1A3.  Grouped data) Tj
1 0 0 1 54 554.4 Tm
(L1A3A.  Location) Tj
1 0 0 1 54 543.9 Tm
(L1A3B.  Dispersion) Tj
1 0 0 1 54 533.4 Tm
(L1A3C.  Shape) Tj
1 0 0 1 54 522.9 Tm
(L1C.  One univariate qualitative \(proportional\) sample) Tj
1 0 0 1 54 512.4 Tm
(L1E.  Two or more univariate samples or one multivariate sample) Tj
1 0 0 1 54 501.9 Tm
(L1E1.  Ungrouped data) Tj
1 0 0 1 54 491.4 Tm
(L1E1A.  Location) Tj
1 0 0 1 54 480.9 Tm
(L1E1B.  Correlation) Tj
1 0 0 1 54 470.4 Tm
(L1E2.  Ungrouped data with missing values) Tj
1 0 0 1 54 459.9 Tm
(L1E3.  Grouped data) Tj
1 0 0 1 54 449.4 Tm
(L1F.  Two or more multivariate samples) Tj
1 0 0 1 54 438.9 Tm
(L2.  Data manipulation \(search also class N\)) Tj
1 0 0 1 54 428.4 Tm
(L2A.  Transform \(search also class N6 for sorting, ranking\)) Tj
1 0 0 1 54 417.9 Tm
(L2B.  Group) Tj
1 0 0 1 54 407.4 Tm
(L2C.  Sample) Tj
1 0 0 1 54 396.9 Tm
(L2D.  Subset) Tj
1 0 0 1 54 386.4 Tm
(L3.  Graphics \(search also class Q\)) Tj
1 0 0 1 54 375.9 Tm
(L3A.  Histograms) Tj
1 0 0 1 54 365.4 Tm
(L3B.  Distribution functions) Tj
1 0 0 1 54 354.9 Tm
(L3C.  Scatter diagrams) Tj
1 0 0 1 54 344.4 Tm
(L3C1.  Y vs. X) Tj
1 0 0 1 54 333.9 Tm
(L3C2.  Symbol plots) Tj
1 0 0 1 54 323.4 Tm
(L3C3.  Multiple plots) Tj
1 0 0 1 54 312.9 Tm
(L3C4.  Probability plots) Tj
1 0 0 1 54 302.4 Tm
(L3C4B.  Beta, binomial) Tj
1 0 0 1 54 291.9 Tm
(L3C4C.  Cauchy, chi-squared) Tj
1 0 0 1 54 281.4 Tm
(L3C4D.  Double exponential) Tj
1 0 0 1 54 270.9 Tm
(L3C4E.  Exponential, extreme value) Tj
1 0 0 1 54 260.4 Tm
(L3C4F.  F distribution) Tj
1 0 0 1 54 249.9 Tm
(L3C4G.  Gamma, geometric) Tj
1 0 0 1 54 239.4 Tm
(L3C4H.  Halfnormal) Tj
1 0 0 1 54 228.9 Tm
(L3C4L.  Lambda, logistic, lognormal) Tj
1 0 0 1 54 218.4 Tm
(L3C4N.  Negative binomial, normal) Tj
1 0 0 1 54 207.9 Tm
(L3C4P.  Pareto, Poisson) Tj
1 0 0 1 54 197.4 Tm
(L3C4T.  t distribution) Tj
1 0 0 1 54 186.9 Tm
(L3C4U.  Uniform) Tj
1 0 0 1 54 176.4 Tm
(L3C4W.  Weibull) Tj
1 0 0 1 54 165.9 Tm
(L3C5.  Time series plots \(X\(i\) vs. i, vertical, lag\)) Tj
1 0 0 1 54 155.4 Tm
(L3D.  EDA graphics) Tj
1 0 0 1 54 144.9 Tm
(L4.  Elementary statistical inference, hypothesis testing) Tj
1 0 0 1 54 134.4 Tm
(L4A.  One univariate quantitative sample) Tj
1 0 0 1 54 123.9 Tm
(L4A1.  Ungrouped data) Tj
1 0 0 1 54 113.4 Tm
(L4A1A.  Parameter estimation) Tj
1 0 0 1 54 102.9 Tm
(L4A1A2.  Binomial) Tj
1 0 0 1 54 92.4 Tm
(L4A1A5.  Extreme value) Tj
1 0 0 1 54 81.9 Tm
(L4A1A14.  Normal) Tj
ET
Q
endstream
endobj
117 0 obj
3324
endobj
118 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R115 115 0 R
>>
>>
/Contents 116 0 R
>>
endobj
119 0 obj
<< /Type /Font /Name /R119 /Subtype /Type1 /BaseFont /Courier >>
endobj
120 0 obj
<< /Length 121 0 R >>
stream
q
BT
/R119 10 Tf
1 0 0 1 54 711.9 Tm
(L4A1A16.  Poisson) Tj
1 0 0 1 54 701.4 Tm
(L4A1A21.  Uniform) Tj
1 0 0 1 54 690.9 Tm
(L4A1A23.  Weibull) Tj
1 0 0 1 54 680.4 Tm
(L4A1B.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 669.9 Tm
(L4A1C.  Goodness-of-fit tests) Tj
1 0 0 1 54 659.4 Tm
(L4A1D.  Tests on sequences of numbers) Tj
1 0 0 1 54 648.9 Tm
(L4A1E.  Density and distribution function estimation) Tj
1 0 0 1 54 638.4 Tm
(L4A1F.  Tolerance limits) Tj
1 0 0 1 54 627.9 Tm
(L4A2.  Ungrouped data with missing values) Tj
1 0 0 1 54 617.4 Tm
(L4A3.  Grouped data) Tj
1 0 0 1 54 606.9 Tm
(L4A3A.  Parameter estimation) Tj
1 0 0 1 54 596.4 Tm
(L4A3A14.  Normal) Tj
1 0 0 1 54 585.9 Tm
(L4B.  Two or more univariate quantitative samples) Tj
1 0 0 1 54 575.4 Tm
(L4B1.  Ungrouped data) Tj
1 0 0 1 54 564.9 Tm
(L4B1A.  Parameter estimation) Tj
1 0 0 1 54 554.4 Tm
(L4B1A14.  Normal) Tj
1 0 0 1 54 543.9 Tm
(L4B1B.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 533.4 Tm
(L4B2.  Ungrouped data with missing values) Tj
1 0 0 1 54 522.9 Tm
(L4B3.  Grouped data) Tj
1 0 0 1 54 512.4 Tm
(L4C.  One univariate qualitative \(proportional\) sample) Tj
1 0 0 1 54 501.9 Tm
(L4D.  Two or more univariate samples) Tj
1 0 0 1 54 491.4 Tm
(L4E.  One multivariate sample) Tj
1 0 0 1 54 480.9 Tm
(L4E1.  Ungrouped data) Tj
1 0 0 1 54 470.4 Tm
(L4E1A.  Parameter estimation) Tj
1 0 0 1 54 459.9 Tm
(L4E1A14.  Normal) Tj
1 0 0 1 54 449.4 Tm
(L4E1B.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 438.9 Tm
(L4E2.  Ungrouped data with missing values) Tj
1 0 0 1 54 428.4 Tm
(L4E2A.  Parameter estimation) Tj
1 0 0 1 54 417.9 Tm
(L4E2B.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 407.4 Tm
(L4E3.  Grouped data) Tj
1 0 0 1 54 396.9 Tm
(L4E3A.  Parameter estimation) Tj
1 0 0 1 54 386.4 Tm
(L4E3A14.  Normal) Tj
1 0 0 1 54 375.9 Tm
(L4E3B.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 365.4 Tm
(L4E4.  Two or more multivariate samples) Tj
1 0 0 1 54 354.9 Tm
(L4E4A.  Parameter estimation) Tj
1 0 0 1 54 344.4 Tm
(L4E4A14.  Normal) Tj
1 0 0 1 54 333.9 Tm
(L5.  Function evaluation \(search also class C\)) Tj
1 0 0 1 54 323.4 Tm
(L5A.  Univariate) Tj
1 0 0 1 54 312.9 Tm
(L5A1.  Cumulative distribution functions, probability density functions) Tj
1 0 0 1 54 302.4 Tm
(L5A1B.  Beta, binomial) Tj
1 0 0 1 54 291.9 Tm
(L5A1C.  Cauchy, chi-squared) Tj
1 0 0 1 54 281.4 Tm
(L5A1D.  Double exponential) Tj
1 0 0 1 54 270.9 Tm
(L5A1E.  Error function, exponential, extreme value) Tj
1 0 0 1 54 260.4 Tm
(L5A1F.  F distribution) Tj
1 0 0 1 54 249.9 Tm
(L5A1G.  Gamma, general, geometric) Tj
1 0 0 1 54 239.4 Tm
(L5A1H.  Halfnormal, hypergeometric) Tj
1 0 0 1 54 228.9 Tm
(L5A1K.  Kolmogorov-Smirnov) Tj
1 0 0 1 54 218.4 Tm
(L5A1L.  Lambda, logistic, lognormal) Tj
1 0 0 1 54 207.9 Tm
(L5A1N.  Negative binomial, normal) Tj
1 0 0 1 54 197.4 Tm
(L5A1P.  Pareto, Poisson) Tj
1 0 0 1 54 186.9 Tm
(L5A1T.  t distribution) Tj
1 0 0 1 54 176.4 Tm
(L5A1U.  Uniform) Tj
1 0 0 1 54 165.9 Tm
(L5A1W.  Weibull) Tj
1 0 0 1 54 155.4 Tm
(L5A2.  Inverse cumulative distribution functions, sparsity functions) Tj
1 0 0 1 54 144.9 Tm
(L5A2B.  Beta, binomial) Tj
1 0 0 1 54 134.4 Tm
(L5A2C.  Cauchy, chi-squared) Tj
1 0 0 1 54 123.9 Tm
(L5A2D.  Double exponential) Tj
1 0 0 1 54 113.4 Tm
(L5A2E.  Exponential, extreme value) Tj
1 0 0 1 54 102.9 Tm
(L5A2F.  F distribution) Tj
1 0 0 1 54 92.4 Tm
(L5A2G.  Gamma, general, geometric) Tj
1 0 0 1 54 81.9 Tm
(L5A2H.  Halfnormal) Tj
ET
Q
endstream
endobj
121 0 obj
3506
endobj
122 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R119 119 0 R
>>
>>
/Contents 120 0 R
>>
endobj
123 0 obj
<< /Type /Font /Name /R123 /Subtype /Type1 /BaseFont /Courier >>
endobj
124 0 obj
<< /Length 125 0 R >>
stream
q
BT
/R123 10 Tf
1 0 0 1 54 711.9 Tm
(L5A2L.  Lambda, logistic, lognormal) Tj
1 0 0 1 54 701.4 Tm
(L5A2N.  Negative binomial, normal, normal scores) Tj
1 0 0 1 54 690.9 Tm
(L5A2P.  Pareto, Poisson) Tj
1 0 0 1 54 680.4 Tm
(L5A2T.  t distribution) Tj
1 0 0 1 54 669.9 Tm
(L5A2U.  Uniform) Tj
1 0 0 1 54 659.4 Tm
(L5A2W.  Weibull) Tj
1 0 0 1 54 648.9 Tm
(L5B.  Multivariate) Tj
1 0 0 1 54 638.4 Tm
(L5B1.  Cumulative distribution functions, probability density functions) Tj
1 0 0 1 54 627.9 Tm
(L5B1N.  Normal) Tj
1 0 0 1 54 617.4 Tm
(L6.  Pseudo-random number generation) Tj
1 0 0 1 54 606.9 Tm
(L6A.  Univariate) Tj
1 0 0 1 54 596.4 Tm
(L6A2.  Beta, binomial, Boolean) Tj
1 0 0 1 54 585.9 Tm
(L6A3.  Cauchy, chi-squared) Tj
1 0 0 1 54 575.4 Tm
(L6A4.  Double exponential) Tj
1 0 0 1 54 564.9 Tm
(L6A5.  Exponential, extreme value) Tj
1 0 0 1 54 554.4 Tm
(L6A6.  F distribution) Tj
1 0 0 1 54 543.9 Tm
(L6A7.  Gamma, general \(continuous, discrete\) distributions, geometric) Tj
1 0 0 1 54 533.4 Tm
(L6A8.  Halfnormal, hypergeometric) Tj
1 0 0 1 54 522.9 Tm
(L6A9.  Integers) Tj
1 0 0 1 54 512.4 Tm
(L6A12.  Lambda, logical, logistic, lognormal) Tj
1 0 0 1 54 501.9 Tm
(L6A14.  Negative binomial, normal) Tj
1 0 0 1 54 491.4 Tm
(L6A15.  Order statistics) Tj
1 0 0 1 54 480.9 Tm
(L6A16.  Pareto, permutations, Poisson) Tj
1 0 0 1 54 470.4 Tm
(L6A19.  Samples, stable distribution) Tj
1 0 0 1 54 459.9 Tm
(L6A20.  t distribution, time series, triangular) Tj
1 0 0 1 54 449.4 Tm
(L6A21.  Uniform) Tj
1 0 0 1 54 438.9 Tm
(L6A22.  Von Mises) Tj
1 0 0 1 54 428.4 Tm
(L6A23.  Weibull) Tj
1 0 0 1 54 417.9 Tm
(L6B.  Multivariate) Tj
1 0 0 1 54 407.4 Tm
(L6B3.  Contingency table, correlation matrix) Tj
1 0 0 1 54 396.9 Tm
(L6B13.  Multinomial) Tj
1 0 0 1 54 386.4 Tm
(L6B14.  Normal) Tj
1 0 0 1 54 375.9 Tm
(L6B15.  Orthogonal matrix) Tj
1 0 0 1 54 365.4 Tm
(L6B21.  Uniform) Tj
1 0 0 1 54 354.9 Tm
(L6C.  Service routines \(e.g., seed\)) Tj
1 0 0 1 54 344.4 Tm
(L7.  Experimental design, including analysis of variance) Tj
1 0 0 1 54 333.9 Tm
(L7A.  Univariate) Tj
1 0 0 1 54 323.4 Tm
(L7A1.  One-way analysis of variance) Tj
1 0 0 1 54 312.9 Tm
(L7A1A.  Parametric analysis) Tj
1 0 0 1 54 302.4 Tm
(L7A1A1.  Contrasts, multiple comparisons) Tj
1 0 0 1 54 291.9 Tm
(L7A1A2.  Analysis of variance components) Tj
1 0 0 1 54 281.4 Tm
(L7A1B.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 270.9 Tm
(L7A2.  Balanced multiway design) Tj
1 0 0 1 54 260.4 Tm
(L7A2A.  Complete) Tj
1 0 0 1 54 249.9 Tm
(L7A2A1.  Parametric analysis) Tj
1 0 0 1 54 239.4 Tm
(L7A2A1A.  Two-way) Tj
1 0 0 1 54 228.9 Tm
(L7A2A1B.  Factorial) Tj
1 0 0 1 54 218.4 Tm
(L7A2A1C.  Nested) Tj
1 0 0 1 54 207.9 Tm
(L7A2A2.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 197.4 Tm
(L7A2B.  Incomplete) Tj
1 0 0 1 54 186.9 Tm
(L7A2B1.  Parametric analysis) Tj
1 0 0 1 54 176.4 Tm
(L7A2B1A.  Latin square) Tj
1 0 0 1 54 165.9 Tm
(L7A2B1B.  Lattice designs) Tj
1 0 0 1 54 155.4 Tm
(L7A2B2.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 144.9 Tm
(L7A3.  Analysis of covariance) Tj
1 0 0 1 54 134.4 Tm
(L7A4.  General linear model \(unbalanced design\)) Tj
1 0 0 1 54 123.9 Tm
(L7A4A.  Parametric analysis) Tj
1 0 0 1 54 113.4 Tm
(L7A4B.  Distribution-free \(nonparametric\) analysis) Tj
1 0 0 1 54 102.9 Tm
(L7B.  Multivariate) Tj
1 0 0 1 54 92.4 Tm
(L8.  Regression \(search also classes G, K\)) Tj
1 0 0 1 54 81.9 Tm
(L8A.  Linear least squares \(L-2\) \(search also classes D5, D6, D9\)) Tj
ET
Q
endstream
endobj
125 0 obj
3493
endobj
126 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R123 123 0 R
>>
>>
/Contents 124 0 R
>>
endobj
127 0 obj
<< /Type /Font /Name /R127 /Subtype /Type1 /BaseFont /Courier >>
endobj
128 0 obj
<< /Length 129 0 R >>
stream
q
BT
/R127 10 Tf
1 0 0 1 54 711.9 Tm
(L8A1.  Simple) Tj
1 0 0 1 54 701.4 Tm
(L8A1A.  Ordinary) Tj
1 0 0 1 54 690.9 Tm
(L8A1A1.  Unweighted) Tj
1 0 0 1 54 680.4 Tm
(L8A1A1A.  No missing values) Tj
1 0 0 1 54 669.9 Tm
(L8A1A1B.  Missing values) Tj
1 0 0 1 54 659.4 Tm
(L8A1A2.  Weighted) Tj
1 0 0 1 54 648.9 Tm
(L8A1B.  Through the origin) Tj
1 0 0 1 54 638.4 Tm
(L8A1C.  Errors in variables) Tj
1 0 0 1 54 627.9 Tm
(L8A1D.  Calibration \(inverse regression\)) Tj
1 0 0 1 54 617.4 Tm
(L8A2.  Polynomial) Tj
1 0 0 1 54 606.9 Tm
(L8A2A.  Not using orthogonal polynomials) Tj
1 0 0 1 54 596.4 Tm
(L8A2A1.  Unweighted) Tj
1 0 0 1 54 585.9 Tm
(L8A2A2.  Weighted) Tj
1 0 0 1 54 575.4 Tm
(L8A2B.  Using orthogonal polynomials) Tj
1 0 0 1 54 564.9 Tm
(L8A2B1.  Unweighted) Tj
1 0 0 1 54 554.4 Tm
(L8A2B2.  Weighted) Tj
1 0 0 1 54 543.9 Tm
(L8A3.  Piecewise polynomial \(i.e. multiphase or spline\)) Tj
1 0 0 1 54 533.4 Tm
(L8A4.  Multiple) Tj
1 0 0 1 54 522.9 Tm
(L8A4A.  Ordinary) Tj
1 0 0 1 54 512.4 Tm
(L8A4A1.  Unweighted) Tj
1 0 0 1 54 501.9 Tm
(L8A4A1A.  No missing values) Tj
1 0 0 1 54 491.4 Tm
(L8A4A1B.  Missing values) Tj
1 0 0 1 54 480.9 Tm
(L8A4A1C.  From correlation data) Tj
1 0 0 1 54 470.4 Tm
(L8A4A1D.  Using principal components) Tj
1 0 0 1 54 459.9 Tm
(L8A4A1E.  Using preference pairs) Tj
1 0 0 1 54 449.4 Tm
(L8A4A2.  Weighted) Tj
1 0 0 1 54 438.9 Tm
(L8A4B.  Errors in variables) Tj
1 0 0 1 54 428.4 Tm
(L8A4D.  Logistic) Tj
1 0 0 1 54 417.9 Tm
(L8A5.  Variable selection) Tj
1 0 0 1 54 407.4 Tm
(L8A6.  Regression design) Tj
1 0 0 1 54 396.9 Tm
(L8A7.  Several multiple regressions) Tj
1 0 0 1 54 386.4 Tm
(L8A8.  Multivariate) Tj
1 0 0 1 54 375.9 Tm
(L8A9.  Diagnostics) Tj
1 0 0 1 54 365.4 Tm
(L8A10.  Hypothesis testing, inference) Tj
1 0 0 1 54 354.9 Tm
(L8A10A.  Lack-of-fit tests) Tj
1 0 0 1 54 344.4 Tm
(L8A10B.  Analysis of residuals) Tj
1 0 0 1 54 333.9 Tm
(L8A10C.  Inference) Tj
1 0 0 1 54 323.4 Tm
(L8B.  Biased \(ridge\)) Tj
1 0 0 1 54 312.9 Tm
(L8C.  Linear least absolute value \(L-1\)) Tj
1 0 0 1 54 302.4 Tm
(L8D.  Linear minimax \(L-infinity\)) Tj
1 0 0 1 54 291.9 Tm
(L8E.  Robust) Tj
1 0 0 1 54 281.4 Tm
(L8F.  EDA) Tj
1 0 0 1 54 270.9 Tm
(L8G.  Nonlinear) Tj
1 0 0 1 54 260.4 Tm
(L8G1.  Unweighted) Tj
1 0 0 1 54 249.9 Tm
(L8G1A.  Derivatives not supplied) Tj
1 0 0 1 54 239.4 Tm
(L8G1B.  Derivatives supplied) Tj
1 0 0 1 54 228.9 Tm
(L8G2.  Weighted) Tj
1 0 0 1 54 218.4 Tm
(L8G2A.  Derivatives not supplied) Tj
1 0 0 1 54 207.9 Tm
(L8G2B.  Derivatives supplied) Tj
1 0 0 1 54 197.4 Tm
(L8H.  Service routines) Tj
1 0 0 1 54 186.9 Tm
(L9.  Categorical data analysis) Tj
1 0 0 1 54 176.4 Tm
(L9A.  2-by-2 tables) Tj
1 0 0 1 54 165.9 Tm
(L9B.  Two-way tables) Tj
1 0 0 1 54 155.4 Tm
(L9C.  Log-linear model) Tj
1 0 0 1 54 144.9 Tm
(L9D.  EDA \(e.g., median polish\)) Tj
1 0 0 1 54 134.4 Tm
(L10.  Time series analysis \(search also class L3c5 for time series graphics\)) Tj
1 0 0 1 54 123.9 Tm
(L10A.  Transformations, transforms \(search also class J1\)) Tj
1 0 0 1 54 113.4 Tm
(L10B.  Smoothing, filtering) Tj
1 0 0 1 54 102.9 Tm
(L10C.  Autocorrelation analysis) Tj
1 0 0 1 54 92.4 Tm
(L10D.  Complex demodulation) Tj
1 0 0 1 54 81.9 Tm
(L10E.  ARMA and ARIMA modeling and forecasting) Tj
ET
Q
endstream
endobj
129 0 obj
3231
endobj
130 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R127 127 0 R
>>
>>
/Contents 128 0 R
>>
endobj
131 0 obj
<< /Type /Font /Name /R131 /Subtype /Type1 /BaseFont /Courier >>
endobj
132 0 obj
<< /Length 133 0 R >>
stream
q
BT
/R131 10 Tf
1 0 0 1 54 711.9 Tm
(L10E1.  Model and parameter estimation) Tj
1 0 0 1 54 701.4 Tm
(L10E2.  Forecasting) Tj
1 0 0 1 54 690.9 Tm
(L10F.  Spectral analysis) Tj
1 0 0 1 54 680.4 Tm
(L10G.  Cross-correlation analysis) Tj
1 0 0 1 54 669.9 Tm
(L10G1.  Parameter estimation) Tj
1 0 0 1 54 659.4 Tm
(L10G2.  Forecasting) Tj
1 0 0 1 54 648.9 Tm
(L11.  Correlation analysis) Tj
1 0 0 1 54 638.4 Tm
(L12.  Discriminant analysis) Tj
1 0 0 1 54 627.9 Tm
(L13.  Factor analysis) Tj
1 0 0 1 54 617.4 Tm
(L13A.  Principal components analysis) Tj
1 0 0 1 54 606.9 Tm
(L14.  Cluster analysis) Tj
1 0 0 1 54 596.4 Tm
(L14A.  Unconstrained) Tj
1 0 0 1 54 585.9 Tm
(L14A1.  Nested) Tj
1 0 0 1 54 575.4 Tm
(L14A1A.  Joining \(e.g., single link\)) Tj
1 0 0 1 54 564.9 Tm
(L14A1B.  Divisive) Tj
1 0 0 1 54 554.4 Tm
(L14A2.  Non-nested) Tj
1 0 0 1 54 543.9 Tm
(L14B.  Constrained) Tj
1 0 0 1 54 533.4 Tm
(L14B1.  One-dimensional) Tj
1 0 0 1 54 522.9 Tm
(L14B2.  Two-dimensional) Tj
1 0 0 1 54 512.4 Tm
(L14C.  Display) Tj
1 0 0 1 54 501.9 Tm
(L15.  Life testing, survival analysis) Tj
1 0 0 1 54 491.4 Tm
(M.  Simulation, stochastic modeling \(search also classes L6, L10\)) Tj
1 0 0 1 54 480.9 Tm
(M1.  Simulation) Tj
1 0 0 1 54 470.4 Tm
(M1A.  Discrete) Tj
1 0 0 1 54 459.9 Tm
(M1B.  Continuous \(Markov models\)) Tj
1 0 0 1 54 449.4 Tm
(M2.  Queueing) Tj
1 0 0 1 54 438.9 Tm
(M3.  Reliability) Tj
1 0 0 1 54 428.4 Tm
(M3A.  Quality control) Tj
1 0 0 1 54 417.9 Tm
(M3B.  Electrical network) Tj
1 0 0 1 54 407.4 Tm
(M4.  Project optimization \(e.g., PERT\)) Tj
1 0 0 1 54 396.9 Tm
(N.  Data handling \(search also class L2\)) Tj
1 0 0 1 54 386.4 Tm
(N1.  Input, output) Tj
1 0 0 1 54 375.9 Tm
(N2.  Bit manipulation) Tj
1 0 0 1 54 365.4 Tm
(N3.  Character manipulation) Tj
1 0 0 1 54 354.9 Tm
(N4.  Storage management \(e.g., stacks, heaps, trees\)) Tj
1 0 0 1 54 344.4 Tm
(N5.  Searching) Tj
1 0 0 1 54 333.9 Tm
(N5A.  Extreme value) Tj
1 0 0 1 54 323.4 Tm
(N5B.  Insertion position) Tj
1 0 0 1 54 312.9 Tm
(N5C.  On a key) Tj
1 0 0 1 54 302.4 Tm
(N6.  Sorting) Tj
1 0 0 1 54 291.9 Tm
(N6A.  Internal) Tj
1 0 0 1 54 281.4 Tm
(N6A1.  Passive \(i.e. construct pointer array, rank\)) Tj
1 0 0 1 54 270.9 Tm
(N6A1A.  Integer) Tj
1 0 0 1 54 260.4 Tm
(N6A1B.  Real) Tj
1 0 0 1 54 249.9 Tm
(N6A1B1.  Single precision) Tj
1 0 0 1 54 239.4 Tm
(N6A1B2.  Double precision) Tj
1 0 0 1 54 228.9 Tm
(N6A1C.  Character) Tj
1 0 0 1 54 218.4 Tm
(N6A2.  Active) Tj
1 0 0 1 54 207.9 Tm
(N6A2A.  Integer) Tj
1 0 0 1 54 197.4 Tm
(N6A2B.  Real) Tj
1 0 0 1 54 186.9 Tm
(N6A2B1.  Single precision) Tj
1 0 0 1 54 176.4 Tm
(N6A2B2.  Double precision) Tj
1 0 0 1 54 165.9 Tm
(N6A2C.  Character) Tj
1 0 0 1 54 155.4 Tm
(N6B.  External) Tj
1 0 0 1 54 144.9 Tm
(N7.  Merging) Tj
1 0 0 1 54 134.4 Tm
(N8.  Permuting) Tj
1 0 0 1 54 123.9 Tm
(O.  Symbolic computation) Tj
1 0 0 1 54 113.4 Tm
(P.  Computational geometry \(search also classes G, Q\)) Tj
1 0 0 1 54 102.9 Tm
(P1.  One dimension) Tj
1 0 0 1 54 92.4 Tm
(P2.  Two dimensions) Tj
1 0 0 1 54 81.9 Tm
(P2A.  Points, lines) Tj
ET
Q
endstream
endobj
133 0 obj
3053
endobj
134 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R131 131 0 R
>>
>>
/Contents 132 0 R
>>
endobj
135 0 obj
<< /Type /Font /Name /R135 /Subtype /Type1 /BaseFont /Courier >>
endobj
136 0 obj
<< /Length 137 0 R >>
stream
q
BT
/R135 10 Tf
1 0 0 1 54 711.9 Tm
(P2A1.  Relationships) Tj
1 0 0 1 54 701.4 Tm
(P2A1A.  Closest and farthest points) Tj
1 0 0 1 54 690.9 Tm
(P2A1B.  Intersection) Tj
1 0 0 1 54 680.4 Tm
(P2A2.  Graph construction) Tj
1 0 0 1 54 669.9 Tm
(P2A2A.  Convex hull) Tj
1 0 0 1 54 659.4 Tm
(P2A2B.  Minimum spanning tree) Tj
1 0 0 1 54 648.9 Tm
(P2A2C.  Region partitioning) Tj
1 0 0 1 54 638.4 Tm
(P2A2C1.  Triangulation) Tj
1 0 0 1 54 627.9 Tm
(P2A2C2.  Voronoi diagram) Tj
1 0 0 1 54 617.4 Tm
(P2B.  Polygons \(e.g., intersection, hidden line problems\)) Tj
1 0 0 1 54 606.9 Tm
(P2C.  Circles) Tj
1 0 0 1 54 596.4 Tm
(P3.  Three dimensions) Tj
1 0 0 1 54 585.9 Tm
(P3A.  Points, lines, planes) Tj
1 0 0 1 54 575.4 Tm
(P3B.  Polytopes) Tj
1 0 0 1 54 564.9 Tm
(P3C.  Spheres) Tj
1 0 0 1 54 554.4 Tm
(P4.  More than three dimensions) Tj
1 0 0 1 54 543.9 Tm
(Q.  Graphics \(search also classes L3, P\)) Tj
1 0 0 1 54 533.4 Tm
(Q1.  Line printer plotting) Tj
1 0 0 1 54 522.9 Tm
(R.  Service routines) Tj
1 0 0 1 54 512.4 Tm
(R1.  Machine-dependent constants) Tj
1 0 0 1 54 501.9 Tm
(R2.  Error checking \(e.g., check monotonicity\)) Tj
1 0 0 1 54 491.4 Tm
(R3.  Error handling) Tj
1 0 0 1 54 480.9 Tm
(R3A.  Set criteria for fatal errors) Tj
1 0 0 1 54 470.4 Tm
(R3B.  Set unit number for error messages) Tj
1 0 0 1 54 459.9 Tm
(R3C.  Other utility programs) Tj
1 0 0 1 54 449.4 Tm
(R4.  Documentation retrieval) Tj
1 0 0 1 54 438.9 Tm
(S.  Software development tools) Tj
1 0 0 1 54 428.4 Tm
(S1.  Program transformation) Tj
1 0 0 1 54 417.9 Tm
(S2.  Static analysis) Tj
1 0 0 1 54 407.4 Tm
(S3.  Dynamic analysis) Tj
1 0 0 1 54 396.9 Tm
(Z.  Other) Tj
1 0 0 1 54 386.4 Tm
( ) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
(*******************************************************************************) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(APPENDIX B.  MACHINE CONSTANTS) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
(The SLATEC Common Math Library uses three functions for keeping machine) Tj
1 0 0 1 54 291.9 Tm
(constants.  In order to keep the source code for the Library as portable as) Tj
1 0 0 1 54 281.4 Tm
(possible, no other Library routines should attempt to DATA load machine) Tj
1 0 0 1 54 270.9 Tm
(dependent constants.  Due to the subtlety of trying to calculate machine) Tj
1 0 0 1 54 260.4 Tm
(constants at run time in a manner that yields correct constants for all) Tj
1 0 0 1 54 249.9 Tm
(possible computers, no Library routines should attempt to calculate them.) Tj
1 0 0 1 54 239.4 Tm
(Routines I1MACH, R1MACH, and D1MACH in the SLATEC Common Math Library are) Tj
1 0 0 1 54 228.9 Tm
(derived from the routines of these names in the Bell Laboratories' PORT Library) Tj
1 0 0 1 54 218.4 Tm
(and should be called whenever machines constants are needed.  These functions) Tj
1 0 0 1 54 207.9 Tm
(are DATA loaded with carefully determined constants of type integer, single) Tj
1 0 0 1 54 197.4 Tm
(precision, and double precision, respectively, for a wide range of computers.) Tj
1 0 0 1 54 186.9 Tm
(Each is called with one input argument to indicate which constant is desired.) Tj
1 0 0 1 54 176.4 Tm
(The appropriate Fortran statements are:) Tj
1 0 0 1 54 165.9 Tm
( ) Tj
1 0 0 1 54 155.4 Tm
(For integer constants:) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
(      INTEGER I1MACH, I) Tj
1 0 0 1 54 123.9 Tm
(      I = I1MACH\(N\)                 where 1 .LE. N .LE. 16) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
(For single precision constants:) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(      REAL R1MACH, R) Tj
ET
Q
endstream
endobj
137 0 obj
3636
endobj
138 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R135 135 0 R
>>
>>
/Contents 136 0 R
>>
endobj
139 0 obj
<< /Type /Font /Name /R139 /Subtype /Type1 /BaseFont /Courier >>
endobj
140 0 obj
<< /Length 141 0 R >>
stream
q
BT
/R139 10 Tf
1 0 0 1 54 711.9 Tm
(      R = R1MACH\(N\)                 where 1 .LE. N .LE. 5) Tj
1 0 0 1 54 701.4 Tm
( ) Tj
1 0 0 1 54 690.9 Tm
(For double precision constants:) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
(      DOUBLE PRECISION D1MACH, D) Tj
1 0 0 1 54 659.4 Tm
(      D = D1MACH\(N\)                 where 1 .LE. N .LE. 5) Tj
1 0 0 1 54 648.9 Tm
( ) Tj
1 0 0 1 54 638.4 Tm
(The different constants that can be retrieved will be explained below after we) Tj
1 0 0 1 54 627.9 Tm
(give a summary of the floating point arithmetic model which they characterize.) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
(The PORT and SLATEC machine constant routines acknowledge that a computer) Tj
1 0 0 1 54 596.4 Tm
(can have some minor flaws in how it performs arithmetic and that the purpose of) Tj
1 0 0 1 54 585.9 Tm
(machine constant routines is to keep other library routines out of trouble.) Tj
1 0 0 1 54 575.4 Tm
(For example, a computer may have a 48-bit coefficient, but due to round-off or) Tj
1 0 0 1 54 564.9 Tm
(other deficiencies may be able to perform only 47-bit \(or even 46-bit\)) Tj
1 0 0 1 54 554.4 Tm
(arithmetic reliably.  A machine can also misbehave at the extreme ends of its) Tj
1 0 0 1 54 543.9 Tm
(exponent range.  The machine constants are chosen to describe a subset of the) Tj
1 0 0 1 54 533.4 Tm
(floating point numbers of a computer on which operations such as addition,) Tj
1 0 0 1 54 522.9 Tm
(subtraction, multiplication, reciprocation, and comparison work as your) Tj
1 0 0 1 54 512.4 Tm
(intuition would expect.  If the actual performance of the machine is such that) Tj
1 0 0 1 54 501.9 Tm
(results fall into the "expected" intervals of the subset floating point system,) Tj
1 0 0 1 54 491.4 Tm
(then the usual forms of error analysis will apply.  For details, see [7].) Tj
1 0 0 1 54 480.9 Tm
( ) Tj
1 0 0 1 54 470.4 Tm
(The machine constants normally cannot be determined by reading a computer's) Tj
1 0 0 1 54 459.9 Tm
(hardware reference manual.  Such manuals tell the range and representation of) Tj
1 0 0 1 54 449.4 Tm
(floating point numbers but usually do not describe the errors in the floating) Tj
1 0 0 1 54 438.9 Tm
(point addition, subtraction, multiplication, reciprocation, or division units.) Tj
1 0 0 1 54 428.4 Tm
(The constants for I1MACH, R1MACH, and D1MACH are found by doing extensive) Tj
1 0 0 1 54 417.9 Tm
(testing using operands on which the hardware is most likely to fail.  Failure) Tj
1 0 0 1 54 407.4 Tm
(is most likely to occur at the extreme ends of the exponent range and near) Tj
1 0 0 1 54 396.9 Tm
(powers of the number base.  If such failures are relatively minor, we can) Tj
1 0 0 1 54 386.4 Tm
(choose machine constants for I1MACH, R1MACH, and D1MACH to restrict the domain) Tj
1 0 0 1 54 375.9 Tm
(of floating point numbers to a subset on which arithmetic operations work.) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
(The subset model of floating point arithmetic is characterized by four) Tj
1 0 0 1 54 344.4 Tm
(parameters:) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(     B     the number base or radix.  This is usually 2 or 16.) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
(     T     the number of digits in base B of the coefficient of the floating) Tj
1 0 0 1 54 291.9 Tm
(           point number.) Tj
1 0 0 1 54 281.4 Tm
( ) Tj
1 0 0 1 54 270.9 Tm
(     EMIN  the smallest \(most negative\) exponent \(power of B\)) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
(     EMAX  the largest exponent \(power of B\)) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(A floating point number is modeled as FRACTION*\(B**EXP\) where EXP falls between) Tj
1 0 0 1 54 218.4 Tm
(EMIN and EMAX and the FRACTION is of the form) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
(     + or - \( f\(1\)*B**\(-1\) + ... + f\(T\)*B**\(-T\) \)) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
(     with f\(1\) in the range 1 to B-1 inclusive and) Tj
1 0 0 1 54 165.9 Tm
(          f\(2\) through f\(T\) in the range 0 to B-1 inclusive.) Tj
1 0 0 1 54 155.4 Tm
( ) Tj
1 0 0 1 54 144.9 Tm
(In this model the fraction has the radix point at the left end.  Some computers) Tj
1 0 0 1 54 134.4 Tm
(have their radix point at the right end so that when their representation is) Tj
1 0 0 1 54 123.9 Tm
(mapped onto this model, they appear to have an unbalanced exponent range \(i.e.,) Tj
1 0 0 1 54 113.4 Tm
(EMIN is not close to the negative of EMAX\).  If the computer cannot correctly) Tj
1 0 0 1 54 102.9 Tm
(calculate results near underflow, EMIN is increased to a more conservative) Tj
1 0 0 1 54 92.4 Tm
(value.  Likewise, if the computer cannot correctly calculate results near) Tj
1 0 0 1 54 81.9 Tm
(overflow, EMAX is decreased.  If a base 2 machine with a 48-bit fraction is) Tj
ET
Q
endstream
endobj
141 0 obj
4809
endobj
142 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R139 139 0 R
>>
>>
/Contents 140 0 R
>>
endobj
143 0 obj
<< /Type /Font /Name /R143 /Subtype /Type1 /BaseFont /Courier >>
endobj
144 0 obj
<< /Length 145 0 R >>
stream
q
BT
/R143 10 Tf
1 0 0 1 54 711.9 Tm
(unable to calculate 48-bit results due to hardware round-off, T may be set to) Tj
1 0 0 1 54 701.4 Tm
(47 \(or even 46\) to account for the loss of accuracy.) Tj
1 0 0 1 54 690.9 Tm
( ) Tj
1 0 0 1 54 680.4 Tm
(The complete set of machine constants \(including those not related to floating) Tj
1 0 0 1 54 669.9 Tm
(point arithmetic\) are:) Tj
1 0 0 1 54 659.4 Tm
( ) Tj
1 0 0 1 54 648.9 Tm
(I/O Unit Numbers) Tj
1 0 0 1 54 638.4 Tm
(----------------) Tj
1 0 0 1 54 627.9 Tm
( ) Tj
1 0 0 1 54 617.4 Tm
(I1MACH\( 1\) = the FORTRAN unit number for the standard input device.) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
(I1MACH\( 2\) = the FORTRAN unit number for the standard output device.) Tj
1 0 0 1 54 585.9 Tm
( ) Tj
1 0 0 1 54 575.4 Tm
(I1MACH\( 3\) = the FORTRAN unit number for the standard punch device.) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
(I1MACH\( 4\) = the FORTRAN unit number for the standard error message device.) Tj
1 0 0 1 54 543.9 Tm
( ) Tj
1 0 0 1 54 533.4 Tm
(Word Properties) Tj
1 0 0 1 54 522.9 Tm
(---------------) Tj
1 0 0 1 54 512.4 Tm
( ) Tj
1 0 0 1 54 501.9 Tm
(I1MACH\( 5\) = the number of bits per integer storage unit.) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
(I1MACH\( 6\) = the number of characters per integer storage unit.) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
(Integer Arithmetic) Tj
1 0 0 1 54 449.4 Tm
(------------------) Tj
1 0 0 1 54 438.9 Tm
( ) Tj
1 0 0 1 54 428.4 Tm
(I1MACH\( 7\) = the base or radix for integer arithmetic.) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(I1MACH\( 8\) = the number of digits in radix I1MACH\(7\) used in integer) Tj
1 0 0 1 54 396.9 Tm
(             arithmetic.) Tj
1 0 0 1 54 386.4 Tm
( ) Tj
1 0 0 1 54 375.9 Tm
(I1MACH\( 9\) = the largest magnitude integer for which the machine and compiler) Tj
1 0 0 1 54 365.4 Tm
(             perform the complete set of arithmetic operations.) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
(Floating Point Arithmetic) Tj
1 0 0 1 54 333.9 Tm
(-------------------------) Tj
1 0 0 1 54 323.4 Tm
( ) Tj
1 0 0 1 54 312.9 Tm
(I1MACH\(10\) = the base or radix for floating point arithmetic.  This is the B) Tj
1 0 0 1 54 302.4 Tm
(             of the floating point model.) Tj
1 0 0 1 54 291.9 Tm
( ) Tj
1 0 0 1 54 281.4 Tm
(Single Precision Arithmetic) Tj
1 0 0 1 54 270.9 Tm
(---------------------------) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
(I1MACH\(11\) = the number of digits in radix I1MACH\(10\) used in single precision) Tj
1 0 0 1 54 239.4 Tm
(             arithmetic.  This is the T in the floating point model.) Tj
1 0 0 1 54 228.9 Tm
( ) Tj
1 0 0 1 54 218.4 Tm
(I1MACH\(12\) = the most negative usable exponent short of underflow of radix) Tj
1 0 0 1 54 207.9 Tm
(             I1MACH\(10\) for a single precision number.  This is the EMIN in the) Tj
1 0 0 1 54 197.4 Tm
(             floating point model.) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
(I1MACH\(13\) = the largest usable exponent short of overflow of radix I1MACH\(10\)) Tj
1 0 0 1 54 165.9 Tm
(             for a single precision number.  This is the EMAX in the floating) Tj
1 0 0 1 54 155.4 Tm
(             point model.) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
(Double Precision Arithmetic) Tj
1 0 0 1 54 123.9 Tm
(---------------------------) Tj
1 0 0 1 54 113.4 Tm
( ) Tj
1 0 0 1 54 102.9 Tm
(I1MACH\(14\) = the number of digits in radix I1MACH\(10\) used in double precision) Tj
1 0 0 1 54 92.4 Tm
(             arithmetic.  This is the T of the floating point model.) Tj
1 0 0 1 54 81.9 Tm
( ) Tj
ET
Q
endstream
endobj
145 0 obj
3614
endobj
146 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R143 143 0 R
>>
>>
/Contents 144 0 R
>>
endobj
147 0 obj
<< /Type /Font /Name /R147 /Subtype /Type1 /BaseFont /Courier >>
endobj
148 0 obj
<< /Length 149 0 R >>
stream
q
BT
/R147 10 Tf
1 0 0 1 54 711.9 Tm
(I1MACH\(15\) = the most negative usable exponent short of underflow of radix) Tj
1 0 0 1 54 701.4 Tm
(             I1MACH\(10\) for a double precision number.  This is the EMIN of) Tj
1 0 0 1 54 690.9 Tm
(             the floating point model.) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
(I1MACH\(16\) = the largest usable exponent short of overflow of radix I1MACH\(10\)) Tj
1 0 0 1 54 659.4 Tm
(             for a double precision number.  This is the EMAX of the floating) Tj
1 0 0 1 54 648.9 Tm
(             point model.) Tj
1 0 0 1 54 638.4 Tm
( ) Tj
1 0 0 1 54 627.9 Tm
(Special Single Precision Values) Tj
1 0 0 1 54 617.4 Tm
(-------------------------------) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
(R1MACH\( 1\) = B**\(EMIN-1\).  This is the smallest, positive, single precision) Tj
1 0 0 1 54 585.9 Tm
(             number in the range for safe, accurate arithmetic.) Tj
1 0 0 1 54 575.4 Tm
( ) Tj
1 0 0 1 54 564.9 Tm
(R1MACH\( 2\) = B**EMAX*\(1-B**\(-T\)\).  This is the largest, positive, single) Tj
1 0 0 1 54 554.4 Tm
(             precision number in the range for safe, accurate arithmetic.) Tj
1 0 0 1 54 543.9 Tm
( ) Tj
1 0 0 1 54 533.4 Tm
(R1MACH\( 3\) = B**\(-T\).  This is the smallest relative spacing between two) Tj
1 0 0 1 54 522.9 Tm
(             adjacent single precision numbers in the floating point model.) Tj
1 0 0 1 54 512.4 Tm
(             This constant is not machine epsilon; see below for machine) Tj
1 0 0 1 54 501.9 Tm
(             epsilon.) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
(R1MACH\( 4\) = B**\(1-T\).  This is the largest relative spacing between two) Tj
1 0 0 1 54 470.4 Tm
(             adjacent single precision numbers in the floating point model.) Tj
1 0 0 1 54 459.9 Tm
(             Any two single precision numbers that have a greater relative) Tj
1 0 0 1 54 449.4 Tm
(             spacing than R1MACH\(4\) can be compared correctly \(with operators) Tj
1 0 0 1 54 438.9 Tm
(             like .EQ. or .LT.\). This constant is an upper bound on theoretical) Tj
1 0 0 1 54 428.4 Tm
(             machine epsilon.) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(R1MACH\( 5\) = logarithm to base ten of the machine's floating point number base.) Tj
1 0 0 1 54 396.9 Tm
( ) Tj
1 0 0 1 54 386.4 Tm
(Special Double Precision Values) Tj
1 0 0 1 54 375.9 Tm
(-------------------------------) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
(D1MACH\( 1\) = B**\(EMIN-1\).  This is the smallest, positive, double precision) Tj
1 0 0 1 54 344.4 Tm
(             numbers in the range for safe, accurate arithmetic.) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(D1MACH\( 2\) = B**EMAX*\(1-B**\(-T\)\).  This is the largest, positive, double) Tj
1 0 0 1 54 312.9 Tm
(             precision number in the range for safe, accurate arithmetic.) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(D1MACH\( 3\) = B**\(-T\).  This is the smallest relative spacing between two) Tj
1 0 0 1 54 281.4 Tm
(             adjacent double precision numbers in the floating point model.) Tj
1 0 0 1 54 270.9 Tm
(             This constant is not machine epsilon; see below for machine) Tj
1 0 0 1 54 260.4 Tm
(             epsilon.) Tj
1 0 0 1 54 249.9 Tm
( ) Tj
1 0 0 1 54 239.4 Tm
(D1MACH\( 4\) = B**\(1-T\).  This is the largest relative spacing between two) Tj
1 0 0 1 54 228.9 Tm
(             adjacent double precision numbers in the floating point model.) Tj
1 0 0 1 54 218.4 Tm
(             Any two double precision numbers that have a greater relative) Tj
1 0 0 1 54 207.9 Tm
(             spacing than D1MACH\(4\) can be compared correctly \(with operators) Tj
1 0 0 1 54 197.4 Tm
(             like .EQ. or .LT.\). This constant is an upper bound on theoretical) Tj
1 0 0 1 54 186.9 Tm
(             machine epsilon.) Tj
1 0 0 1 54 176.4 Tm
( ) Tj
1 0 0 1 54 165.9 Tm
(D1MACH\( 5\) = logarithm to base ten of the machine's floating point number base.) Tj
1 0 0 1 54 155.4 Tm
( ) Tj
1 0 0 1 54 144.9 Tm
(In theory, all of the R1MACH and D1MACH values can be calculated from I1MACH) Tj
1 0 0 1 54 134.4 Tm
(values; however, they are provided \(1\) to save having to calculate them and \(2\)) Tj
1 0 0 1 54 123.9 Tm
(to avoid rousing any bugs in the exponentiation \(** operator \) or logarithm) Tj
1 0 0 1 54 113.4 Tm
(routines.) Tj
1 0 0 1 54 102.9 Tm
( ) Tj
1 0 0 1 54 92.4 Tm
(Machine epsilon \(the smallest number that can be added to 1.0 or 1.0D0) Tj
1 0 0 1 54 81.9 Tm
(that yields a result different from 1.0 or 1.0D0\) is not one of the special) Tj
ET
Q
endstream
endobj
149 0 obj
4577
endobj
150 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R147 147 0 R
>>
>>
/Contents 148 0 R
>>
endobj
151 0 obj
<< /Type /Font /Name /R151 /Subtype /Type1 /BaseFont /Courier >>
endobj
152 0 obj
<< /Length 153 0 R >>
stream
q
BT
/R151 10 Tf
1 0 0 1 54 711.9 Tm
(values that comes from this model.  If the purpose of machine epsilon is to) Tj
1 0 0 1 54 701.4 Tm
(decide when iterations have converged, the proper constants to use are) Tj
1 0 0 1 54 690.9 Tm
(R1MACH\(4\) or D1MACH\(4\).  These may be slightly larger than machine epsilon;) Tj
1 0 0 1 54 680.4 Tm
(however, trying to iterate to smaller relative differences may not be possible) Tj
1 0 0 1 54 669.9 Tm
(due to hardware round-off error.) Tj
1 0 0 1 54 659.4 Tm
( ) Tj
1 0 0 1 54 648.9 Tm
(The Fortran standard requires that the amount of storage assigned to an INTEGER) Tj
1 0 0 1 54 638.4 Tm
(and a REAL be the same.  Thus, the number of bits that can be used to represent) Tj
1 0 0 1 54 627.9 Tm
(an INTEGER will almost always be larger than the number of bits in the mantissa) Tj
1 0 0 1 54 617.4 Tm
(of a REAL.  In converting from an INTEGER to a REAL, some machines will) Tj
1 0 0 1 54 606.9 Tm
(correctly round or truncate, but some will not.  Authors are therefore advised) Tj
1 0 0 1 54 596.4 Tm
(to check the magnitude of INTEGERs and not attempt to convert INTEGERs to REALs) Tj
1 0 0 1 54 585.9 Tm
(that can not be represented exactly as REALs.  Similar problems can occur when) Tj
1 0 0 1 54 575.4 Tm
(converting INTEGERs to DOUBLEs.) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
( ) Tj
1 0 0 1 54 543.9 Tm
( ) Tj
1 0 0 1 54 533.4 Tm
( ) Tj
1 0 0 1 54 522.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 512.4 Tm
( ) Tj
1 0 0 1 54 501.9 Tm
(APPENDIX C.  ERROR HANDLING) Tj
1 0 0 1 54 491.4 Tm
( ) Tj
1 0 0 1 54 480.9 Tm
(Authors of Library routines must use at least the first and preferably both of) Tj
1 0 0 1 54 470.4 Tm
(the following techniques to handle errors that their routines detect.) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(1.  One argument, preferably the last, in the calling sequence must be an) Tj
1 0 0 1 54 438.9 Tm
(    error flag if the routine can detect errors.  This is an integer variable) Tj
1 0 0 1 54 428.4 Tm
(    to which a value is assigned before returning to the caller.  A value of) Tj
1 0 0 1 54 417.9 Tm
(    zero means the routine completed successfully. A positive value \(preferably) Tj
1 0 0 1 54 407.4 Tm
(    in the range 1 to 999\) should be used to indicate potential, partial, or) Tj
1 0 0 1 54 396.9 Tm
(    total failure.  Separate values should be used for distinct conditions so) Tj
1 0 0 1 54 386.4 Tm
(    that the caller can determine the nature of the failure.  Of course, the) Tj
1 0 0 1 54 375.9 Tm
(    possible values of this error flag and their meanings must be documented in) Tj
1 0 0 1 54 365.4 Tm
(    the description section of the prologue of the routine.) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
(2.  In addition to returning an error flag, the routine can supply more) Tj
1 0 0 1 54 333.9 Tm
(    information by writing an error message via a call to XERMSG.  XERMSG) Tj
1 0 0 1 54 323.4 Tm
(    has an error number as one of its arguments, and the same value that will) Tj
1 0 0 1 54 312.9 Tm
(    be returned in the error flag argument must be used in calling XERMSG.) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(XERMSG is part of the SLATEC Common Math Library error handling package) Tj
1 0 0 1 54 281.4 Tm
(which consists of a number of routines.  It is not necessary for authors to) Tj
1 0 0 1 54 270.9 Tm
(learn about the entire package.  Instead we summarize here a few aspects of the) Tj
1 0 0 1 54 260.4 Tm
(package that an author must know in order to use XERMSG correctly.) Tj
1 0 0 1 54 249.9 Tm
( ) Tj
1 0 0 1 54 239.4 Tm
(1.  Although XERMSG supports three levels of severity \(warning, recoverable) Tj
1 0 0 1 54 228.9 Tm
(    error, and fatal error\), be sparing in the use of fatal errors.  XERMSG) Tj
1 0 0 1 54 218.4 Tm
(    will terminate the program for fatal errors but may return for recoverable) Tj
1 0 0 1 54 207.9 Tm
(    errors, and will definitely return after warning messages.  An error should) Tj
1 0 0 1 54 197.4 Tm
(    be designated fatal only if returning to the caller is likely to be) Tj
1 0 0 1 54 186.9 Tm
(    disastrous \(e.g. result in an infinite loop\).) Tj
1 0 0 1 54 176.4 Tm
( ) Tj
1 0 0 1 54 165.9 Tm
(2.  The error handling package remembers the value of the error number and has) Tj
1 0 0 1 54 155.4 Tm
(    an entry point whereby the user can retrieve the most recent error number.) Tj
1 0 0 1 54 144.9 Tm
(    Successive calls to XERMSG replace this retained value.  In the case of) Tj
1 0 0 1 54 134.4 Tm
(    warning messages, it is permissible to issue multiple warnings.  In the) Tj
1 0 0 1 54 123.9 Tm
(    case of a recoverable error, no additional calls to XERMSG must be made by) Tj
1 0 0 1 54 113.4 Tm
(    the Library routine before returning to the caller since the caller must be) Tj
1 0 0 1 54 102.9 Tm
(    given a chance to retrieve and clear the error number \(and error condition\)) Tj
1 0 0 1 54 92.4 Tm
(    from the error handling package.  In particular, if the user calls Library) Tj
1 0 0 1 54 81.9 Tm
(    routine X and X calls a lower level Library Y, it is permissible for Y) Tj
ET
Q
endstream
endobj
153 0 obj
5166
endobj
154 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R151 151 0 R
>>
>>
/Contents 152 0 R
>>
endobj
155 0 obj
<< /Type /Font /Name /R155 /Subtype /Type1 /BaseFont /Courier >>
endobj
156 0 obj
<< /Length 157 0 R >>
stream
q
BT
/R155 10 Tf
1 0 0 1 54 711.9 Tm
(    to call XERMSG, but after it returns to X, X must be careful to note any) Tj
1 0 0 1 54 701.4 Tm
(    recoverable errors detected in Y and not make any additional calls to) Tj
1 0 0 1 54 690.9 Tm
(    XERMSG in that case.  In practice, it would be simpler if subsidiary) Tj
1 0 0 1 54 680.4 Tm
(    routines did not call XERMSG but only returned error flags indicating a) Tj
1 0 0 1 54 669.9 Tm
(    serious problem.  Then the highest level Library routine could call XERMSG) Tj
1 0 0 1 54 659.4 Tm
(    just before returning to its caller.  This also allows the highest level) Tj
1 0 0 1 54 648.9 Tm
(    routine the most flexibility in assigning error numbers and assures that) Tj
1 0 0 1 54 638.4 Tm
(    all possible error conditions are documented in one prologue rather than) Tj
1 0 0 1 54 627.9 Tm
(    being distributed through prologues of subsidiary routines.) Tj
1 0 0 1 54 617.4 Tm
( ) Tj
1 0 0 1 54 606.9 Tm
(Below we describe only subroutine XERMSG.  Other routines in the error) Tj
1 0 0 1 54 596.4 Tm
(handling package are described in their prologues and in Reference [4].) Tj
1 0 0 1 54 585.9 Tm
(The call to XERMSG looks like) Tj
1 0 0 1 54 575.4 Tm
( ) Tj
1 0 0 1 54 564.9 Tm
(Template:  CALL XERMSG \(library, routine, message, errornumber, level\)) Tj
1 0 0 1 54 554.4 Tm
( ) Tj
1 0 0 1 54 543.9 Tm
(Example:   CALL XERMSG \('SLATEC', 'MMPY',) Tj
1 0 0 1 54 533.4 Tm
(          1   'The order of the matrix exceeds the row dimension', 3, 1\)) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
(where the meaning of the arguments is) Tj
1 0 0 1 54 501.9 Tm
( ) Tj
1 0 0 1 54 491.4 Tm
(library       A character constant \(or character variable\) with the name of) Tj
1 0 0 1 54 480.9 Tm
(              the library.  This will be 'SLATEC' for the SLATEC Common Math) Tj
1 0 0 1 54 470.4 Tm
(              Library.  The error handling package is general enough to be used) Tj
1 0 0 1 54 459.9 Tm
(              by many libraries simultaneously, so it is desirable for the) Tj
1 0 0 1 54 449.4 Tm
(              routine that detects and reports an error to identify the library) Tj
1 0 0 1 54 438.9 Tm
(              name as well as the routine name.) Tj
1 0 0 1 54 428.4 Tm
( ) Tj
1 0 0 1 54 417.9 Tm
(routine       A character constant \(or character variable\) with the name of the) Tj
1 0 0 1 54 407.4 Tm
(              routine that detected the error.  Usually it is the name of the) Tj
1 0 0 1 54 396.9 Tm
(              routine that is calling XERMSG.  There are some instances where a) Tj
1 0 0 1 54 386.4 Tm
(              user callable library routine calls lower level subsidiary) Tj
1 0 0 1 54 375.9 Tm
(              routines where the error is detected.  In such cases it may be) Tj
1 0 0 1 54 365.4 Tm
(              more informative to supply the name of the routine the user) Tj
1 0 0 1 54 354.9 Tm
(              called rather than the name of the subsidiary routine that) Tj
1 0 0 1 54 344.4 Tm
(              detected the error.) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(message       A character constant \(or character variable\) with the text of the) Tj
1 0 0 1 54 312.9 Tm
(              error or warning message.  In the example below, the message is a) Tj
1 0 0 1 54 302.4 Tm
(              character constant that contains a generic message.) Tj
1 0 0 1 54 291.9 Tm
( ) Tj
1 0 0 1 54 281.4 Tm
(                    CALL XERMSG \('SLATEC', 'MMPY',) Tj
1 0 0 1 54 270.9 Tm
(                   *   'The order of the matrix exceeds the row dimension',) Tj
1 0 0 1 54 260.4 Tm
(                   *   3, 1\)) Tj
1 0 0 1 54 249.9 Tm
( ) Tj
1 0 0 1 54 239.4 Tm
(              It is possible \(and is sometimes desirable\) to generate a) Tj
1 0 0 1 54 228.9 Tm
(              specific message--e.g., one that contains actual numeric values.) Tj
1 0 0 1 54 218.4 Tm
(              Specific numeric values can be converted into character strings) Tj
1 0 0 1 54 207.9 Tm
(              using formatted WRITE statements into character variables.  This) Tj
1 0 0 1 54 197.4 Tm
(              is called standard Fortran internal file I/O and is exemplified) Tj
1 0 0 1 54 186.9 Tm
(              in the first three lines of the following example.  You can also) Tj
1 0 0 1 54 176.4 Tm
(              catenate substrings of characters to construct the error message.) Tj
1 0 0 1 54 165.9 Tm
(              Here is an example showing the use of both writing to an internal) Tj
1 0 0 1 54 155.4 Tm
(              file and catenating character strings.) Tj
1 0 0 1 54 144.9 Tm
( ) Tj
1 0 0 1 54 134.4 Tm
(                    CHARACTER*5 CHARN, CHARL) Tj
1 0 0 1 54 123.9 Tm
(                    WRITE \(CHARN,10\) N) Tj
1 0 0 1 54 113.4 Tm
(                    WRITE \(CHARL,10\) LDA) Tj
1 0 0 1 54 102.9 Tm
(                 10 FORMAT\(I5\)) Tj
1 0 0 1 54 92.4 Tm
(                    CALL XERMSG \('SLATEC', 'MMPY', 'The order'//CHARN//) Tj
1 0 0 1 54 81.9 Tm
(                   *   ' of the matrix exceeds its row dimension of'//) Tj
ET
Q
endstream
endobj
157 0 obj
5021
endobj
158 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R155 155 0 R
>>
>>
/Contents 156 0 R
>>
endobj
159 0 obj
<< /Type /Font /Name /R159 /Subtype /Type1 /BaseFont /Courier >>
endobj
160 0 obj
<< /Length 161 0 R >>
stream
q
BT
/R159 10 Tf
1 0 0 1 54 711.9 Tm
(                   *   CHARL, 3, 1\)) Tj
1 0 0 1 54 701.4 Tm
( ) Tj
1 0 0 1 54 690.9 Tm
(              There are two subtleties worth mentioning.  One is that the //) Tj
1 0 0 1 54 680.4 Tm
(              for character catenation is used to construct the error message) Tj
1 0 0 1 54 669.9 Tm
(              so that no single character constant is continued to the next) Tj
1 0 0 1 54 659.4 Tm
(              line.  This avoids confusion as to whether there are trailing) Tj
1 0 0 1 54 648.9 Tm
(              blanks at the end of the line.  The second is that by catenating) Tj
1 0 0 1 54 638.4 Tm
(              the parts of the message as an actual argument rather than) Tj
1 0 0 1 54 627.9 Tm
(              encoding the entire message into one large character variable,) Tj
1 0 0 1 54 617.4 Tm
(              we avoid having to know how long the message will be in order to) Tj
1 0 0 1 54 606.9 Tm
(              declare an adequate length for that large character variable.) Tj
1 0 0 1 54 596.4 Tm
(              XERMSG calls XERPRN to print the message using multiple lines if) Tj
1 0 0 1 54 585.9 Tm
(              necessary.  If the message is very long, XERPRN will break it) Tj
1 0 0 1 54 575.4 Tm
(              into pieces of 72 characters \(as requested by XERMSG\) for) Tj
1 0 0 1 54 564.9 Tm
(              printing on multiple lines.  Also, XERMSG asks XERPRN to prefix) Tj
1 0 0 1 54 554.4 Tm
(              each line with ' *  ' so that the total line length could be 76) Tj
1 0 0 1 54 543.9 Tm
(              characters.  Note also that XERPRN scans the error message) Tj
1 0 0 1 54 533.4 Tm
(              backwards to ignore trailing blanks.  Another feature is that the) Tj
1 0 0 1 54 522.9 Tm
(              substring '$$' is treated as a new line sentinel by XERPRN.  If) Tj
1 0 0 1 54 512.4 Tm
(              you want to construct a multiline message without having to count) Tj
1 0 0 1 54 501.9 Tm
(              out multiples of 72 characters, just use '$$' as a separator.) Tj
1 0 0 1 54 491.4 Tm
(              '$$' obviously must occur within 72 characters of the start of) Tj
1 0 0 1 54 480.9 Tm
(              each line to have its intended effect since XERPRN is asked to) Tj
1 0 0 1 54 470.4 Tm
(              wrap around at 72 characters in addition to looking for '$$'.) Tj
1 0 0 1 54 459.9 Tm
( ) Tj
1 0 0 1 54 449.4 Tm
(errornumber   An integer value that is chosen by the library routine's author.) Tj
1 0 0 1 54 438.9 Tm
(              It must be in the range 1 to 999.  Each distinct error should) Tj
1 0 0 1 54 428.4 Tm
(              have its own error number.  These error numbers should be) Tj
1 0 0 1 54 417.9 Tm
(              described in the machine readable documentation for the routine.) Tj
1 0 0 1 54 407.4 Tm
(              The error numbers need be unique only within each routine, so it) Tj
1 0 0 1 54 396.9 Tm
(              is reasonable for each routine to start enumerating errors from 1) Tj
1 0 0 1 54 386.4 Tm
(              and proceeding to the next integer.) Tj
1 0 0 1 54 375.9 Tm
( ) Tj
1 0 0 1 54 365.4 Tm
(level         An integer value in the range 0 to 2 that indicates the level) Tj
1 0 0 1 54 354.9 Tm
(              \(severity\) of the error.  Their meanings are) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(              0  A warning message.  This is used if it is not clear that there) Tj
1 0 0 1 54 323.4 Tm
(                 really is an error, but the user's attention may be needed.) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
(              1  A recoverable error.  This is used even if the error is so) Tj
1 0 0 1 54 291.9 Tm
(                 serious that the routine cannot return any useful answer.  If) Tj
1 0 0 1 54 281.4 Tm
(                 the user has told the error package to return after) Tj
1 0 0 1 54 270.9 Tm
(                 recoverable errors, then XERMSG will return to the Library) Tj
1 0 0 1 54 260.4 Tm
(                 routine which can then return to the user's routine.  The user) Tj
1 0 0 1 54 249.9 Tm
(                 may also permit the error package to terminate the program) Tj
1 0 0 1 54 239.4 Tm
(                 upon encountering a recoverable error.) Tj
1 0 0 1 54 228.9 Tm
( ) Tj
1 0 0 1 54 218.4 Tm
(              2  A fatal error.  XERMSG will not return to its caller after it) Tj
1 0 0 1 54 207.9 Tm
(                 receives a fatal error.  This level should hardly ever be) Tj
1 0 0 1 54 197.4 Tm
(                 used; it is much better to allow the user a chance to recover.) Tj
1 0 0 1 54 186.9 Tm
(                 An example of one of the few cases in which it is permissible) Tj
1 0 0 1 54 176.4 Tm
(                 to declare a level 2 error is a reverse communication Library) Tj
1 0 0 1 54 165.9 Tm
(                 routine that is likely to be called repeatedly until it) Tj
1 0 0 1 54 155.4 Tm
(                 integrates across some interval.  If there is a serious error) Tj
1 0 0 1 54 144.9 Tm
(                 in the input such that another step cannot be taken and the) Tj
1 0 0 1 54 134.4 Tm
(                 Library routine is called again without the input error having) Tj
1 0 0 1 54 123.9 Tm
(                 been corrected by the caller, the Library routine will) Tj
1 0 0 1 54 113.4 Tm
(                 probably be called forever with improper input.  In this case,) Tj
1 0 0 1 54 102.9 Tm
(                 it is reasonable to declare the error to be fatal.) Tj
1 0 0 1 54 92.4 Tm
( ) Tj
1 0 0 1 54 81.9 Tm
(Each of the arguments to XERMSG is input; none will be modified by XERMSG.  A) Tj
ET
Q
endstream
endobj
161 0 obj
5609
endobj
162 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R159 159 0 R
>>
>>
/Contents 160 0 R
>>
endobj
163 0 obj
<< /Type /Font /Name /R163 /Subtype /Type1 /BaseFont /Courier >>
endobj
164 0 obj
<< /Length 165 0 R >>
stream
q
BT
/R163 10 Tf
1 0 0 1 54 711.9 Tm
(routine may make multiple calls to XERMSG with warning level messages; however,) Tj
1 0 0 1 54 701.4 Tm
(after a call to XERMSG with a recoverable error, the routine should return to) Tj
1 0 0 1 54 690.9 Tm
(the user.  Do not try to call XERMSG with a second recoverable error after the) Tj
1 0 0 1 54 680.4 Tm
(first recoverable error because the error package saves the error number.  The) Tj
1 0 0 1 54 669.9 Tm
(user can retrieve this error number by calling another entry point in the error) Tj
1 0 0 1 54 659.4 Tm
(handling package and then clear the error number when recovering from the) Tj
1 0 0 1 54 648.9 Tm
(error.  Calling XERMSG in succession causes the old error number to be) Tj
1 0 0 1 54 638.4 Tm
(overwritten by the latest error number.  This is considered harmless for error) Tj
1 0 0 1 54 627.9 Tm
(numbers associated with warning messages but must not be done for error numbers) Tj
1 0 0 1 54 617.4 Tm
(of serious errors.  After a call to XERMSG with a recoverable error, the user) Tj
1 0 0 1 54 606.9 Tm
(must be given a chance to call NUMXER or XERCLR to retrieve or clear the error) Tj
1 0 0 1 54 596.4 Tm
(number.) Tj
1 0 0 1 54 585.9 Tm
( ) Tj
1 0 0 1 54 575.4 Tm
( ) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
( ) Tj
1 0 0 1 54 543.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 533.4 Tm
( ) Tj
1 0 0 1 54 522.9 Tm
(APPENDIX D.  DISTRIBUTION FILE STRUCTURE) Tj
1 0 0 1 54 512.4 Tm
( ) Tj
1 0 0 1 54 501.9 Tm
(The source files of the SLATEC library distribution tape are ASCII text files.) Tj
1 0 0 1 54 491.4 Tm
(Each line image consists of exactly 80 characters.  The first file of the tape) Tj
1 0 0 1 54 480.9 Tm
(is text file describing the contents of the tape.) Tj
1 0 0 1 54 470.4 Tm
( ) Tj
1 0 0 1 54 459.9 Tm
(The SLATEC source code file has the following characteristics.) Tj
1 0 0 1 54 449.4 Tm
( ) Tj
1 0 0 1 54 438.9 Tm
(1.  All subprograms in the file are in alphabetic order.  The collating) Tj
1 0 0 1 54 428.4 Tm
(    sequence is 0 through 9 and then A through Z.) Tj
1 0 0 1 54 417.9 Tm
( ) Tj
1 0 0 1 54 407.4 Tm
(2.  Before each subprogram, of name for example XYZ, there is a line starting) Tj
1 0 0 1 54 396.9 Tm
(    in column 1 with) Tj
1 0 0 1 54 386.4 Tm
( ) Tj
1 0 0 1 54 375.9 Tm
(    *DECK XYZ) Tj
1 0 0 1 54 365.4 Tm
( ) Tj
1 0 0 1 54 354.9 Tm
(    This allows the source file to be used as input for a source code) Tj
1 0 0 1 54 344.4 Tm
(    maintenance program.) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
(3.  No comments other than the *DECK lines appear between subprograms.) Tj
1 0 0 1 54 312.9 Tm
( ) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
( ) Tj
1 0 0 1 54 281.4 Tm
( ) Tj
1 0 0 1 54 270.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 260.4 Tm
( ) Tj
1 0 0 1 54 249.9 Tm
(APPENDIX E.  SUGGESTED FORMAT FOR A SLATEC SUBPROGRAM) Tj
1 0 0 1 54 239.4 Tm
( ) Tj
1 0 0 1 54 228.9 Tm
(A template embodying the suggested format for a SLATEC subprogram is given) Tj
1 0 0 1 54 218.4 Tm
(below.  As elsewhere in this Guide, the caret \(^\) denotes a required blank) Tj
1 0 0 1 54 207.9 Tm
(character.  These should be replaced with blanks AFTER filling out the) Tj
1 0 0 1 54 197.4 Tm
(template.  The template itself begins with the *DECK line, below.  All) Tj
1 0 0 1 54 186.9 Tm
(occurrences of "NAME" are to be replaced with the actual name of the) Tj
1 0 0 1 54 176.4 Tm
(subprogram, of course.  Items in brackets [] are either explanations or) Tj
1 0 0 1 54 165.9 Tm
(optional information.  Lines that do not have C or * in column 1 are) Tj
1 0 0 1 54 155.4 Tm
(explanatory remarks that are intended to be deleted by the programmer.  In all) Tj
1 0 0 1 54 144.9 Tm
(cases where "or" is used, exactly one of the indicated forms must occur.) Tj
1 0 0 1 54 134.4 Tm
( ) Tj
1 0 0 1 54 123.9 Tm
(Lines that begin with C*** are standard SLATEC lines.  These must be in the) Tj
1 0 0 1 54 113.4 Tm
(indicated order.  See Section 8 of this Guide for information on required vs) Tj
1 0 0 1 54 102.9 Tm
(optional lines.  In all but the C***DESCRIPTION section, the exact spacing and) Tj
1 0 0 1 54 92.4 Tm
(punctuation are as mandated by this Guide.  Spacing within this section is only) Tj
1 0 0 1 54 81.9 Tm
(suggestive, except as noted below.  The SLATEC standard mandates that no other) Tj
ET
Q
endstream
endobj
165 0 obj
4422
endobj
166 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R163 163 0 R
>>
>>
/Contents 164 0 R
>>
endobj
167 0 obj
<< /Type /Font /Name /R167 /Subtype /Type1 /BaseFont /Courier >>
endobj
168 0 obj
<< /Length 169 0 R >>
stream
q
BT
/R167 10 Tf
1 0 0 1 54 711.9 Tm
(comments may begin "C***".  All other lines between the C***BEGIN^PROLOGUE) Tj
1 0 0 1 54 701.4 Tm
(and the C***END^PROLOGUE must be comment lines with "C^" in columns 1-2.) Tj
1 0 0 1 54 690.9 Tm
( ) Tj
1 0 0 1 54 680.4 Tm
(Within the C***DESCRIPTION section, lines that begin with "C^*" are for the) Tj
1 0 0 1 54 669.9 Tm
(LLNL LDOC standard [9].  If present, these lines must be exactly as given here.) Tj
1 0 0 1 54 659.4 Tm
(They should be in the indicated order.  All other lines in this section must) Tj
1 0 0 1 54 648.9 Tm
(have "C^^" in columns 1-3.) Tj
1 0 0 1 54 638.4 Tm
( ) Tj
1 0 0 1 54 627.9 Tm
(In the Arguments subsection, each argument must be followed by exactly one) Tj
1 0 0 1 54 617.4 Tm
(argument qualifier.  The qualifier must be preceded by a colon and followed) Tj
1 0 0 1 54 606.9 Tm
(by at least one blank.  The allowable qualifiers and their meanings follow.) Tj
1 0 0 1 54 596.4 Tm
( ) Tj
1 0 0 1 54 585.9 Tm
(  Qualifier     Meaning) Tj
1 0 0 1 54 575.4 Tm
(  ---------    ---------) Tj
1 0 0 1 54 564.9 Tm
(   :IN      input variable.  Must be set by the user prior to the call) Tj
1 0 0 1 54 554.4 Tm
(            \(unless otherwise indicated\).  Must NOT be changed by the) Tj
1 0 0 1 54 543.9 Tm
(            routine under any circumstances.) Tj
1 0 0 1 54 533.4 Tm
(   :OUT     output variable.  Values will be set by the routine.) Tj
1 0 0 1 54 522.9 Tm
(            Must be initialized before first usage in the routine.) Tj
1 0 0 1 54 512.4 Tm
(   :INOUT   input/output variable.  Must be set by the user prior to) Tj
1 0 0 1 54 501.9 Tm
(            the call \(as indicated in argument description\); value\(s\)) Tj
1 0 0 1 54 491.4 Tm
(            may be set or changed by the routine.) Tj
1 0 0 1 54 480.9 Tm
(   :WORK    workspace.  Simply working storage required by the routine.) Tj
1 0 0 1 54 470.4 Tm
(            Need not be set prior to the call and will not contain) Tj
1 0 0 1 54 459.9 Tm
(            information meaningful to the user on return.  \(Some) Tj
1 0 0 1 54 449.4 Tm
(            routines require the contents of a work array to remain) Tj
1 0 0 1 54 438.9 Tm
(            unchanged between successive calls.  Such usage should be) Tj
1 0 0 1 54 428.4 Tm
(            carefully explained in the argument description.\)) Tj
1 0 0 1 54 417.9 Tm
(   :EXT     external procedure.  The actual argument must be the name of) Tj
1 0 0 1 54 407.4 Tm
(            a SUBROUTINE, FUNCTION, or BLOCK DATA subprogram.  It must) Tj
1 0 0 1 54 396.9 Tm
(            appear in an EXTERNAL statement in the calling program.  The) Tj
1 0 0 1 54 386.4 Tm
(            argument description following should precisely specify the) Tj
1 0 0 1 54 375.9 Tm
(            expected calling sequence.) Tj
1 0 0 1 54 365.4 Tm
(   :DUMMY   dummy argument.  Need not be set by user; will not be) Tj
1 0 0 1 54 354.9 Tm
(            referenced by the routine.  [Use discouraged!]) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
(To avoid potential problems with automatic formatting of argument descriptions,) Tj
1 0 0 1 54 323.4 Tm
(none of these key words should appear anywhere else in the text immediately) Tj
1 0 0 1 54 312.9 Tm
(preceded by a colon.) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(NOTES:) Tj
1 0 0 1 54 281.4 Tm
(   1. Make a template by copying the following "*DECK^NAME" through) Tj
1 0 0 1 54 270.9 Tm
(      "^^^^^^END" lines, inclusive, from this Guide.) Tj
1 0 0 1 54 260.4 Tm
(   2. You will probably want to customize this template by filling) Tj
1 0 0 1 54 249.9 Tm
(      in the C***AUTHOR section and adding other things you customarily) Tj
1 0 0 1 54 239.4 Tm
(      include in your prologues.  If all of your routines are in the same) Tj
1 0 0 1 54 228.9 Tm
(      category\(ies\), you may wish to fill in the C***CATEGORY and) Tj
1 0 0 1 54 218.4 Tm
(      C***KEYWORDS sections, too.  Be sure to eliminate the brackets [].) Tj
1 0 0 1 54 207.9 Tm
(   3. Be sure to delete the "C***SUBSIDIARY" line if this is a user-) Tj
1 0 0 1 54 197.4 Tm
(      callable routine.) Tj
1 0 0 1 54 186.9 Tm
( ) Tj
1 0 0 1 54 176.4 Tm
( ) Tj
1 0 0 1 54 165.9 Tm
(*DECK^NAME) Tj
1 0 0 1 54 155.4 Tm
(^^^^^^SUBROUTINE^NAME[^\(ARG1[,^ARG2[,^...]]\)]               or) Tj
1 0 0 1 54 144.9 Tm
(^^^^^^FUNCTION^NAME^\(ARG1[,^ARG2[,^...]]\)                   or) Tj
1 0 0 1 54 134.4 Tm
(^^^^^^COMPLEX^FUNCTION^NAME^\(ARG1[,^ARG2[,^...]]\)           or) Tj
1 0 0 1 54 123.9 Tm
(^^^^^^DOUBLE^PRECISION^FUNCTION^NAME^\(ARG1[,^ARG2[,^...]]\)  or) Tj
1 0 0 1 54 113.4 Tm
(^^^^^^INTEGER^FUNCTION^NAME^\(ARG1[,^ARG2[,^...]]\)           or) Tj
1 0 0 1 54 102.9 Tm
(^^^^^^REAL^FUNCTION^NAME^\(ARG1[,^ARG2[,^...]]\)              or) Tj
1 0 0 1 54 92.4 Tm
(^^^^^^LOGICAL^FUNCTION^NAME^\(ARG1[,^ARG2[,^...]]\)           or) Tj
1 0 0 1 54 81.9 Tm
(^^^^^^CHARACTER[*len]^FUNCTION^NAME^\(ARG1[,^ARG2[,^...]]\)) Tj
ET
Q
endstream
endobj
169 0 obj
4893
endobj
170 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R167 167 0 R
>>
>>
/Contents 168 0 R
>>
endobj
171 0 obj
<< /Type /Font /Name /R171 /Subtype /Type1 /BaseFont /Courier >>
endobj
172 0 obj
<< /Length 173 0 R >>
stream
q
BT
/R171 10 Tf
1 0 0 1 54 711.9 Tm
(C***BEGIN^PROLOGUE^^NAME) Tj
1 0 0 1 54 701.4 Tm
(C***SUBSIDIARY) Tj
1 0 0 1 54 690.9 Tm
(C***PURPOSE^^Brief \(1-6 lines\) summary of the purpose of this routine.) Tj
1 0 0 1 54 680.4 Tm
(C^^^^^^^^^^^^\(To best fit LDOC standards, first line should be suitable) Tj
1 0 0 1 54 669.9 Tm
(C^^^^^^^^^^^^for a table of contents entry for this routine.\)) Tj
1 0 0 1 54 659.4 Tm
(C***LIBRARY^^^SLATEC[^\(Package\)]) Tj
1 0 0 1 54 648.9 Tm
(C***CATEGORY^^CAT1[,^CAT2]) Tj
1 0 0 1 54 638.4 Tm
(C***TYPE^^^^^^SINGLE PRECISION^\(NAME-S,^DNAME-D\)) Tj
1 0 0 1 54 627.9 Tm
(C***KEYWORDS^^KEY1[,^KEY2[,) Tj
1 0 0 1 54 617.4 Tm
(C^^^^^^^^^^^^^MORE]]) Tj
1 0 0 1 54 606.9 Tm
(C***AUTHOR^^Last-name[,^First-name[,^\(Organization\)]][) Tj
1 0 0 1 54 596.4 Tm
(C^^^^^^^^^^^^^More information][) Tj
1 0 0 1 54 585.9 Tm
(C^^^^^^^^^^^Second-last-name[,^First-name[,^\(Organization\)]][) Tj
1 0 0 1 54 575.4 Tm
(C^^^^^^^^^^^^^More information]]) Tj
1 0 0 1 54 564.9 Tm
(C***DESCRIPTION) Tj
1 0 0 1 54 554.4 Tm
(C^^) Tj
1 0 0 1 54 543.9 Tm
(C^*Usage:) Tj
1 0 0 1 54 533.4 Tm
(C^^ This subsection should have declarations for all arguments to the) Tj
1 0 0 1 54 522.9 Tm
(C^^   routine and a model call of the routine.  Use the actual names of) Tj
1 0 0 1 54 512.4 Tm
(C^^   the arguments here. Ideally, arguments should be named in a way) Tj
1 0 0 1 54 501.9 Tm
(C^^   that suggests their meaning.) Tj
1 0 0 1 54 491.4 Tm
(C^^ The following example illustrates the use of dummy identifiers \(in) Tj
1 0 0 1 54 480.9 Tm
(C^^   lower case\) to indicate that the required size of an array is) Tj
1 0 0 1 54 470.4 Tm
(C^^   some function of the values of the other arguments.  This may not) Tj
1 0 0 1 54 459.9 Tm
(C^^   be legal Fortran, but should be easier for a knowledgeable user) Tj
1 0 0 1 54 449.4 Tm
(C^^   to understand than giving the required size somewhere else.) Tj
1 0 0 1 54 438.9 Tm
(C^^) Tj
1 0 0 1 54 428.4 Tm
(C^^      INTEGER  M, N, MDIMA, IERR) Tj
1 0 0 1 54 417.9 Tm
(C^^      PARAMETER  \(nfcns = 6, nwks = 3*nfcns+M+7\)) Tj
1 0 0 1 54 407.4 Tm
(C^^      REAL  X\(nmax\), A\(MDIMA,nmax\), FCNS\(nfcns\), WKS\(nwks\)) Tj
1 0 0 1 54 396.9 Tm
(C^^) Tj
1 0 0 1 54 386.4 Tm
(C^^      CALL NAME \(M, N, X, A, MDIMA, FCNS, WKS, IERR\)) Tj
1 0 0 1 54 375.9 Tm
(C^^) Tj
1 0 0 1 54 365.4 Tm
(C^*Arguments:) Tj
1 0 0 1 54 354.9 Tm
(C^^ Arguments should be described in exactly the same order as in the) Tj
1 0 0 1 54 344.4 Tm
(C^^   CALL list.  Include any restrictions, etc.) Tj
1 0 0 1 54 333.9 Tm
(C^^ The following illustrates the recommended form of argument descrip-) Tj
1 0 0 1 54 323.4 Tm
(C^^   tions for the example given above.  Note the use of qualifiers.) Tj
1 0 0 1 54 312.9 Tm
(C^^) Tj
1 0 0 1 54 302.4 Tm
(C^^   M :IN^    is the number of data points.) Tj
1 0 0 1 54 291.9 Tm
(C^^) Tj
1 0 0 1 54 281.4 Tm
(C^^   N :IN^    is the number of unknowns.  \(Must have  0.lt.N.le.M .\)) Tj
1 0 0 1 54 270.9 Tm
(C^^) Tj
1 0 0 1 54 260.4 Tm
(C^^   X :IN^    is a real array containing ...) Tj
1 0 0 1 54 249.9 Tm
(C^^             \(The dimensioned length of X must be at least N.\)) Tj
1 0 0 1 54 239.4 Tm
(C^^) Tj
1 0 0 1 54 228.9 Tm
(C^^   A :INOUT^ should contain ... on input; will be destroyed on) Tj
1 0 0 1 54 218.4 Tm
(C^^             return.  \(The second dimension of A must be at least N.\)) Tj
1 0 0 1 54 207.9 Tm
(C^^) Tj
1 0 0 1 54 197.4 Tm
(C^^   MDIMA:IN^ is the first dimension of array A.) Tj
1 0 0 1 54 186.9 Tm
(C^^             \(Must have  M.le.MDIMA .\)) Tj
1 0 0 1 54 176.4 Tm
(C^^) Tj
1 0 0 1 54 165.9 Tm
(C^^   FCNS:OUT^ will contain the six summary functions based on ...) Tj
1 0 0 1 54 155.4 Tm
(C^^) Tj
1 0 0 1 54 144.9 Tm
(C^^   WKS:WORK^ is a real array of working storage.  Its length is a) Tj
1 0 0 1 54 134.4 Tm
(C^^             function of the length of FCNS and the number of data) Tj
1 0 0 1 54 123.9 Tm
(C^^             points, as indicated above.) Tj
1 0 0 1 54 113.4 Tm
(C^^) Tj
1 0 0 1 54 102.9 Tm
(C^^   IERR:OUT^ is an error flag with the following possible values:) Tj
1 0 0 1 54 92.4 Tm
(C^^             Normal return:) Tj
1 0 0 1 54 81.9 Tm
(C^^                IERR = 0  \(no errors\)) Tj
ET
Q
endstream
endobj
173 0 obj
4170
endobj
174 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R171 171 0 R
>>
>>
/Contents 172 0 R
>>
endobj
175 0 obj
<< /Type /Font /Name /R175 /Subtype /Type1 /BaseFont /Courier >>
endobj
176 0 obj
<< /Length 177 0 R >>
stream
q
BT
/R175 10 Tf
1 0 0 1 54 711.9 Tm
(C^^             Warning error:) Tj
1 0 0 1 54 701.4 Tm
(C^^                IERR > 0  means what?) Tj
1 0 0 1 54 690.9 Tm
(C^^             "Recoverable" errors:) Tj
1 0 0 1 54 680.4 Tm
(C^^                IERR =-1  if M < 1 or N < 1 .) Tj
1 0 0 1 54 669.9 Tm
(C^^                IERR =-2  if M > MDIMA .) Tj
1 0 0 1 54 659.4 Tm
(C^^                IERR =-3  means what?) Tj
1 0 0 1 54 648.9 Tm
(C^^) Tj
1 0 0 1 54 638.4 Tm
(C^*Function^Return^Values:) Tj
1 0 0 1 54 627.9 Tm
(C^^ This subsection is present only in a FUNCTION subprogram.) Tj
1 0 0 1 54 617.4 Tm
(C^^ In case of an integer- or character-valued function with a discrete) Tj
1 0 0 1 54 606.9 Tm
(C^^   set of values, list all possible return values, with their) Tj
1 0 0 1 54 596.4 Tm
(C^^   meanings, in the following form.  [The colon is significant.]) Tj
1 0 0 1 54 585.9 Tm
(C^^      value : meaning) Tj
1 0 0 1 54 575.4 Tm
(C^^   Otherwise, something of the following sort is acceptable.) Tj
1 0 0 1 54 564.9 Tm
(C^^      SQRT : the square root of X.) Tj
1 0 0 1 54 554.4 Tm
(C^^) Tj
1 0 0 1 54 543.9 Tm
(C^*Description:) Tj
1 0 0 1 54 533.4 Tm
(C^^ One or more paragraphs describing the intended routine use,) Tj
1 0 0 1 54 522.9 Tm
(C^^   dependencies on other routines, etc.  Specific algorithm) Tj
1 0 0 1 54 512.4 Tm
(C^^   descriptions could go here, if appropriate.) Tj
1 0 0 1 54 501.9 Tm
(C^^ The emphasis should be on information useful to a user \(as opposed) Tj
1 0 0 1 54 491.4 Tm
(C^^   to developer or maintainer\) of the routine.) Tj
1 0 0 1 54 480.9 Tm
(C^^) Tj
1 0 0 1 54 470.4 Tm
(C^*Examples:) Tj
1 0 0 1 54 459.9 Tm
(C^^ Detailed examples of usage would go here, if desired.) Tj
1 0 0 1 54 449.4 Tm
(C^^) Tj
1 0 0 1 54 438.9 Tm
(C^*Accuracy:) Tj
1 0 0 1 54 428.4 Tm
(C^^ This optional subsection contains notes on the accuracy or) Tj
1 0 0 1 54 417.9 Tm
(C^^   precision of the results computed by the routine.) Tj
1 0 0 1 54 407.4 Tm
(C^^) Tj
1 0 0 1 54 396.9 Tm
(C^*Cautions:) Tj
1 0 0 1 54 386.4 Tm
(C^^ List any known problems or potentially hazardous side effects) Tj
1 0 0 1 54 375.9 Tm
(C^^   that are not otherwise described, such as not being safe for) Tj
1 0 0 1 54 365.4 Tm
(C^^   multiprocessing or exceptional cases for arguments.) Tj
1 0 0 1 54 354.9 Tm
(C^^   \(Ideally, there should be none in a SLATEC routine!\)) Tj
1 0 0 1 54 344.4 Tm
(C^^) Tj
1 0 0 1 54 333.9 Tm
(C^*See^Also:) Tj
1 0 0 1 54 323.4 Tm
(C^^ This subsection would contain notes that refer to other library) Tj
1 0 0 1 54 312.9 Tm
(C^^   routines that interrelate to this routine in important ways.) Tj
1 0 0 1 54 302.4 Tm
(C^^   Examples include a solver for a LU factorization routine or an) Tj
1 0 0 1 54 291.9 Tm
(C^^   evaluator for an interpolation or approximation routine.) Tj
1 0 0 1 54 281.4 Tm
(C^^ This subsection may amplify information in the C***SEE ALSO) Tj
1 0 0 1 54 270.9 Tm
(C^^   section, below, which should appear only if the prologue of the) Tj
1 0 0 1 54 260.4 Tm
(C^^   listed routine\(s\) contains documentation for this routine.) Tj
1 0 0 1 54 249.9 Tm
(C^^) Tj
1 0 0 1 54 239.4 Tm
(C^*Long^Description:) Tj
1 0 0 1 54 228.9 Tm
(C^^ An optional subsection containing much more detailed information.) Tj
1 0 0 1 54 218.4 Tm
(C^^) Tj
1 0 0 1 54 207.9 Tm
(C***SEE^ALSO^^RTN1[,^RTN2[,) Tj
1 0 0 1 54 197.4 Tm
(C^^^^^^^^^^^^^RTNn]]) Tj
1 0 0 1 54 186.9 Tm
(C***REFERENCES^^\(NONE\)              or) Tj
1 0 0 1 54 176.4 Tm
(C***REFERENCES^^1. Reference 1 ...) Tj
1 0 0 1 54 165.9 Tm
(C^^^^^^^^^^^^^^^^^Continuation of reference 1.) Tj
1 0 0 1 54 155.4 Tm
(C^^^^^^^^^^^^^^^2. Reference 2 ...) Tj
1 0 0 1 54 144.9 Tm
(C^^^^^^^^^^^^^^^^^Continuation of reference 2.) Tj
1 0 0 1 54 134.4 Tm
(C***ROUTINES^CALLED^^\(NONE\)         or) Tj
1 0 0 1 54 123.9 Tm
(C***ROUTINES^CALLED^^RTN1[,^RTN2[,) Tj
1 0 0 1 54 113.4 Tm
(C^^^^^^^^^^^^^^^^^^^^RTNn]]) Tj
1 0 0 1 54 102.9 Tm
(   [Do not include standard Fortran intrinsics or externals.]) Tj
1 0 0 1 54 92.4 Tm
(C***COMMON^BLOCKS^^^^BLOCK1[,^BLOCK2]) Tj
1 0 0 1 54 81.9 Tm
(C***REVISION^HISTORY^^\(YYMMDD\)) Tj
ET
Q
endstream
endobj
177 0 obj
4089
endobj
178 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R175 175 0 R
>>
>>
/Contents 176 0 R
>>
endobj
179 0 obj
<< /Type /Font /Name /R179 /Subtype /Type1 /BaseFont /Courier >>
endobj
180 0 obj
<< /Length 181 0 R >>
stream
q
BT
/R179 10 Tf
1 0 0 1 54 711.9 Tm
(   [ This section should contain a record of the origin and ]) Tj
1 0 0 1 54 701.4 Tm
(   [ modification history of this routine.                  ]) Tj
1 0 0 1 54 690.9 Tm
(C^^^871105^^DATE^WRITTEN) Tj
1 0 0 1 54 680.4 Tm
(C^^^880121^^Various editorial changes.       \(Version 6\)) Tj
1 0 0 1 54 669.9 Tm
(C^^^881102^^Converted to new SLATEC format.  \(Version 7\)) Tj
1 0 0 1 54 659.4 Tm
(C^^^881128^^Various editorial changes.       \(Version 8\)) Tj
1 0 0 1 54 648.9 Tm
(C^) Tj
1 0 0 1 54 638.4 Tm
(C***END^PROLOGUE^^NAME) Tj
1 0 0 1 54 627.9 Tm
(C) Tj
1 0 0 1 54 617.4 Tm
(C*Internal Notes:) Tj
1 0 0 1 54 606.9 Tm
(C   Implementation notes that explain details of the routine's design) Tj
1 0 0 1 54 596.4 Tm
(C     or coding, tricky dependencies that might trip up a maintainer) Tj
1 0 0 1 54 585.9 Tm
(C     later, environmental assumptions made, alternate designs that) Tj
1 0 0 1 54 575.4 Tm
(C     were considered but not used, etc.) Tj
1 0 0 1 54 564.9 Tm
(C   Details on contents of common blocks referenced, locks used, etc.,) Tj
1 0 0 1 54 554.4 Tm
(C     would go here.) Tj
1 0 0 1 54 543.9 Tm
(C   Emphasis is on INTERNALLY useful information.) Tj
1 0 0 1 54 533.4 Tm
(C) Tj
1 0 0 1 54 522.9 Tm
(C**End) Tj
1 0 0 1 54 512.4 Tm
(C) Tj
1 0 0 1 54 501.9 Tm
(C  Additional comments that are not appropriate even for an internal) Tj
1 0 0 1 54 491.4 Tm
(C  document, but which the programmer feels should precede declarations.) Tj
1 0 0 1 54 480.9 Tm
(C) Tj
1 0 0 1 54 470.4 Tm
(C  Declare arguments.) Tj
1 0 0 1 54 459.9 Tm
(C) Tj
1 0 0 1 54 449.4 Tm
(   < Declarations >) Tj
1 0 0 1 54 438.9 Tm
(C) Tj
1 0 0 1 54 428.4 Tm
(C  Declare local variables.) Tj
1 0 0 1 54 417.9 Tm
(C) Tj
1 0 0 1 54 407.4 Tm
(   < Declarations >) Tj
1 0 0 1 54 396.9 Tm
(C) Tj
1 0 0 1 54 386.4 Tm
(C***FIRST^EXECUTABLE^STATEMENT^^NAME) Tj
1 0 0 1 54 375.9 Tm
(   < Body of NAME >) Tj
1 0 0 1 54 365.4 Tm
(^^^^^^END) Tj
1 0 0 1 54 354.9 Tm
( ) Tj
1 0 0 1 54 344.4 Tm
( ) Tj
1 0 0 1 54 333.9 Tm
( ) Tj
1 0 0 1 54 323.4 Tm
( ) Tj
1 0 0 1 54 312.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 302.4 Tm
( ) Tj
1 0 0 1 54 291.9 Tm
(ACKNOWLEDGEMENT) Tj
1 0 0 1 54 281.4 Tm
( ) Tj
1 0 0 1 54 270.9 Tm
(The authors wish to acknowledge the assistance provided by  Dr. Frederick N.) Tj
1 0 0 1 54 260.4 Tm
(Fritsch of the Computing and Mathematics Research Division, Lawrence Livermore) Tj
1 0 0 1 54 249.9 Tm
(National Laboratory, who wrote Appendix E and made corrections and comments on) Tj
1 0 0 1 54 239.4 Tm
(the manuscript.) Tj
1 0 0 1 54 228.9 Tm
( ) Tj
1 0 0 1 54 218.4 Tm
( ) Tj
1 0 0 1 54 207.9 Tm
( ) Tj
1 0 0 1 54 197.4 Tm
( ) Tj
1 0 0 1 54 186.9 Tm
(*******************************************************************************) Tj
1 0 0 1 54 176.4 Tm
( ) Tj
1 0 0 1 54 165.9 Tm
(REFERENCES) Tj
1 0 0 1 54 155.4 Tm
( ) Tj
1 0 0 1 54 144.9 Tm
([1]  W. H. Vandevender and K. H. Haskell, The SLATEC mathematical subroutine) Tj
1 0 0 1 54 134.4 Tm
(     library, SIGNUM Newsletter, 17, 3 \(September 1982\), pp. 16-21.) Tj
1 0 0 1 54 123.9 Tm
( ) Tj
1 0 0 1 54 113.4 Tm
([2]  P. A. Fox, A. D. Hall and N. L. Schryer, The PORT mathematical subroutine) Tj
1 0 0 1 54 102.9 Tm
(     library, ACM Transactions on Mathematical Software, 4, 2 \(June 1978\), pp.) Tj
1 0 0 1 54 92.4 Tm
(     104-126.) Tj
1 0 0 1 54 81.9 Tm
( ) Tj
ET
Q
endstream
endobj
181 0 obj
3414
endobj
182 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R179 179 0 R
>>
>>
/Contents 180 0 R
>>
endobj
183 0 obj
<< /Type /Font /Name /R183 /Subtype /Type1 /BaseFont /Courier >>
endobj
184 0 obj
<< /Length 185 0 R >>
stream
q
BT
/R183 10 Tf
1 0 0 1 54 711.9 Tm
([3]  P. A. Fox, A. D. Hall and N. L. Schryer, Algorithm 528: framework for a) Tj
1 0 0 1 54 701.4 Tm
(     portable library, ACM Transactions on Mathematical Software, 4, 2 \(June) Tj
1 0 0 1 54 690.9 Tm
(     1978\), pp. 177-188.) Tj
1 0 0 1 54 680.4 Tm
( ) Tj
1 0 0 1 54 669.9 Tm
([4]  R. E. Jones and D. K. Kahaner, XERROR, the SLATEC error-handling package,) Tj
1 0 0 1 54 659.4 Tm
(     Software - Practice and Experience, 13, 3 \(March 1983\), pp. 251-257.) Tj
1 0 0 1 54 648.9 Tm
( ) Tj
1 0 0 1 54 638.4 Tm
([5]  R. F. Boisvert, S. E. Howe and D. K. Kahaner, GAMS: a framework for the) Tj
1 0 0 1 54 627.9 Tm
(     management of scientific software, ACM Transactions on Mathematical) Tj
1 0 0 1 54 617.4 Tm
(     Software, 11, 4 \(December 1985\), pp. 313-355.) Tj
1 0 0 1 54 606.9 Tm
( ) Tj
1 0 0 1 54 596.4 Tm
([6]  American National Standard Programming Language FORTRAN, ANSI X3.9-1978,) Tj
1 0 0 1 54 585.9 Tm
(     American National Standards Institute, 1430 Broadway, New York, New York) Tj
1 0 0 1 54 575.4 Tm
(     10018, April 1978.) Tj
1 0 0 1 54 564.9 Tm
( ) Tj
1 0 0 1 54 554.4 Tm
([7]  W. S. Brown, A simple but realistic model of floating point computation,) Tj
1 0 0 1 54 543.9 Tm
(     ACM Transactions on Mathematical Software, 7, 4 \(December 1981\), pp.) Tj
1 0 0 1 54 533.4 Tm
(     445-480.) Tj
1 0 0 1 54 522.9 Tm
( ) Tj
1 0 0 1 54 512.4 Tm
([8]  F. N. Fritsch, SLATEC/LDOC prologue: template and conversion program,) Tj
1 0 0 1 54 501.9 Tm
(     Report UCID-21357, Rev.1, Lawrence Livermore National Laboratory,) Tj
1 0 0 1 54 491.4 Tm
(     Livermore, California, November 1988.) Tj
1 0 0 1 54 480.9 Tm
( ) Tj
ET
Q
endstream
endobj
185 0 obj
1685
endobj
186 0 obj
<<
/Type /Page
/MediaBox [0 0 612 792]
/Parent 2 0 R
/Resources << /ProcSet [/PDF /Text]
/Font <<
/R183 183 0 R
>>
>>
/Contents 184 0 R
>>
endobj
2 0 obj
<< /Type /Pages /Kids [
6 0 R
10 0 R
14 0 R
18 0 R
22 0 R
26 0 R
30 0 R
34 0 R
38 0 R
42 0 R
46 0 R
50 0 R
54 0 R
58 0 R
62 0 R
66 0 R
70 0 R
74 0 R
78 0 R
82 0 R
86 0 R
90 0 R
94 0 R
98 0 R
102 0 R
106 0 R
110 0 R
114 0 R
118 0 R
122 0 R
126 0 R
130 0 R
134 0 R
138 0 R
142 0 R
146 0 R
150 0 R
154 0 R
158 0 R
162 0 R
166 0 R
170 0 R
174 0 R
178 0 R
182 0 R
186 0 R
] /Count 46
>>
endobj
1 0 obj
<< /Type /Catalog /Pages 2 0 R
>>
endobj
187 0 obj
<< /CreationDate (D:20021029063840)
/Producer (Aladdin Ghostscript 4.03)
>>
endobj
xref
0 188
0000000000 65535 f 
0000199813 00000 n 
0000199416 00000 n 
0000000009 00000 n 
0000000087 00000 n 
0000003733 00000 n 
0000003753 00000 n 
0000003901 00000 n 
0000003979 00000 n 
0000008789 00000 n 
0000008809 00000 n 
0000008958 00000 n 
0000009038 00000 n 
0000012816 00000 n 
0000012837 00000 n 
0000012989 00000 n 
0000013069 00000 n 
0000017833 00000 n 
0000017854 00000 n 
0000018006 00000 n 
0000018086 00000 n 
0000023159 00000 n 
0000023180 00000 n 
0000023332 00000 n 
0000023412 00000 n 
0000028345 00000 n 
0000028366 00000 n 
0000028518 00000 n 
0000028598 00000 n 
0000032810 00000 n 
0000032831 00000 n 
0000032983 00000 n 
0000033063 00000 n 
0000037399 00000 n 
0000037420 00000 n 
0000037572 00000 n 
0000037652 00000 n 
0000041781 00000 n 
0000041802 00000 n 
0000041954 00000 n 
0000042034 00000 n 
0000046794 00000 n 
0000046815 00000 n 
0000046967 00000 n 
0000047047 00000 n 
0000051486 00000 n 
0000051507 00000 n 
0000051659 00000 n 
0000051739 00000 n 
0000056189 00000 n 
0000056210 00000 n 
0000056362 00000 n 
0000056442 00000 n 
0000060526 00000 n 
0000060547 00000 n 
0000060699 00000 n 
0000060779 00000 n 
0000064584 00000 n 
0000064605 00000 n 
0000064757 00000 n 
0000064837 00000 n 
0000068416 00000 n 
0000068437 00000 n 
0000068589 00000 n 
0000068669 00000 n 
0000073175 00000 n 
0000073196 00000 n 
0000073348 00000 n 
0000073428 00000 n 
0000078029 00000 n 
0000078050 00000 n 
0000078202 00000 n 
0000078282 00000 n 
0000082890 00000 n 
0000082911 00000 n 
0000083063 00000 n 
0000083143 00000 n 
0000087222 00000 n 
0000087243 00000 n 
0000087395 00000 n 
0000087475 00000 n 
0000091235 00000 n 
0000091256 00000 n 
0000091408 00000 n 
0000091488 00000 n 
0000094892 00000 n 
0000094913 00000 n 
0000095065 00000 n 
0000095145 00000 n 
0000098252 00000 n 
0000098273 00000 n 
0000098425 00000 n 
0000098505 00000 n 
0000102179 00000 n 
0000102200 00000 n 
0000102352 00000 n 
0000102432 00000 n 
0000105420 00000 n 
0000105441 00000 n 
0000105593 00000 n 
0000105673 00000 n 
0000109118 00000 n 
0000109140 00000 n 
0000109294 00000 n 
0000109376 00000 n 
0000113302 00000 n 
0000113324 00000 n 
0000113480 00000 n 
0000113562 00000 n 
0000117882 00000 n 
0000117904 00000 n 
0000118060 00000 n 
0000118142 00000 n 
0000121838 00000 n 
0000121860 00000 n 
0000122016 00000 n 
0000122098 00000 n 
0000125478 00000 n 
0000125500 00000 n 
0000125656 00000 n 
0000125738 00000 n 
0000129300 00000 n 
0000129322 00000 n 
0000129478 00000 n 
0000129560 00000 n 
0000133109 00000 n 
0000133131 00000 n 
0000133287 00000 n 
0000133369 00000 n 
0000136656 00000 n 
0000136678 00000 n 
0000136834 00000 n 
0000136916 00000 n 
0000140025 00000 n 
0000140047 00000 n 
0000140203 00000 n 
0000140285 00000 n 
0000143977 00000 n 
0000143999 00000 n 
0000144155 00000 n 
0000144237 00000 n 
0000149102 00000 n 
0000149124 00000 n 
0000149280 00000 n 
0000149362 00000 n 
0000153032 00000 n 
0000153054 00000 n 
0000153210 00000 n 
0000153292 00000 n 
0000157925 00000 n 
0000157947 00000 n 
0000158103 00000 n 
0000158185 00000 n 
0000163407 00000 n 
0000163429 00000 n 
0000163585 00000 n 
0000163667 00000 n 
0000168744 00000 n 
0000168766 00000 n 
0000168922 00000 n 
0000169004 00000 n 
0000174669 00000 n 
0000174691 00000 n 
0000174847 00000 n 
0000174929 00000 n 
0000179407 00000 n 
0000179429 00000 n 
0000179585 00000 n 
0000179667 00000 n 
0000184616 00000 n 
0000184638 00000 n 
0000184794 00000 n 
0000184876 00000 n 
0000189102 00000 n 
0000189124 00000 n 
0000189280 00000 n 
0000189362 00000 n 
0000193507 00000 n 
0000193529 00000 n 
0000193685 00000 n 
0000193767 00000 n 
0000197237 00000 n 
0000197259 00000 n 
0000197415 00000 n 
0000197497 00000 n 
0000199238 00000 n 
0000199260 00000 n 
0000199862 00000 n 
trailer
<< /Size 188 /Root 1 0 R /Info 187 0 R
>>
startxref
199955
%%EOF
